-
  label: ChozoStatueEcho
  addr:
    U: 0x125E8
    E: 0x1269C
    J: 0x125E8
  size: 0x160
  mode: thumb
  params:
  - label: Stage
    type: u8
  return: null
  notes: Spawns a new chozo statue movement secondary sprite
-
  label: ChozoStatueMovement_AI
  addr:
    U: 0x12748
    E: 0x127FC
    J: 0x12748
  size: 0x38
  mode: thumb
  params: null
  return: null
-
  label: WaterDropInit
  addr:
    U: 0x12780
    E: 0x12834
    J: 0x12780
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Initialize a water drop sprite
-
  label: WaterDrop_AI
  addr:
    U: 0x127AC
    E: 0x12860
    J: 0x127AC
  size: 0x288
  mode: thumb
  params: null
  return: null
-
  label: Explosion_ZebesEscape_AI
  addr:
    U: 0x12A34
    E: 0x12AE8
    J: 0x12A34
  size: 0x2E0
  mode: thumb
  params: null
  return: null
-
  label: EnemyDropInit
  addr:
    U: 0x12D14
    E: 0x12DC8
    J: 0x12D14
  size: 0x184
  mode: thumb
  params: null
  return: null
  notes: Initialize an enemy drop sprite
-
  label: EnemyDropGet
  addr:
    U: 0x12E98
    E: 0x12F4C
    J: 0x12E98
  size: 0x158
  mode: thumb
  params: null
  return: null
  notes: Samus and enemy drop collision handler
-
  label: EnemyDrop_AI
  addr:
    U: 0x12FF0
    E: 0x130A4
    J: 0x12FF0
  size: 0x34
  mode: thumb
  params: null
  return: null
-
  label: UnusedPrimarySprite_0_to_10_AI
  addr:
    U: 0x13024
    E: 0x130D8
    J: 0x13024
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Unused primary sprites 0-10 AI
-
  label: MorphBallInit
  addr:
    U: 0x13080
    E: 0x13134
    J: 0x13080
  size: 0xAC
  mode: thumb
  params: null
  return: null
  notes: Initialize a morph ball sprite
-
  label: MorphBallGet
  addr:
    U: 0x1312C
    E: 0x131E0
    J: 0x1312C
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Samus and morph ball collision handler
-
  label: MorphBallFlashAnimation
  addr:
    U: 0x131A0
    E: 0x13254
    J: 0x131A0
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Handles the morph ball flashing animation when samus is grabbing it
-
  label: MorphBallOutsideInit
  addr:
    U: 0x131DC
    E: 0x13290
    J: 0x131DC
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Initialize a morph ball outside sprite
-
  label: MorphBallOutsideAnim
  addr:
    U: 0x13234
    E: 0x132E8
    J: 0x13234
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Handles the morph ball outside animation
-
  label: MorphBall_AI
  addr:
    U: 0x13270
    E: 0x13324
    J: 0x13270
  size: 0x38
  mode: thumb
  params: null
  return: null
-
  label: MorphBall_Outside_AI
  addr:
    U: 0x132A8
    E: 0x1335C
    J: 0x132A8
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Morph ball outisde AI
-
  label: PowerGrip_AI
  addr:
    U: 0x132D4
    E: 0x13388
    J: 0x132D4
  size: 0x13C
  mode: thumb
  params: null
  return: null
-
  label: PowerGripGlow_AI
  addr:
    U: 0x13410
    E: 0x134C4
    J: 0x13410
  size: 0x88
  mode: thumb
  params: null
  return: null
-
  label: ChargeBeamInit
  addr:
    U: 0x13498
    E: 0x1354C
    J: 0x13498
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Initialize a charge beam sprite
-
  label: ChargeBeamSpawnGlow
  addr:
    U: 0x1353C
    E: 0x135F0
    J: 0x1353C
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Spawns the charge beam glow secondary sprite
-
  label: ChargeBeamInitGfxAndCollision
  addr:
    U: 0x13588
    E: 0x1363C
    J: 0x13588
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Initializes the charge beam to be visible
-
  label: ChargeBeamGet
  addr:
    U: 0x135CC
    E: 0x13680
    J: 0x135CC
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Samus and charge beam collision handler
-
  label: ChargeBeamFlashingAnim
  addr:
    U: 0x13694
    E: 0x13748
    J: 0x13694
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the charge beam flashing animation when samus is grabbing it
-
  label: ChargeBeamGlowInit
  addr:
    U: 0x136D8
    E: 0x1378C
    J: 0x136D8
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Initialize a charge beam glow sprite
-
  label: ChargeBeamGlowMovement
  addr:
    U: 0x1373C
    E: 0x137F0
    J: 0x1373C
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Handles the charge beam glow movement based on the charge beam y position
-
  label: ChargeBeam_AI
  addr:
    U: 0x1375C
    E: 0x13810
    J: 0x1375C
  size: 0xD0
  mode: thumb
  params: null
  return: null
-
  label: ChargeBeamGlow_AI
  addr:
    U: 0x1382C
    E: 0x138E0
    J: 0x1382C
  size: 0x24
  mode: thumb
  params: null
  return: null
-
  label: ChozoStatueSyncBodyPosition
  addr:
    U: 0x13850
    E: 0x13904
    J: 0x13850
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the chozo statue body sprites position with the chozo statue main sprite
-
  label: SetChozoStatueEventAndEquipmentFlags
  addr:
    U: 0x138D8
    E: 0x1398C
    J: 0x138D8
  size: 0x30C
  mode: thumb
  params:
  - label: SpriteID
    type: u8
    enum: PrimarySpriteID
  return: null
  notes: Swicthes on r0 and sets event/updates equipment according to it
-
  label: SetChozoStatueDirection
  addr:
    U: 0x13BE4
    E: 0x13C98
    J: 0x13BE4
  size: 0x1FC
  mode: thumb
  params: null
  return: null
  notes: Sets the direction of a chozo statue
-
  label: CheckChozoItemCollected
  addr:
    U: 0x13DE0
    E: 0x13E94
    J: 0x13DE0
  size: 0x2BC
  mode: thumb
  params:
  - label: SpriteID
    type: u8
    enum: PrimarySpriteID
  return:
    label: ChozoStatueBehavior
    type: u8
    notes: Chozo statue behavior (0 = item, 1 = refill, 2 = hint, 3 = hint taken)
  notes: Swicthes on r0 and checks if the item/hint is already collected
-
  label: ChozoStatueInit
  addr:
    U: 0x1409C
    E: 0x14150
    J: 0x1409C
  size: 0x1F8
  mode: thumb
  params: null
  return: null
  notes: Initialize a chozo statue sprite
-
  label: ChozoStatueRegisterItem
  addr:
    U: 0x14298
    E: 0x1434C
    J: 0x14298
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Calls RegisterStatueItem and updates the chozo statue sprite
-
  label: ChozoStatueHintFlashing
  addr:
    U: 0x142FC
    E: 0x143B0
    J: 0x142FC
  size: 0xBC
  mode: thumb
  params: null
  return: null
  notes: Handles the flashing before displaying the minimap for a hint
-
  label: ChozoStatueHintEnd
  addr:
    U: 0x143B8
    E: 0x1446C
    J: 0x143B8
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Called one right after the minimap is closed after a hint
-
  label: ChozoStatueHintSit
  addr:
    U: 0x143F8
    E: 0x144AC
    J: 0x143F8
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Handles the chozo statue sitting animation
-
  label: ChozoStatueHintSitFinish
  addr:
    U: 0x14444
    E: 0x144F8
    J: 0x14444
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Handles the end of the chozo statue sitting animation
-
  label: ChozoStatueCheckCollectItem
  addr:
    U: 0x14468
    E: 0x1451C
    J: 0x14468
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is collecting the item
-
  label: ChozoStatueItemBeforeBanner
  addr:
    U: 0x14494
    E: 0x14548
    J: 0x14494
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Called once before the item banner spawns
-
  label: ChozoStatueSpawnRefill
  addr:
    U: 0x144B8
    E: 0x1456C
    J: 0x144B8
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Spawns a chozo statue refill secondary sprite
-
  label: ChozoStatueRefillFlashingAnim
  addr:
    U: 0x14500
    E: 0x145B4
    J: 0x14500
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Handles the chozo statue flashing animation when samus is refilling
-
  label: ChozoStatueRefillEnd
  addr:
    U: 0x1454C
    E: 0x14600
    J: 0x1454C
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Called once after the end of the refill
-
  label: ChozoStatueReplayRoomMusic
  addr:
    U: 0x1456C
    E: 0x14620
    J: 0x1456C
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Replays the current room music track
-
  label: ChozoStatueBodyInit
  addr:
    U: 0x145C4
    E: 0x14678
    J: 0x145C4
  size: 0x174
  mode: thumb
  params: null
  return: null
  notes: Initialize a chozo statue body sprite
-
  label: ChozoStatueBodyHandRefillAnim
  addr:
    U: 0x14738
    E: 0x147EC
    J: 0x14738
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the blue tube thing animation on the chozo statue hand
-
  label: ChozoStatueBodyGrabSamus
  addr:
    U: 0x14794
    E: 0x14848
    J: 0x14794
  size: 0xA0
  mode: thumb
  params: null
  return: null
  notes: Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX
-
  label: ChozoStatueBodySyncSamusPosition
  addr:
    U: 0x14834
    E: 0x148E8
    J: 0x14834
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Synchronizes samus's position with the chozo statue one
-
  label: ChozoStatueBodySyncSamusPositionWhileSitting
  addr:
    U: 0x14864
    E: 0x14918
    J: 0x14864
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Synchronizes samus's position with the chozo statue one while sitting
-
  label: ChozoStatueBodySyncSamusPositionAfterSitting
  addr:
    U: 0x148A8
    E: 0x1495C
    J: 0x148A8
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Synchronizes samus's position with the chozo statue one after sitting
-
  label: ChozoStatueBodyDetectSamus
  addr:
    U: 0x148E8
    E: 0x1499C
    J: 0x148E8
  size: 0xFC
  mode: thumb
  params: null
  return: null
  notes: Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX
-
  label: ChozoStatueBodyRefill
  addr:
    U: 0x149E4
    E: 0x14A98
    J: 0x149E4
  size: 0x140
  mode: thumb
  params: null
  return: null
  notes: Refills samus energy and weapons
-
  label: ChozoStatueBody_Empty
  addr:
    U: 0x14B24
    E: 0x14BD8
    J: 0x14B24
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: ChozoStatueBodyEndRefill
  addr:
    U: 0x14B28
    E: 0x14BDC
    J: 0x14B28
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Called once after the end of the refill
-
  label: ChozoStatueBodyReleaseSamus
  addr:
    U: 0x14B58
    E: 0x14C0C
    J: 0x14B58
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Releases samus and updates chozo statue GFX after a refill
-
  label: ChozoStatueBodyInitHintGfx
  addr:
    U: 0x14B90
    E: 0x14C44
    J: 0x14B90
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initializes graphics for an hint
-
  label: ChozoStatueBodyCheckEyeOpenedHint
  addr:
    U: 0x14BB0
    E: 0x14C64
    J: 0x14BB0
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the chozo statue's eyes are fully opened at the beginning of a hint
-
  label: ChozoStatueItemAfterBanner
  addr:
    U: 0x14BDC
    E: 0x14C90
    J: 0x14BDC
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Called once after the item banner spawns
-
  label: ChozoStatueBodyCheckEyeClosedRefill
  addr:
    U: 0x14BFC
    E: 0x14CB0
    J: 0x14BFC
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the chozo statue's eyes are fully closed after a refill
-
  label: ChozoStatue_AI
  addr:
    U: 0x14C70
    E: 0x14D24
    J: 0x14C70
  size: 0x148
  mode: thumb
  params: null
  return: null
-
  label: ChozoStatueBody_AI
  addr:
    U: 0x14DB8
    E: 0x14E6C
    J: 0x14DB8
  size: 0x248
  mode: thumb
  params: null
  return: null
-
  label: ChozoStatueRefill_AI
  addr:
    U: 0x15000
    E: 0x150B4
    J: 0x15000
  size: 0xA8
  mode: thumb
  params: null
  return: null
-
  label: UnknownItemChozoStatueSyncBodyPosition
  addr:
    U: 0x150A8
    E: 0x1515C
    J: 0x150A8
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the chozo statue body sprites position with the chozo statue main sprite
-
  label: UnknownItemChozoStatueInit
  addr:
    U: 0x15130
    E: 0x151E4
    J: 0x15130
  size: 0x1F8
  mode: thumb
  params: null
  return: null
  notes: Initialize a unknown item chozo statue body sprite
-
  label: UnknownItemChozoStatueRegisterItem
  addr:
    U: 0x1532C
    E: 0x153E0
    J: 0x1532C
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Calls RegisterStatueItem and updates the chozo statue sprite
-
  label: UnknownItemChozoStatueHintFlashing_Unused
  addr:
    U: 0x1537C
    E: 0x15430
    J: 0x1537C
  size: 0xBC
  mode: thumb
  params: null
  return: null
  notes: Same code as ChozoStatueHintFlashing, unused
-
  label: UnknownItemChozoItemEndHint_Unused
  addr:
    U: 0x15438
    E: 0x154EC
    J: 0x15438
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Same code as ChozoStatueEndHint, unused
-
  label: UnknownItemChozoStatueHintSit_Unused
  addr:
    U: 0x15478
    E: 0x1552C
    J: 0x15478
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Same code as ChozoStatueHintSit, unused
-
  label: UnknownItemChozoStatueHintSitFinish_Unused
  addr:
    U: 0x154C4
    E: 0x15578
    J: 0x154C4
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Same code as ChozoStatueHintSitFinish, unused
-
  label: UnknownItemChozoStatueCheckCollectItem
  addr:
    U: 0x154E8
    E: 0x1559C
    J: 0x154E8
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is collecting the item
-
  label: UnknownItemChozoStatueCheckItemBannerSpawned
  addr:
    U: 0x15514
    E: 0x155C8
    J: 0x15514
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Decrements a timer that ends when the item banner has fully appeared
-
  label: UnknownItemChozoStatueSpawnRefill
  addr:
    U: 0x15538
    E: 0x155EC
    J: 0x15538
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Spawns a unknown item chozo statue refill secondary sprite
-
  label: UnknownItemChozoStatueRefillFlashingAnim
  addr:
    U: 0x15580
    E: 0x15634
    J: 0x15580
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Handles the unknown item chozo statue flashing animation when samus is refilling
-
  label: UnknownItemChozoStatueRefillEnd
  addr:
    U: 0x155CC
    E: 0x15680
    J: 0x155CC
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Called once after the end of the refill
-
  label: UnknownItemChozoStatueReplayRoomMusic
  addr:
    U: 0x155EC
    E: 0x156A0
    J: 0x155EC
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Replays the current room music track
-
  label: UnknownItemChozoStatueBodyInit
  addr:
    U: 0x15644
    E: 0x156F8
    J: 0x15644
  size: 0x174
  mode: thumb
  params: null
  return: null
  notes: Initialize a unknown item chozo statue body sprite
-
  label: UnknownItemChozoStatueBodyHandRefillAnim
  addr:
    U: 0x157B8
    E: 0x1586C
    J: 0x157B8
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the blue tube thing animation on the chozo statue hand
-
  label: UnknwonItemChozoStatueBodyGrabSamus
  addr:
    U: 0x15814
    E: 0x158C8
    J: 0x15814
  size: 0xA0
  mode: thumb
  params: null
  return: null
  notes: Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX
-
  label: UnknownItemChozoStatueBodySyncSamusPosition
  addr:
    U: 0x158B4
    E: 0x15968
    J: 0x158B4
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Synchronizes samus's position with the chozo statue one
-
  label: UnknownItemChozoStatueBodySyncSamusPositionWhileSitting
  addr:
    U: 0x158E4
    E: 0x15998
    J: 0x158E4
  size: 0x44
  mode: thumb
  params: null
  return: null
-
  label: UnknownItemChozoStatueBodySyncSamusPositionAfterSitting
  addr:
    U: 0x15928
    E: 0x159DC
    J: 0x15928
  size: 0x40
  mode: thumb
  params: null
  return: null
-
  label: UnknownItemChozoStatueBodyDetectSamus
  addr:
    U: 0x15968
    E: 0x15A1C
    J: 0x15968
  size: 0xFC
  mode: thumb
  params: null
  return: null
  notes: Detects if samus needs to be grabbed, if so sets samus pose to grabbed by chozo statue and updates chozo statue GFX
-
  label: UnknownItemChozoStatueBodyRefill
  addr:
    U: 0x15A64
    E: 0x15B18
    J: 0x15A64
  size: 0x140
  mode: thumb
  params: null
  return: null
  notes: Refills samus energy and weapons
-
  label: UnknownItemChozoStatueBody_Empty
  addr:
    U: 0x15BA4
    E: 0x15C58
    J: 0x15BA4
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: UnknownItemChozoStatueBodyEndRefill
  addr:
    U: 0x15BA8
    E: 0x15C5C
    J: 0x15BA8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Called once after the end of the refill
-
  label: UnknownItemChozoStatueBodyReleaseSamus
  addr:
    U: 0x15BD8
    E: 0x15C8C
    J: 0x15BD8
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Releases samus and updates chozo statue GFX after a refill
-
  label: UnknownItemChozoStatueBodyInitHintGfx_Unused
  addr:
    U: 0x15C10
    E: 0x15CC4
    J: 0x15C10
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Same code as ChozoStatueBodyInitHintGFX, unused
-
  label: UnknownItemChozoStatueBodyCheckEyeOpenedHint
  addr:
    U: 0x15C30
    E: 0x15CE4
    J: 0x15C30
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Unknown item Chozo statue body check eye fully open
-
  label: UnknownItemChozoStatueItemAfterBanner
  addr:
    U: 0x15C5C
    E: 0x15D10
    J: 0x15C5C
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Called once after the item banner spawns
-
  label: UnknownItemChozoStatueBodyCheckEyeClosedRefill
  addr:
    U: 0x15C7C
    E: 0x15D30
    J: 0x15C7C
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the chozo statue's eyes are fully closed after a refill
-
  label: UnknownItemChozoStatue_AI
  addr:
    U: 0x15CF0
    E: 0x15DA4
    J: 0x15CF0
  size: 0x148
  mode: thumb
  params: null
  return: null
-
  label: UnknownItemChozoStatueBody_AI
  addr:
    U: 0x15E38
    E: 0x15EEC
    J: 0x15E38
  size: 0x248
  mode: thumb
  params: null
  return: null
-
  label: UnknownItemChozoStatueRefill_AI
  addr:
    U: 0x16080
    E: 0x16134
    J: 0x16080
  size: 0xA8
  mode: thumb
  params: null
  return: null
-
  label: ChozoStatueHintChangeClipAction
  addr:
    U: 0x16128
    E: 0x161DC
    J: 0x16128
  size: 0x104
  mode: thumb
  params:
  - label: ClipdataAffectingAction1
    type: u8
    enum: ClipdataAffectingAction
  - label: ClipdataAffectingAction2
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/Disable chozo statue hitbox related to hint poses (standing and sitting)
-
  label: ChozoStatueSittingChangeClipAction
  addr:
    U: 0x1622C
    E: 0x162E0
    J: 0x1622C
  size: 0x84
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/Disable chozo statue hitbox when sitting
-
  label: ChozoBallSpawnItemBanner
  addr:
    U: 0x162B0
    E: 0x16364
    J: 0x162B0
  size: 0x94
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
  return: null
  notes: Spawns the corresponding item banner depending on r0
-
  label: ChozoBallSetOamPtr
  addr:
    U: 0x16344
    E: 0x163F8
    J: 0x16344
  size: 0x64
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
  return: null
  notes: Sets the OAM pointer of the chozo ball depending on r0 (determines color)
-
  label: ChozoBallRevealedSetOamPtr
  addr:
    U: 0x163A8
    E: 0x1645C
    J: 0x163A8
  size: 0x64
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
  return: null
  notes: Sets the OAM pointer of the chozo ball depending on r0 after its revealing
-
  label: ChozoBallRevealingSetOamPtr
  addr:
    U: 0x1640C
    E: 0x164C0
    J: 0x1640C
  size: 0x64
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
  return: null
  notes: Sets the OAM pointer of the chozo ball depending on r0 when it's revealed
-
  label: ChozoBallInit
  addr:
    U: 0x16470
    E: 0x16524
    J: 0x16470
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Initialize a chozo ball sprite
-
  label: ChozoBall_Empty
  addr:
    U: 0x164E4
    E: 0x16598
    J: 0x164E4
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: ChozoBallRevealed
  addr:
    U: 0x164E8
    E: 0x1659C
    J: 0x164E8
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Calls ChozoBallRevealingSetOAMPointer and updates the sprite data
-
  label: ChozoBallRevealingAnim
  addr:
    U: 0x16558
    E: 0x1660C
    J: 0x16558
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Checks if the revealing animation has ended
-
  label: ChozoBallRegisterItem
  addr:
    U: 0x16594
    E: 0x16648
    J: 0x16594
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Registers the item grabbed and calls ChozoBallSpawnIemBanner
-
  label: ChozoBallFlashAnimation
  addr:
    U: 0x16600
    E: 0x166B4
    J: 0x16600
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Handles the chozo ball flashing animation when samus is grabbing it
-
  label: ChozoBall_AI
  addr:
    U: 0x1663C
    E: 0x166F0
    J: 0x1663C
  size: 0x58
  mode: thumb
  params: null
  return: null
-
  label: ZoomerCheckMidair
  addr:
    U: 0x16694
    E: 0x16748
    J: 0x16694
  size: 0x94
  mode: thumb
  params: null
  return:
    label: Midair
    type: bool
  notes: Checks if the zoomer is colliding with air, used to see if it's still crawling on something and if it's colliding on ground when falling
-
  label: ZoomerCollisionInit
  addr:
    U: 0x16728
    E: 0x167DC
    J: 0x16728
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Initialiaze a zoomer's sprite collisions
-
  label: ZoomerGfxInit
  addr:
    U: 0x167A8
    E: 0x1685C
    J: 0x167A8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Initialize a zoomer's GFX
-
  label: ZoomerNormalDirectionGfxInit
  addr:
    U: 0x167D8
    E: 0x1688C
    J: 0x167D8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Initialize a zoomer's GFX facing the normal direction (used when a zoomer is falling)
-
  label: ZoomerInit
  addr:
    U: 0x16808
    E: 0x168BC
    J: 0x16808
  size: 0x114
  mode: thumb
  params: null
  return: null
  notes: Initialize a zoomer sprite
-
  label: ZoomerCallGfxInit
  addr:
    U: 0x1691C
    E: 0x169D0
    J: 0x1691C
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Calls ZoomerGFXInit and sets pose to 9
-
  label: ZoomerMove
  addr:
    U: 0x16934
    E: 0x169E8
    J: 0x16934
  size: 0x3E8
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a zoomer
-
  label: ZoomerGfxRotationUpdate
  addr:
    U: 0x16D1C
    E: 0x16DD0
    J: 0x16D1C
  size: 0x194
  mode: thumb
  params: null
  return: null
  notes: Updates the GFX of a zoomer while it's turning
-
  label: ZoomerTurning
  addr:
    U: 0x16EB0
    E: 0x16F64
    J: 0x16EB0
  size: 0x1CC
  mode: thumb
  params: null
  return: null
  notes: Updates the position of a zoomer while it's turning
-
  label: Zoomer_Unused
  addr:
    U: 0x1707C
    E: 0x17130
    J: 0x1707C
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Calls ZoomerNormalDirectionGFXInit and sets pose to F, seems unused
-
  label: ZoomerBackOnGround
  addr:
    U: 0x17094
    E: 0x17148
    J: 0x17094
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Handles a zoomer touching gorund again after falling
-
  label: ZoomerStartFalling
  addr:
    U: 0x170C4
    E: 0x17178
    J: 0x170C4
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Handles the start of a zoomer falling
-
  label: ZoomerFalling
  addr:
    U: 0x1712C
    E: 0x171E0
    J: 0x1712C
  size: 0x84
  mode: thumb
  params: null
  return: null
  notes: Handles a zoomer falling
-
  label: ZoomerDeath
  addr:
    U: 0x171B0
    E: 0x17264
    J: 0x171B0
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the death of a zoomer, calls SpriteDeath
-
  label: Zoomer_AI
  addr:
    U: 0x1720C
    E: 0x172C0
    J: 0x1720C
  size: 0x11C
  mode: thumb
  params: null
  return: null
-
  label: ZeelaSpawnEyes
  addr:
    U: 0x17328
    E: 0x173DC
    J: 0x17328
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Spawns the zeela eyes secondary sprite
-
  label: ZeelaCheckMidair
  addr:
    U: 0x17440
    E: 0x174F4
    J: 0x17440
  size: 0xB8
  mode: thumb
  params: null
  return:
    label: Midair
    type: bool
  notes: Checks if the zeela is colliding with air, used to see if it's still crawling on something and if it's colliding on ground when falling
-
  label: ZeelaHitboxInit
  addr:
    U: 0x174F8
    E: 0x175AC
    J: 0x174F8
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Initializes the hitbox of a zeela
-
  label: ZeelaGfxInit
  addr:
    U: 0x17578
    E: 0x1762C
    J: 0x17578
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Initializes the GFX of a zeela
-
  label: ZeelaNormalDirectionGfxInit
  addr:
    U: 0x175C0
    E: 0x17674
    J: 0x175C0
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Initialize a zeela's GFX facing the normal direction (used when a zeela is falling)
-
  label: ZeelaInit
  addr:
    U: 0x175F0
    E: 0x176A4
    J: 0x175F0
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Initialize a zeela sprite
-
  label: ZeelaCallGfxInit
  addr:
    U: 0x17718
    E: 0x177CC
    J: 0x17718
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Calls ZeelaGFXInit and sets pose to 9
-
  label: ZeelaMove
  addr:
    U: 0x17730
    E: 0x177E4
    J: 0x17730
  size: 0x418
  mode: thumb
  params: null
  return: null
  notes: Handles the zeela moving
-
  label: ZeelaGfxRotationUpdate
  addr:
    U: 0x17B48
    E: 0x17BFC
    J: 0x17B48
  size: 0x194
  mode: thumb
  params: null
  return: null
  notes: Updates the GFX of a zeela while it's turning
-
  label: ZeelaTurning
  addr:
    U: 0x17CDC
    E: 0x17D90
    J: 0x17CDC
  size: 0x1CC
  mode: thumb
  params: null
  return: null
  notes: Updates the position of a zeela while it's turning
-
  label: Zeela_Unused
  addr:
    U: 0x17EA8
    E: 0x17F5C
    J: 0x17EA8
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Calls ZeelaNormalDirectionGFXInit and sets pose to F, seems unused
-
  label: ZeelaBackOnGround
  addr:
    U: 0x17EC0
    E: 0x17F74
    J: 0x17EC0
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles a zeela touching gorund again after falling
-
  label: ZeelaStartFalling
  addr:
    U: 0x17EF8
    E: 0x17FAC
    J: 0x17EF8
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Handles the start of a zeela falling
-
  label: ZeelaFalling
  addr:
    U: 0x17F60
    E: 0x18014
    J: 0x17F60
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Handles a zeela falling
-
  label: ZeelaDeath
  addr:
    U: 0x17FE8
    E: 0x1809C
    J: 0x17FE8
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Handles the death of a zeela, calls SpriteDeath
-
  label: ZeelaEyesInit
  addr:
    U: 0x18054
    E: 0x18108
    J: 0x18054
  size: 0xAC
  mode: thumb
  params: null
  return: null
  notes: Initialize a zeela eyes sprite
-
  label: ZeelaEyesMove
  addr:
    U: 0x18100
    E: 0x181B4
    J: 0x18100
  size: 0x134
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a zeela eye
-
  label: ZeelaEyesGroundCollision
  addr:
    U: 0x18234
    E: 0x182E8
    J: 0x18234
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Handles the collision between a zeela eye and the ground
-
  label: ZeelaEyesCheckExplosionDone
  addr:
    U: 0x18260
    E: 0x18314
    J: 0x18260
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the explosion is done and deletes the sprite if so
-
  label: Zeela_AI
  addr:
    U: 0x18284
    E: 0x18338
    J: 0x18284
  size: 0x11C
  mode: thumb
  params: null
  return: null
-
  label: ZeelaEyes_AI
  addr:
    U: 0x183A0
    E: 0x18454
    J: 0x183A0
  size: 0x38
  mode: thumb
  params: null
  return: null
-
  label: KraidMouthDetermineSpikePosition
  addr:
    U: 0x183D8
    E: 0x1848C
    J: 0x183D8
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Syncs the sub sprites with kraid
-
  label: KraidCheckProjectilesCollidingWithBelly
  addr:
    U: 0x18440
    E: 0x184F4
    J: 0x18440
  size: 0x1AC
  mode: thumb
  params: null
  return: null
  notes: Checks if any projectile is colliding with kraid's belly, if so spaws appropriate particle effect 2 random sprite debris, starts an horizontal screen shake and destroys the projectile
-
  label: KraidOpenCloseRoutineAndProjectileCollision
  addr:
    U: 0x185EC
    E: 0x186A0
    J: 0x185EC
  size: 0x470
  mode: thumb
  params: null
  return: null
  notes: 'Handles the opening/closing of the mouth and the projectile collision: damage and bouncing off'
-
  label: KraidRandomSpriteDebrisOnCeiling
  addr:
    U: 0x18A5C
    E: 0x18B10
    J: 0x18A5C
  size: 0x1A0
  mode: thumb
  params:
  - label: Timer2OfCurrSprite
    type: u8
    notes: Timer 2 of current sprite
  return: null
  notes: Spawns random sprite debris on the ceiling when kraid appears/dies
-
  label: KraidMouthUpdateArmIdleHitbox
  addr:
    U: 0x18C18
    E: 0x18CCC
    J: 0x18C18
  size: 0x11C
  mode: thumb
  params: null
  return: null
  notes: Updates the arm hibox depending on the current animation frame when it's idle
-
  label: KraidMouthUpdateArmAttackingHitbox
  addr:
    U: 0x18D34
    E: 0x18DE8
    J: 0x18D34
  size: 0x154
  mode: thumb
  params: null
  return: null
  notes: Updates the arm hibox depending on the current animation frame when it's attacking
-
  label: KraidMouthUpdateLeftArmIdleHitbox
  addr:
    U: 0x18EB0
    E: 0x18F64
    J: 0x18EB0
  size: 0x11C
  mode: thumb
  params: null
  return: null
  notes: Updates the left arm hibox depending on the current animation frame when it's idle
-
  label: KraidMouthUpdateLeftArmAttackingHitbox
  addr:
    U: 0x19104
    E: 0x191B8
    J: 0x19104
  size: 0x22C
  mode: thumb
  params: null
  return: null
  notes: Updates the left arm hibox depending on the current animation frame when it's throwing nails
-
  label: KraidInit
  addr:
    U: 0x19370
    E: 0x19424
    J: 0x19370
  size: 0x22C
  mode: thumb
  params: null
  return: null
  notes: Initialize a kraid sprite
-
  label: KraidIsFullyUp
  addr:
    U: 0x1959C
    E: 0x19650
    J: 0x1959C
  size: 0x50
  mode: thumb
  params: null
  return:
    label: FullyUp
    type: bool
  notes: Checks if kraid has finished going up at the beginning of the fight calls KraidRandomSpriteDebrisOnCeiling
-
  label: KraidGoUp
  addr:
    U: 0x195EC
    E: 0x196A0
    J: 0x195EC
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Makes Kraid go up at the beginning of the fight
-
  label: KraidCheckFullyUp
  addr:
    U: 0x19640
    E: 0x196F4
    J: 0x19640
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if kraid is fully up
-
  label: KraidMoveFeet
  addr:
    U: 0x1966C
    E: 0x19720
    J: 0x1966C
  size: 0x1A4
  mode: thumb
  params: null
  return:
    label: MovementStage
    type: u8
  notes: Moves a feet
-
  label: KraidStartMovingFeetSameDirectionAsPosition
  addr:
    U: 0x19810
    E: 0x198C4
    J: 0x19810
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Initializes Kraid to do the first step
-
  label: KraidFeetMovementSameDirectionAsPositionUpdate
  addr:
    U: 0x19854
    E: 0x19908
    J: 0x19854
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Updates the first step
-
  label: KraidMoveFeetToOppositeDirectionAsPosition
  addr:
    U: 0x19934
    E: 0x199E8
    J: 0x19934
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Initializes Kraid to do the second step
-
  label: KraidFeetMovementOppsiteDirectionAsPositionUpdate
  addr:
    U: 0x19978
    E: 0x19A2C
    J: 0x19978
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Updates the second step
-
  label: KraidEndTwoSteps
  addr:
    U: 0x19A58
    E: 0x19B0C
    J: 0x19A58
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initalizes Kraid to be standing
-
  label: KraidBeforeStartMovingFeetSameDirectionAsPosition
  addr:
    U: 0x19A7C
    E: 0x19B30
    J: 0x19A7C
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles Kraid standing
-
  label: KraidAfterMovingFeetSameDirectionAsPosition
  addr:
    U: 0x19AB4
    E: 0x19B68
    J: 0x19AB4
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initializes Kraid to be standing (between steps)
-
  label: KraidBeforeStartMovingFeetOppositeDirectionAsPosition
  addr:
    U: 0x19AD8
    E: 0x19B8C
    J: 0x19AD8
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles Kraid standing (between steps)
-
  label: KraidPreventSamusGoingThrough
  addr:
    U: 0x19B10
    E: 0x19BC4
    J: 0x19B10
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Prevents Samus from going through Kraid when he is dying
-
  label: KraidDeath
  addr:
    U: 0x19B34
    E: 0x19BE8
    J: 0x19B34
  size: 0xB0
  mode: thumb
  params: null
  return: null
  notes: Sets the Kraid killed event and updates the minimap
-
  label: KraidDying
  addr:
    U: 0x19BE4
    E: 0x19C98
    J: 0x19BE4
  size: 0x160
  mode: thumb
  params: null
  return: null
  notes: Calls KraidPreventSamusGoingThrough, KraidRandomSpriteDebrisOnCeiling, starts screen shake, sets particle effects and plays the kraid statue opening cutscene
-
  label: KraidBeforeDeath
  addr:
    U: 0x19D44
    E: 0x19DF8
    J: 0x19D44
  size: 0x184
  mode: thumb
  params: null
  return: null
  notes: Called when kraid is stationary when dying, saves the in game time at kraid and spawns a bunch of particle effects
-
  label: KraidMouthInit
  addr:
    U: 0x19EC8
    E: 0x19F7C
    J: 0x19EC8
  size: 0x360
  mode: thumb
  params: null
  return: null
  notes: Initialize a kraid part sprite
-
  label: KraidMouthThrowNails
  addr:
    U: 0x1A228
    E: 0x1A2DC
    J: 0x1A228
  size: 0xE8
  mode: thumb
  params: null
  return: null
  notes: Checks if the nails should spawn, if so spawns 2 kraid nail secondary sprite
-
  label: KraidMouthCheckSamusNear
  addr:
    U: 0x1A310
    E: 0x1A3C4
    J: 0x1A310
  size: 0xD4
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is near enough for the hand attack
-
  label: KraidMouthCallKraidCheckProkectilesCollidingWithBelly
  addr:
    U: 0x1A3E4
    E: 0x1A498
    J: 0x1A3E4
  size: 0xC
  mode: thumb
  params: null
  return: null
  notes: Calls KraidCheckProjectilesCollidingWithBelly
-
  label: KraidMouthCheckShouldSpawnSpikes
  addr:
    U: 0x1A3F0
    E: 0x1A4A4
    J: 0x1A3F0
  size: 0x11C
  mode: thumb
  params: null
  return: null
  notes: Checks if spikes should spawn
-
  label: KraidMouthSpawnSpike
  addr:
    U: 0x1A50C
    E: 0x1A5C0
    J: 0x1A50C
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Spawns a kraid spike secondary sprite
-
  label: KraidMouthArmMovementDying
  addr:
    U: 0x1A648
    E: 0x1A6FC
    J: 0x1A648
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the arms when kraid is dying
-
  label: KraidMouthArmMovementDyingStationary
  addr:
    U: 0x1A6C8
    E: 0x1A77C
    J: 0x1A6C8
  size: 0x188
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the arms when kraid is dying and stationary
-
  label: KraidNailMovement
  addr:
    U: 0x1A850
    E: 0x1A904
    J: 0x1A850
  size: 0x1EC
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a kraid nail
-
  label: Kraid_AI
  addr:
    U: 0x1AA3C
    E: 0x1AAF0
    J: 0x1AA3C
  size: 0x474
  mode: thumb
  params: null
  return: null
-
  label: KraidMouth_AI
  addr:
    U: 0x1AEB0
    E: 0x1AF64
    J: 0x1AEB0
  size: 0x198
  mode: thumb
  params: null
  return: null
  notes: Kraid part AI
-
  label: KraidSpike_AI
  addr:
    U: 0x1B048
    E: 0x1B0FC
    J: 0x1B048
  size: 0x4AC
  mode: thumb
  params: null
  return: null
-
  label: KraidNail_AI
  addr:
    U: 0x1B4F4
    E: 0x1B5A8
    J: 0x1B4F4
  size: 0x1C4
  mode: thumb
  params: null
  return: null
-
  label: ItemBannerInit
  addr:
    U: 0x1B6B8
    E: 0x1B76C
    J: 0x1B6B8
  size: 0x110
  mode: thumb
  params: null
  return: null
  notes: Initialize an item banner sprite
-
  label: ItemBannerGfxInit
  addr:
    U: 0x1B7C8
    E: 0x1B87C
    J: 0x1B7C8
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Loads the item banner GFX and sets the PreventMovementTimer to 3e8
-
  label: ItemBannerPopUp
  addr:
    U: 0x1B824
    E: 0x1B8D8
    J: 0x1B824
  size: 0x184
  mode: thumb
  params: null
  return: null
  notes: Handles the pop up animaion of an item banner, alos spawns the save yes no cursor secondary sprite if necessary
-
  label: ItemBannerStatic
  addr:
    U: 0x1B9A8
    E: 0x1BA5C
    J: 0x1B9A8
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Handles the part when the item banner is static (checks for input)
-
  label: ItemBannerRemoval
  addr:
    U: 0x1BA10
    E: 0x1BAC4
    J: 0x1BA10
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Called once at the beginning of the removal animation, calls FinishCollectingTank if samus is collecting a tank
-
  label: ItemBannerRemovalAnimation
  addr:
    U: 0x1BA60
    E: 0x1BB14
    J: 0x1BA60
  size: 0xB4
  mode: thumb
  params: null
  return: null
  notes: Handles the removal animation, spawns a falling chozo pillar primary sprite if the item banner is the fully powered suit one
-
  label: ItemBanner_AI
  addr:
    U: 0x1BB14
    E: 0x1BBC8
    J: 0x1BB14
  size: 0xE8
  mode: thumb
  params: null
  return: null
-
  label: SaveYesNoCursor_AI
  addr:
    U: 0x1BBFC
    E: 0x1BCB0
    J: 0x1BBFC
  size: 0x190
  mode: thumb
  params: null
  return: null
-
  label: RipperInit
  addr:
    U: 0x1BD8C
    E: 0x1BE40
    J: 0x1BD8C
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Initialize a ripper sprite
-
  label: RipperGfxInit
  addr:
    U: 0x1BDFC
    E: 0x1BEB0
    J: 0x1BDFC
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize a ripper GFX
-
  label: RipperMove
  addr:
    U: 0x1BE1C
    E: 0x1BED0
    J: 0x1BE1C
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a ripper
-
  label: RipperTurnAroundGfxInit
  addr:
    U: 0x1BE88
    E: 0x1BF3C
    J: 0x1BE88
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Updates the GFX of a ripper when it's turning around
-
  label: RipperTurnAroundBegin
  addr:
    U: 0x1BEA8
    E: 0x1BF5C
    J: 0x1BEA8
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles the first half of a ripper turning around, updates the status and the GFX
-
  label: RipperCheckTurnedAround
  addr:
    U: 0x1BEE0
    E: 0x1BF94
    J: 0x1BEE0
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the ripper has finished turning around, if so resumes normal behavior
-
  label: Ripper_AI
  addr:
    U: 0x1BEFC
    E: 0x1BFB0
    J: 0x1BEFC
  size: 0xDC
  mode: thumb
  params: null
  return: null
-
  label: Ripper2Init
  addr:
    U: 0x1BFD8
    E: 0x1C08C
    J: 0x1BFD8
  size: 0x7C
  mode: thumb
  params: null
  return: null
  notes: Initialize a ripper 2 sprite
-
  label: Ripper2GfxInit
  addr:
    U: 0x1C054
    E: 0x1C108
    J: 0x1C054
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize a ripper 2 GFX
-
  label: Ripper2Move
  addr:
    U: 0x1C074
    E: 0x1C128
    J: 0x1C074
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a ripper 2
-
  label: Ripper2TurnAroundGfxInit
  addr:
    U: 0x1C0D4
    E: 0x1C188
    J: 0x1C0D4
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Called once before a ripper 2 turns around
-
  label: Ripper2TurnAroundBegin
  addr:
    U: 0x1C10C
    E: 0x1C1C0
    J: 0x1C10C
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles the first half of a ripper 2 turning around, updates the status and the GFX
-
  label: Ripper2CheckTurnedAround
  addr:
    U: 0x1C144
    E: 0x1C1F8
    J: 0x1C144
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the ripper 2 has finished turning around, if so resumes normal behavior
-
  label: RipperII_AI
  addr:
    U: 0x1C160
    E: 0x1C214
    J: 0x1C160
  size: 0xD8
  mode: thumb
  params: null
  return: null
  notes: Ripper 2 AI
-
  label: ZebInit
  addr:
    U: 0x1C238
    E: 0x1C2EC
    J: 0x1C238
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Initialize a zeb sprite
-
  label: ZebGfxInit
  addr:
    U: 0x1C298
    E: 0x1C34C
    J: 0x1C298
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initialize a zeb GFX
-
  label: ZebCheckSpawn
  addr:
    U: 0x1C2D4
    E: 0x1C388
    J: 0x1C2D4
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Checks if the zeb has no drop and if samus is in range to determine if it should spawn
-
  label: ZebGoingUp
  addr:
    U: 0x1C36C
    E: 0x1C420
    J: 0x1C36C
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles a zeb going up after spawning
-
  label: ZebReset
  addr:
    U: 0x1C3EC
    E: 0x1C4A0
    J: 0x1C3EC
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Resets a zeb sprite after it dies or when it's out of range
-
  label: ZebMove
  addr:
    U: 0x1C444
    E: 0x1C4F8
    J: 0x1C444
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a zeb
-
  label: Zeb_AI
  addr:
    U: 0x1C50C
    E: 0x1C5C0
    J: 0x1C50C
  size: 0x138
  mode: thumb
  params: null
  return: null
-
  label: SkreeInit
  addr:
    U: 0x1C644
    E: 0x1C6F8
    J: 0x1C644
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Initialize a skree sprite
-
  label: SkreeGfxInit
  addr:
    U: 0x1C694
    E: 0x1C748
    J: 0x1C694
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Initializes a skree to be idle
-
  label: SkreeDetectSamus
  addr:
    U: 0x1C6B0
    E: 0x1C764
    J: 0x1C6B0
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Detects if samus is in range of the skree
-
  label: SkreeSpinGfxInit
  addr:
    U: 0x1C700
    E: 0x1C7B4
    J: 0x1C700
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the spinning animation of the skree
-
  label: SkreeCheckSpinEnded
  addr:
    U: 0x1C71C
    E: 0x1C7D0
    J: 0x1C71C
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the skree finished spinning
-
  label: SkreeStartGoingDown
  addr:
    U: 0x1C738
    E: 0x1C7EC
    J: 0x1C738
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Called once before the skree starts going down, sets the facing direction and updates GFX
-
  label: SkreeGoDown
  addr:
    U: 0x1C7A0
    E: 0x1C854
    J: 0x1C7A0
  size: 0xFC
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a skree that goes down, both vertically and horizontally
-
  label: SkreeCrashGround
  addr:
    U: 0x1C89C
    E: 0x1C950
    J: 0x1C89C
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Initialize 4 sprite debris and spawns  4 skree explosion/blue skree explosion secondary sprites
-
  label: SkreeExplosionInit
  addr:
    U: 0x1C9C4
    E: 0x1CA78
    J: 0x1C9C4
  size: 0xB4
  mode: thumb
  params: null
  return: null
  notes: Initialize a skree explosion sprite
-
  label: SkreeExplosionMove
  addr:
    U: 0x1CA78
    E: 0x1CB2C
    J: 0x1CA78
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a skree explosion sprite
-
  label: Skree_AI
  addr:
    U: 0x1CAE0
    E: 0x1CB94
    J: 0x1CAE0
  size: 0x194
  mode: thumb
  params: null
  return: null
-
  label: SkreeExplosion_AI
  addr:
    U: 0x1CC74
    E: 0x1CD28
    J: 0x1CC74
  size: 0x24
  mode: thumb
  params: null
  return: null
-
  label: ReoInit
  addr:
    U: 0x1CC98
    E: 0x1CD4C
    J: 0x1CC98
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Initialize a reo sprite
-
  label: ReoRNG
  addr:
    U: 0x1CD20
    E: 0x1CDD4
    J: 0x1CD20
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Called once after the initialization, sets 2 unknown values of the sprite data to a random number based on the sprite random number
-
  label: ReoSamusDetection
  addr:
    U: 0x1CD44
    E: 0x1CDF8
    J: 0x1CD44
  size: 0x84
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range and handles idle animation
-
  label: ReoSamusDetected
  addr:
    U: 0x1CDC8
    E: 0x1CE7C
    J: 0x1CDC8
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Makes reo face samus and initialize movement related data
-
  label: ReoMove
  addr:
    U: 0x1CE50
    E: 0x1CF04
    J: 0x1CE50
  size: 0x394
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a reo
-
  label: Reo_AI
  addr:
    U: 0x1D1E4
    E: 0x1D298
    J: 0x1D1E4
  size: 0x134
  mode: thumb
  params: null
  return: null
-
  label: ZiplineCheckColliding
  addr:
    U: 0x1D318
    E: 0x1D3CC
    J: 0x1D318
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Checks if the zipline is colliding with a solid block on both sides
-
  label: ZiplineMoving
  addr:
    U: 0x1D3A4
    E: 0x1D458
    J: 0x1D3A4
  size:
    U: 0xC8
    E: 0xE0
    J: 0xC8
  mode: thumb
  params: null
  return:
    label: ReleasingSamus
    type: bool
  notes: Handles the movement of a zipline
-
  label: ZiplineGfxUpdate
  addr:
    U: 0x1D46C
    E: 0x1D538
    J: 0x1D46C
  size: 0x1DC
  mode: thumb
  params: null
  return: null
  notes: Updates the GFX of a zipline (checks if samus is on it, if releasing, if activated and the timers)
-
  label: ZiplineInit
  addr:
    U: 0x1D648
    E: 0x1D714
    J: 0x1D648
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Initialize a zipline sprite
-
  label: ZiplineUpdate
  addr:
    U: 0x1D6EC
    E: 0x1D7B8
    J: 0x1D6EC
  size: 0x84
  mode: thumb
  params: null
  return: null
  notes: Updates the zipline, calls ZiplineGFXUpdate and ZiplineMoving
-
  label: ZiplineButton_Init
  addr:
    U: 0x1D770
    E: 0x1D83C
    J: 0x1D770
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Initialize a zipline button sprite
-
  label: ZiplineButtonActivatedGfxInit
  addr:
    U: 0x1D808
    E: 0x1D8D4
    J: 0x1D808
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for an activated zipline button
-
  label: ZiplineButtonSpawn
  addr:
    U: 0x1D828
    E: 0x1D8F4
    J: 0x1D828
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Checks if there's a zipline sprite in the current room and if ziplines are activated sets data accordingly
-
  label: ZiplineButtonCheckZiplinesActivated
  addr:
    U: 0x1D874
    E: 0x1D940
    J: 0x1D874
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Checks if the ziplines are activated (called each frame if the ziplines aren't activated when ZiplineButtonSpawn is called)
-
  label: ZiplineButtonIdle
  addr:
    U: 0x1D88C
    E: 0x1D958
    J: 0x1D88C
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation
-
  label: ZiplineButtonZiplineMoving
  addr:
    U: 0x1D904
    E: 0x1D9D0
    J: 0x1D904
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Called when the zipline is moving
-
  label: Zipline_AI
  addr:
    U: 0x1D92C
    E: 0x1D9F8
    J: 0x1D92C
  size: 0x28
  mode: thumb
  params: null
  return: null
-
  label: ZiplineButton_AI
  addr:
    U: 0x1D954
    E: 0x1DA20
    J: 0x1D954
  size: 0xD0
  mode: thumb
  params: null
  return: null
-
  label: SovaCheckMidair
  addr:
    U: 0x1DA24
    E: 0x1DAF0
    J: 0x1DA24
  size: 0xB8
  mode: thumb
  params: null
  return:
    label: Midair
    type: bool
  notes: Checks if the sova is colliding with air, used to see if it's still crawling on something and if it's colliding on ground when falling
-
  label: SovaHitboxUpdate
  addr:
    U: 0x1DADC
    E: 0x1DBA8
    J: 0x1DADC
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Updates the hitbox of the sova (called in SovaInit and when turning around)
-
  label: SovaGfxUpdate
  addr:
    U: 0x1DB5C
    E: 0x1DC28
    J: 0x1DB5C
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Updates the GFX of a sova
-
  label: SovaInit
  addr:
    U: 0x1DBD4
    E: 0x1DCA0
    J: 0x1DBD4
  size: 0x150
  mode: thumb
  params: null
  return: null
  notes: Initialize a sova sprite
-
  label: SovaGfxInit
  addr:
    U: 0x1DD24
    E: 0x1DDF0
    J: 0x1DD24
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Calls SovaGFXUpdate, is called once after SovaInit
-
  label: SovaMove
  addr:
    U: 0x1DD3C
    E: 0x1DE08
    J: 0x1DD3C
  size: 0x4B0
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the sova
-
  label: SovaTurningAroundGfxUpdate
  addr:
    U: 0x1E1EC
    E: 0x1E2B8
    J: 0x1E1EC
  size: 0x194
  mode: thumb
  params: null
  return: null
  notes: Updates the GFX of the sova when it's turning around
-
  label: SovaTurningAround
  addr:
    U: 0x1E380
    E: 0x1E44C
    J: 0x1E380
  size: 0x1F0
  mode: thumb
  params: null
  return: null
  notes: Handles the sova turning around, calls SovaTurningAroundGFXUpdate, SovaHitboxUpdate and updates the sprite data (direction facing and position)
-
  label: SovaBackOnGround
  addr:
    U: 0x1E570
    E: 0x1E63C
    J: 0x1E570
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the sova touching gorund again after falling
-
  label: SovaCheckBackOnGroundAnimEnded
  addr:
    U: 0x1E5B4
    E: 0x1E680
    J: 0x1E5B4
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Checks if the back on ground anim ended
-
  label: SovaStartFalling
  addr:
    U: 0x1E5E4
    E: 0x1E6B0
    J: 0x1E5E4
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Updates the X and Y position of the sova, calls SovaHitboxUpdate and updates GFX in order to prepare it to fall
-
  label: SovaFalling
  addr:
    U: 0x1E65C
    E: 0x1E728
    J: 0x1E65C
  size: 0x7C
  mode: thumb
  params: null
  return: null
  notes: Handles a sova falling
-
  label: SovaDeath
  addr:
    U: 0x1E6D8
    E: 0x1E7A4
    J: 0x1E6D8
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Handles the death of a sova, calls SpriteDeath
-
  label: Sova_AI
  addr:
    U: 0x1E738
    E: 0x1E804
    J: 0x1E738
  size: 0x11C
  mode: thumb
  params: null
  return: null
-
  label: MultiviolaInit
  addr:
    U: 0x1E854
    E: 0x1E920
    J: 0x1E854
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Initialize a multiviola sprite
-
  label: MultiviolaMove
  addr:
    U: 0x1E8C4
    E: 0x1E990
    J: 0x1E8C4
  size: 0x108
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of a multiviola
-
  label: UnusedMultiviola_Empty1
  addr:
    U: 0x1E9CC
    E: 0x1EA98
    J: 0x1E9CC
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function (very likely related to the unused multiviola sprite)
-
  label: UnusedMultiviola_Empty2
  addr:
    U: 0x1E9D0
    E: 0x1EA9C
    J: 0x1E9D0
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function (very likely related to the unused multiviola sprite)
-
  label: Multiviola_AI
  addr:
    U: 0x1E9D4
    E: 0x1EAA0
    J: 0x1E9D4
  size: 0x90
  mode: thumb
  params: null
  return: null
-
  label: UnusedMultiviolaSprite_AI
  addr:
    U: 0x1EA64
    E: 0x1EB30
    J: 0x1EA64
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Unused multiviola AI
-
  label: GerutaYMovement
  addr:
    U: 0x1EA68
    E: 0x1EB34
    J: 0x1EA68
  size: 0xB0
  mode: thumb
  params:
  - label: YMovement
    type: u16
  return:
    label: Bouncing
    type: bool
  notes: Handles the Y movement of the geruta
-
  label: GerutaXMovement
  addr:
    U: 0x1EB18
    E: 0x1EBE4
    J: 0x1EB18
  size: 0x74
  mode: thumb
  params:
  - label: XMovement
    type: u16
  return:
    label: Bouncing
    type: bool
  notes: Handles the X movement of the geruta
-
  label: GerutaInit
  addr:
    U: 0x1EB8C
    E: 0x1EC58
    J: 0x1EB8C
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Initialize a geruta sprite
-
  label: GerutaGfxInit
  addr:
    U: 0x1EC0C
    E: 0x1ECD8
    J: 0x1EC0C
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX of a geruta
-
  label: GerutaDetectSamus
  addr:
    U: 0x1EC2C
    E: 0x1ECF8
    J: 0x1EC2C
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range
-
  label: GerutaGoDownGfxInit
  addr:
    U: 0x1EC98
    E: 0x1ED64
    J: 0x1EC98
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Updates the GFX of a geruta for when he goes down
-
  label: GerutaCheckWarningEnded
  addr:
    U: 0x1ECCC
    E: 0x1ED98
    J: 0x1ECCC
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the warning animation has ended
-
  label: GerutaCheckGoingDownAnimEnded
  addr:
    U: 0x1ECF8
    E: 0x1EDC4
    J: 0x1ECF8
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Checks if the second warning animation has ended
-
  label: GerutaGoingDown
  addr:
    U: 0x1ED48
    E: 0x1EE14
    J: 0x1ED48
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the geruta going down
-
  label: GerutaCheckBouncingAnimEnded
  addr:
    U: 0x1ED8C
    E: 0x1EE58
    J: 0x1ED8C
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Checks if the bouncing animation has ended
-
  label: GerutaGoingUp
  addr:
    U: 0x1EDD4
    E: 0x1EEA0
    J: 0x1EDD4
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Handles the geruta going up
-
  label: GerutaCheckResetAnimEnded
  addr:
    U: 0x1EE1C
    E: 0x1EEE8
    J: 0x1EE1C
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the resetting animation (when the geruta hits the ceiling after moving) has ended
-
  label: Geruta_AI
  addr:
    U: 0x1EE38
    E: 0x1EF04
    J: 0x1EE38
  size: 0x1BC
  mode: thumb
  params: null
  return: null
-
  label: SqueeptGfxReset
  addr:
    U: 0x1EFF4
    E: 0x1F0C0
    J: 0x1EFF4
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Resets the GFX related infos of the squeept
-
  label: SqueeptTurningAroundGfxInit
  addr:
    U: 0x1F018
    E: 0x1F0E4
    J: 0x1F018
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for when the squeept turns around
-
  label: SqueeptGoingDownGfxInit
  addr:
    U: 0x1F03C
    E: 0x1F108
    J: 0x1F03C
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for when the squeept goes down
-
  label: SqueeptInit
  addr:
    U: 0x1F05C
    E: 0x1F128
    J: 0x1F05C
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Initialize a squeept sprite
-
  label: SqueeptReset
  addr:
    U: 0x1F0A8
    E: 0x1F174
    J: 0x1F0A8
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Resets the squeept when he touches the ground
-
  label: SqueeptDetectSamus
  addr:
    U: 0x1F0D0
    E: 0x1F19C
    J: 0x1F0D0
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range
-
  label: SqueeptGoUp
  addr:
    U: 0x1F120
    E: 0x1F1EC
    J: 0x1F120
  size: 0xBC
  mode: thumb
  params: null
  return: null
  notes: Handles the squeept going up
-
  label: SqueeptTurnAround
  addr:
    U: 0x1F1DC
    E: 0x1F2A8
    J: 0x1F1DC
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Checks if the turning around animation ended
-
  label: SqueeptGoDown
  addr:
    U: 0x1F204
    E: 0x1F2D0
    J: 0x1F204
  size: 0x84
  mode: thumb
  params: null
  return: null
  notes: Handles the squeept going down
-
  label: Squeept_AI
  addr:
    U: 0x1F288
    E: 0x1F354
    J: 0x1F288
  size: 0x194
  mode: thumb
  params: null
  return: null
-
  label: MapStationInit
  addr:
    U: 0x1F41C
    E: 0x1F4E8
    J: 0x1F41C
  size: 0xF0
  mode: thumb
  params: null
  return: null
  notes: Initialize a map station sprite
-
  label: MapStationSamusDetection
  addr:
    U: 0x1F50C
    E: 0x1F5D8
    J: 0x1F50C
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range
-
  label: MapStationCheckGrabbingSamusAnimEnded
  addr:
    U: 0x1F5A4
    E: 0x1F670
    J: 0x1F5A4
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Checks if the grabbing animation has ended
-
  label: MapStationDownloadingAnim
  addr:
    U: 0x1F5E0
    E: 0x1F6AC
    J: 0x1F5E0
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Handles the downloading animation
-
  label: MapStationSpawnMessage
  addr:
    U: 0x1F62C
    E: 0x1F6F8
    J: 0x1F62C
  size: 0xB4
  mode: thumb
  params: null
  return: null
  notes: Determines what message banner should be spawned depending on the current area
-
  label: MapStationAfterDownload
  addr:
    U: 0x1F6E0
    E: 0x1F7AC
    J: 0x1F6E0
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Called once after the map is downloaded
-
  label: MapStationBeforeRetraction
  addr:
    U: 0x1F718
    E: 0x1F7E4
    J: 0x1F718
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Delay before the map retracts
-
  label: MapStationRetraction
  addr:
    U: 0x1F73C
    E: 0x1F808
    J: 0x1F73C
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Retracts the map station
-
  label: MapStation_AI
  addr:
    U: 0x1F770
    E: 0x1F83C
    J: 0x1F770
  size: 0x114
  mode: thumb
  params: null
  return: null
-
  label: MapStationScreen_AI
  addr:
    U: 0x1F884
    E: 0x1F950
    J: 0x1F884
  size: 0x12C
  mode: thumb
  params: null
  return: null
-
  label: SavePlatformDetectSamus
  addr:
    U: 0x1F9B0
    E: 0x1FA7C
    J: 0x1F9B0
  size: 0x38
  mode: thumb
  params: null
  return:
    label: Colliding
    type: bool
  notes: Detecs if samus is on the save platform (used in both save platform AI)
-
  label: SavePlatformInit
  addr:
    U: 0x1F9E8
    E: 0x1FAB4
    J: 0x1F9E8
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Initialize a map platform sprite
-
  label: SavePlatformSamusDetection
  addr:
    U: 0x1FB10
    E: 0x1FBDC
    J: 0x1FB10
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Detects if samus is on the save platform  (calls SavePlatformDetectSamus and checks if morphed/crouching)
-
  label: SavePlatformCheckOpeningAnimEnded
  addr:
    U: 0x1FB68
    E: 0x1FC34
    J: 0x1FB68
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the opening animation has ended
-
  label: SavePlatformSecondSamusDetection
  addr:
    U: 0x1FB94
    E: 0x1FC60
    J: 0x1FB94
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Re-Detects if samus in on the save platform after the opening animation
-
  label: SavePlaformCheckClosingAnimEnded
  addr:
    U: 0x1FC14
    E: 0x1FCE0
    J: 0x1FC14
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Checks if the closing animation has ended
-
  label: SavePlatformReleaseSamus
  addr:
    U: 0x1FC44
    E: 0x1FD10
    J: 0x1FC44
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Releases samus (sets pose to facing the foreground)
-
  label: SavePlatformSamusDetectionOut
  addr:
    U: 0x1FC78
    E: 0x1FD44
    J: 0x1FC78
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Detects if samus is out of the platform after being released
-
  label: SavePlatformSpawnSprites
  addr:
    U: 0x1FCB0
    E: 0x1FD7C
    J: 0x1FCB0
  size: 0xD0
  mode: thumb
  params: null
  return: null
  notes: Spawns the save platform top and an item banner
-
  label: SavePlatformFlashingAnim
  addr:
    U: 0x1FD80
    E: 0x1FE4C
    J: 0x1FD80
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Handles the flashing animation when saving
-
  label: SavePlatformFlashingAnimEnd
  addr:
    U: 0x1FDC0
    E: 0x1FE8C
    J: 0x1FDC0
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Ends the flahsing animation
-
  label: SavePlatformTextTimer
  addr:
    U: 0x1FE04
    E: 0x1FED0
    J: 0x1FE04
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Timer before displaying the "Save complete" banner
-
  label: SavePlatformCheckMessageBannerOut
  addr:
    U: 0x1FE48
    E: 0x1FF14
    J: 0x1FE48
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the banner is going out (if A is pressed)
-
  label: SavePlatformMessageBannerDisappearingTimer
  addr:
    U: 0x1FE80
    E: 0x1FF4C
    J: 0x1FE80
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Timer when the message banner is disappearing
-
  label: SavePlatformTopInit
  addr:
    U: 0x1FEA4
    E: 0x1FF70
    J: 0x1FEA4
  size: 0x16C
  mode: thumb
  params: null
  return: null
  notes: Initialize a save platform top sprite
-
  label: SavePlatformTop_Empty
  addr:
    U: 0x20010
    E: 0x200DC
    J: 0x20010
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: SavePlatformTopExtendGfxInit
  addr:
    U: 0x20014
    E: 0x200E0
    J: 0x20014
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the top extending down
-
  label: SavePlatformTopCheckExtendingEnded
  addr:
    U: 0x20030
    E: 0x200FC
    J: 0x20030
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the extending animation has ended
-
  label: SavePlatformTopRetractGfxInit
  addr:
    U: 0x2005C
    E: 0x20128
    J: 0x2005C
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the top retracting
-
  label: SavePlatformTopCheckRetractingEnded
  addr:
    U: 0x20090
    E: 0x2015C
    J: 0x20090
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the retracting animation has ended
-
  label: SavePlatformTopCheckTubeAnimSpawnEnded
  addr:
    U: 0x200BC
    E: 0x20188
    J: 0x200BC
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube spawning animation has ended
-
  label: SavePlatformTopCheckSpawnBigLight
  addr:
    U: 0x2010C
    E: 0x201D8
    J: 0x2010C
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Checks if the big light should spawn
-
  label: SavePlatformTopCheckTubeAnimEnded
  addr:
    U: 0x20160
    E: 0x2022C
    J: 0x20160
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube animation has ended
-
  label: SavePlatformTopCheckTubeAnimDespawnEnded
  addr:
    U: 0x20190
    E: 0x2025C
    J: 0x20190
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube despawning animation has ended
-
  label: SaveStationTopCheckTubeAroundAnimEnded
  addr:
    U: 0x201CC
    E: 0x20298
    J: 0x201CC
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube around animation has ended (quick beam going to the center at the beginning)
-
  label: SaveStationTopTubeDownUpAnim
  addr:
    U: 0x201E4
    E: 0x202B0
    J: 0x201E4
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the down up tube animation (thing going from ground to top)
-
  label: SavePlatform_AI
  addr:
    U: 0x20228
    E: 0x202F4
    J: 0x20228
  size: 0x1A8
  mode: thumb
  params: null
  return: null
-
  label: SavePlatformTop_AI
  addr:
    U: 0x203D0
    E: 0x2049C
    J: 0x203D0
  size: 0x194
  mode: thumb
  params: null
  return: null
-
  label: DragonYMovement
  addr:
    U: 0x20564
    E: 0x20630
    J: 0x20564
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Handles the Y movement of the dragon
-
  label: DragonInit
  addr:
    U: 0x205B4
    E: 0x20680
    J: 0x205B4
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Initialize a dragon sprite
-
  label: DragonGfxInit
  addr:
    U: 0x20628
    E: 0x206F4
    J: 0x20628
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Initializes a dragon to be idle
-
  label: DragonGoUp
  addr:
    U: 0x20650
    E: 0x2071C
    J: 0x20650
  size: 0xD0
  mode: thumb
  params: null
  return: null
  notes: Handles the dragon going up
-
  label: DragonTurningAroundGfxInit
  addr:
    U: 0x20720
    E: 0x207EC
    J: 0x20720
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initializes a dragon to be turning around
-
  label: DragonCheckTurningAroundFirstHalfAnimEnded
  addr:
    U: 0x20740
    E: 0x2080C
    J: 0x20740
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the first half of the turning around animation ended
-
  label: DragonCheckTurningAroundSecondHalfAnimEnded
  addr:
    U: 0x20778
    E: 0x20844
    J: 0x20778
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Checks if the second half of the turning around animation ended
-
  label: DragonSpittingGfxInit
  addr:
    U: 0x20798
    E: 0x20864
    J: 0x20798
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Initialize a dragon to do the warning before spitting
-
  label: DragonSpittingAnim
  addr:
    U: 0x207C0
    E: 0x2088C
    J: 0x207C0
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Checks if the warning animation ended
-
  label: DragonSpawnFireball
  addr:
    U: 0x20800
    E: 0x208CC
    J: 0x20800
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Spawns a dragon fireball secondary sprite
-
  label: DragonFireballInit
  addr:
    U: 0x20870
    E: 0x2093C
    J: 0x20870
  size: 0xE4
  mode: thumb
  params: null
  return: null
  notes: Initialize a dragon fireball sprite
-
  label: DragonFireballMove
  addr:
    U: 0x20954
    E: 0x20A20
    J: 0x20954
  size: 0xD4
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the dragon fireball
-
  label: DragonFireballExplodingGfxInit
  addr:
    U: 0x20A28
    E: 0x20AF4
    J: 0x20A28
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX when the fireball is exploding
-
  label: DragonFireballCheckExplodingAnimEnded
  addr:
    U: 0x20A64
    E: 0x20B30
    J: 0x20A64
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the exploding animation has ended
-
  label: Dragon_AI
  addr:
    U: 0x20A88
    E: 0x20B54
    J: 0x20A88
  size: 0x19C
  mode: thumb
  params: null
  return: null
-
  label: DragonFireball_AI
  addr:
    U: 0x20C24
    E: 0x20CF0
    J: 0x20C24
  size: 0x58
  mode: thumb
  params: null
  return: null
-
  label: DeoremLeftChangeClipAction
  addr:
    U: 0x20C7C
    E: 0x20D48
    J: 0x20C7C
  size: 0x84
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Used to place solid clipdata on the left part of Deorem to prevent damage boosting and to remove this solid clipdata when he dies
-
  label: DeoremRightChangeClipAction
  addr:
    U: 0x20D00
    E: 0x20DCC
    J: 0x20D00
  size: 0x90
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Same as above but for the right side
-
  label: DeoremRandomSpriteDebris
  addr:
    U: 0x20E64
    E: 0x20F30
    J: 0x20E64
  size: 0x11C
  mode: thumb
  params:
  - label: RandomNum
    type: u8
    notes: Random number (either Timer1 or 8 bit frame counter)
  return: null
  notes: Handles the spawning of random sprite debris before the fight
-
  label: DeoremSpriteDebrisSpawn
  addr:
    U: 0x20F80
    E: 0x2104C
    J: 0x20F80
  size: 0xA8
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  - label: Timer
    type: u8
  return: null
  notes: Handles the spawning of sprite debris when Deorem appears
-
  label: DeoremCheckLeaving
  addr:
    U: 0x21028
    E: 0x210F4
    J: 0x21028
  size: 0x6C
  mode: thumb
  params:
  - label: RamSlot
    type: u8
  return:
    label: Leaving
    type: bool
  notes: Checks if Deorem is leaving
-
  label: DeoremSpawnChargeBeam
  addr:
    U: 0x21094
    E: 0x21160
    J: 0x21094
  size: 0x40
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  return: null
  notes: Spawns the charge beam primary sprite and loads its GFX/palette
-
  label: DeoremSetEyeOpeningTimer
  addr:
    U: 0x210D4
    E: 0x211A0
    J: 0x210D4
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Sets the timer for how long the eye stays open depending on the difficulty
-
  label: DeoremCallSpawnChargeBeam
  addr:
    U: 0x21110
    E: 0x211DC
    J: 0x21110
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Calls DeoremSpawnChargeBeam and sets status to 0
-
  label: DeoremInit
  addr:
    U: 0x2113C
    E: 0x21208
    J: 0x2113C
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Initialize a Deorem sprite
-
  label: DeoremSpawnGoingDown
  addr:
    U: 0x21264
    E: 0x21330
    J: 0x21264
  size: 0x1B8
  mode: thumb
  params: null
  return: null
  notes: Checks if it should spawn (samus detection and if samus have missiles) spawns the first half of the body (6 Deorem segments) and locks the screen
-
  label: DeoremSpawnGoingDownAnim
  addr:
    U: 0x2141C
    E: 0x214E8
    J: 0x2141C
  size: 0xF4
  mode: thumb
  params: null
  return: null
  notes: Handles the movement, the sound/music and calls DeoremSpiteDebrisSpawn
-
  label: DeoremSpawnGoingUp
  addr:
    U: 0x21510
    E: 0x215DC
    J: 0x21510
  size: 0xD0
  mode: thumb
  params: null
  return: null
  notes: Spawns 6 others Deorem segments
-
  label: DeoremSpawnGoingUpAnim
  addr:
    U: 0x215E0
    E: 0x216AC
    J: 0x215E0
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Handles the movement and calls DeoremSpiteDebrisSpawn
-
  label: DeoremSpawnHeadBody
  addr:
    U: 0x216C0
    E: 0x2178C
    J: 0x216C0
  size: 0x114
  mode: thumb
  params: null
  return: null
  notes: Spawns the hidden part of the body (above the head) and the Deorem eye secondary sprite
-
  label: DeoremAfterSpawn
  addr:
    U: 0x217D4
    E: 0x218A0
    J: 0x217D4
  size: 0xAC
  mode: thumb
  params: null
  return: null
  notes: Called after the function above, sets the timer for how long the first eye will open
-
  label: DeoremRetracting
  addr:
    U: 0x21B04
    E: 0x21BD0
    J: 0x21B04
  size: 0x16C
  mode: thumb
  params: null
  return: null
  notes: Handles Deorem retracting after going down to attack
-
  label: DeoremThrowingThorns
  addr:
    U: 0x21C70
    E: 0x21D3C
    J: 0x21C70
  size: 0xF4
  mode: thumb
  params: null
  return: null
  notes: Handles Deorem throwing thorns (doesn't handle the thorn throwing, juste the idle state)
-
  label: DeoremAfterThorns
  addr:
    U: 0x21D64
    E: 0x21E30
    J: 0x21D64
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Called after the last thorn is thrown and before it hits the ground
-
  label: DeoremDying
  addr:
    U: 0x21DB0
    E: 0x21E7C
    J: 0x21DB0
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Called once when Deorem dies, sets events according to first or second location
-
  label: DeoremDyingGoingDown
  addr:
    U: 0x21E28
    E: 0x21EF4
    J: 0x21E28
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Handles Deorem going down when dying
-
  label: DeoremDeath
  addr:
    U: 0x21E74
    E: 0x21F40
    J: 0x21E74
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Calls SpriteDeath
-
  label: DeoremCheckLeavingToCeilingAnimEnded
  addr:
    U: 0x21EAC
    E: 0x21F78
    J: 0x21EAC
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Checks if the leaving to the ceiling animation has ended
-
  label: DeoremLeaving
  addr:
    U: 0x21F0C
    E: 0x21FD8
    J: 0x21F0C
  size: 0x180
  mode: thumb
  params: null
  return: null
  notes: Spawns 3 new Deorem segments and clears/set the events
-
  label: DeoremLeavingAnim
  addr:
    U: 0x2208C
    E: 0x22158
    J: 0x2208C
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Calls DeoremRandomSpriteDebris, starts a vertical screen shake and handles the movement
-
  label: DeoremLeavingInGroundDebris
  addr:
    U: 0x220F0
    E: 0x221BC
    J: 0x220F0
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Calls DeoremRandomSpriteDebris, starts a vertical screen shake is called when Deorem is leaving and he has its head on the ground
-
  label: DeoremSegmentInit
  addr:
    U: 0x22140
    E: 0x2220C
    J: 0x22140
  size: 0x21C
  mode: thumb
  params: null
  return: null
  notes: Initialize a Deorem segment sprite
-
  label: DeoremSegmentSpawnGoingDown
  addr:
    U: 0x2235C
    E: 0x22428
    J: 0x2235C
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Handles the movement when Deorem is spawning and going down
-
  label: DeoremSegmentSpawnGoingDownAfter
  addr:
    U: 0x223EC
    E: 0x224B8
    J: 0x223EC
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Handles the movement when Deorem is spawning, going down and the other side has started spawning
-
  label: DeoremSegmentSpawnGoingUp
  addr:
    U: 0x224B4
    E: 0x22580
    J: 0x224B4
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Handles the movement when Deorem is spawning and going up
-
  label: DeoremSegmentSpawnGoingUpAfter
  addr:
    U: 0x22544
    E: 0x22610
    J: 0x22544
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Handles the movement when Deorem is spawning, going up and the current side has finished spawning
-
  label: DeoremSegmentRightIdleAnim
  addr:
    U: 0x2260C
    E: 0x226D8
    J: 0x2260C
  size: 0x144
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation and the thorn throwing of the segments on the right side
-
  label: DeoremSegmentLeftIdleAnim
  addr:
    U: 0x22750
    E: 0x2281C
    J: 0x22750
  size: 0x144
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation and the thorn throwing of the segments on the left side
-
  label: DeoremSegmentGoingDown
  addr:
    U: 0x22894
    E: 0x22960
    J: 0x22894
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Handles the segments going down when Deorem is going down
-
  label: DeoremSegmentGoingUp
  addr:
    U: 0x22920
    E: 0x229EC
    J: 0x22920
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Handles the segments going up when Deorem is going down
-
  label: DeoremSegmentAboveHeadMovement
  addr:
    U: 0x229AC
    E: 0x22A78
    J: 0x229AC
  size: 0xB4
  mode: thumb
  params: null
  return: null
  notes: Handles the movement for the segments above the head
-
  label: DeoremSegmentLeftLeaving
  addr:
    U: 0x22A60
    E: 0x22B2C
    J: 0x22A60
  size: 0xB4
  mode: thumb
  params: null
  return: null
  notes: Handles the left side leaving
-
  label: DeoremSegmentLeftLeavingEnd
  addr:
    U: 0x22B14
    E: 0x22BE0
    J: 0x22B14
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Handles the end of the left side leaving, sets status to 0
-
  label: DeoremSegmentMiddleLeavingEnd
  addr:
    U: 0x22B3C
    E: 0x22C08
    J: 0x22B3C
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Handles the end of the middle leaving, sets status to 0
-
  label: DeoremSegmentMiddleLeaving
  addr:
    U: 0x22B64
    E: 0x22C30
    J: 0x22B64
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Handles the middle leaving
-
  label: DeoremSegmentRightLeaving
  addr:
    U: 0x22BF4
    E: 0x22CC0
    J: 0x22BF4
  size: 0xA0
  mode: thumb
  params: null
  return: null
  notes: Handles the left side leaving
-
  label: DeoremSegmentRightLeavingEnd
  addr:
    U: 0x22C94
    E: 0x22D60
    J: 0x22C94
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Handles the end of the right side leaving, sets status to 0
-
  label: DeoremSegmentSetTimerDying
  addr:
    U: 0x22CBC
    E: 0x22D88
    J: 0x22CBC
  size: 0xF8
  mode: thumb
  params: null
  return: null
  notes: Sets the timer depending on the room slot for how long it stays alive before exploding upon  Deorem death
-
  label: DeoremSegmentDying
  addr:
    U: 0x22DB4
    E: 0x22E80
    J: 0x22DB4
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Handles the death of a Deorem segment
-
  label: DeoremEyeInit
  addr:
    U: 0x22E48
    E: 0x22F14
    J: 0x22E48
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Initialize a Deorem eye sprite
-
  label: DeoremEyeSetPose9
  addr:
    U: 0x22F28
    E: 0x22FF4
    J: 0x22F28
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Sets the pose to 9
-
  label: DeoremEyeMove
  addr:
    U: 0x22F38
    E: 0x23004
    J: 0x22F38
  size: 0x19C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement and the oam rotation of the Deorem eye
-
  label: DeoremEyeDyingGfxInit
  addr:
    U: 0x23170
    E: 0x2323C
    J: 0x23170
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the eye dying (also sets Deorem pose to 62)
-
  label: DeoremEyeDyingSpinningAnim
  addr:
    U: 0x231A8
    E: 0x23274
    J: 0x231A8
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the eye spinning when Deorem is dying (body still here)
-
  label: DeoremEyeDyingMovingAnim
  addr:
    U: 0x23228
    E: 0x232F4
    J: 0x23228
  size: 0xB0
  mode: thumb
  params: null
  return: null
  notes: Handles the eye spinning and moving when Deorem is dying (body dying/not here) Calls DeoremSpawnChargeBeam
-
  label: DeoremThornInit
  addr:
    U: 0x232D8
    E: 0x233A4
    J: 0x232D8
  size: 0xDC
  mode: thumb
  params: null
  return: null
  notes: Initialize a Deorem thorn sprite
-
  label: DeoremThornSpawning
  addr:
    U: 0x233B4
    E: 0x23480
    J: 0x233B4
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Handles the spinning animation when the thorn is spawning, before is moves
-
  label: DeoremThornMovement
  addr:
    U: 0x23424
    E: 0x234F0
    J: 0x23424
  size: 0xFC
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the Deorem thorn
-
  label: Deorem_AI
  addr:
    U: 0x23520
    E: 0x235EC
    J: 0x23520
  size: 0x238
  mode: thumb
  params: null
  return: null
-
  label: DeoremSegment_AI
  addr:
    U: 0x23758
    E: 0x23824
    J: 0x23758
  size: 0x2C8
  mode: thumb
  params: null
  return: null
-
  label: DeoremEye_AI
  addr:
    U: 0x23A20
    E: 0x23AEC
    J: 0x23A20
  size: 0xE0
  mode: thumb
  params: null
  return: null
-
  label: DeoremThorn_AI
  addr:
    U: 0x23B00
    E: 0x23BCC
    J: 0x23B00
  size: 0x4C
  mode: thumb
  params: null
  return: null
-
  label: DessgeegaCheckSamusNearLeftRight
  addr:
    U: 0x23B4C
    E: 0x23C18
    J: 0x23B4C
  size: 0x20
  mode: thumb
  params: null
  return:
    label: NotOutOfRange
    type: bool
  notes: Checks if samus is in range of the dessgeega (0x140 on both side)
-
  label: DessgeegaInit
  addr:
    U: 0x23B6C
    E: 0x23C38
    J: 0x23B6C
  size: 0x10C
  mode: thumb
  params: null
  return: null
  notes: Initialize a dessgeega sprite
-
  label: DessgeegaJumpingGfxInit
  addr:
    U: 0x23C78
    E: 0x23D44
    J: 0x23C78
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initializes a dessgeega to be jumping
-
  label: DessgeegaBeforeJumping
  addr:
    U: 0x23C98
    E: 0x23D64
    J: 0x23C98
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Called once before the dessgeega jumps
-
  label: DessgeegaBeforeLanding
  addr:
    U: 0x23CFC
    E: 0x23DC8
    J: 0x23CFC
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Initializes a dessgeega to be landing
-
  label: DessgeegaCheckSamusInRange
  addr:
    U: 0x23D34
    E: 0x23E00
    J: 0x23D34
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range
-
  label: DessgeegaBouncingGfxInit
  addr:
    U: 0x23DA8
    E: 0x23E74
    J: 0x23DA8
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initializes a dessgeega to be falling
-
  label: DessgeegaCheckBouncing
  addr:
    U: 0x23DCC
    E: 0x23E98
    J: 0x23DCC
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the jump warning on ground
-
  label: DessgeegaCheckBeforeJumpingCeilingAnimEnded
  addr:
    U: 0x23E28
    E: 0x23EF4
    J: 0x23E28
  size: 0x14
  mode: thumb
  params: null
  return: null
  notes: Handles the jump warning on the ceiling
-
  label: DessgeegaMoveGround
  addr:
    U: 0x23E3C
    E: 0x23F08
    J: 0x23E3C
  size: 0x1E8
  mode: thumb
  params: null
  return: null
  notes: Handles the dessgeega jumping when on the ground
-
  label: DessgeegaMoveCeiling
  addr:
    U: 0x24024
    E: 0x240F0
    J: 0x24024
  size: 0x1FC
  mode: thumb
  params: null
  return: null
  notes: Handles the dessgeega jumping when on a ceiling
-
  label: DessgeegaCheckLandingAnimEnded
  addr:
    U: 0x24220
    E: 0x242EC
    J: 0x24220
  size: 0x14
  mode: thumb
  params: null
  return: null
  notes: Checks if the landing animation has ended
-
  label: DessgeegaJumpingGroundIntoBlock
  addr:
    U: 0x24234
    E: 0x24300
    J: 0x24234
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Handles the dessgeega falling from the ground
-
  label: DessgeegaJumpingCeilingIntoBlock
  addr:
    U: 0x242D8
    E: 0x243A4
    J: 0x242D8
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Handles the dessgeega falling from the ceiling
-
  label: DessgeegaScreamingAnim
  addr:
    U: 0x24380
    E: 0x2444C
    J: 0x24380
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Handles the dessgeega being idle on the ground
-
  label: DessgeegaCeilingIdleAnim
  addr:
    U: 0x24418
    E: 0x244E4
    J: 0x24418
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the dessgeega being idle on the ceiling
-
  label: DessgeegaDeath
  addr:
    U: 0x24474
    E: 0x24540
    J: 0x24474
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Calls SpriteDeath
-
  label: DessgeegaLongBeamDetectSamus
  addr:
    U: 0x244CC
    E: 0x24598
    J: 0x244CC
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Handles the detection of samus and the spawn for the long beam dessgeega
-
  label: DessgeegaLongBeamSpawning
  addr:
    U: 0x24584
    E: 0x24650
    J: 0x24584
  size: 0xDC
  mode: thumb
  params: null
  return: null
  notes: Handles the spawning of the long beam dessgeega
-
  label: Dessgeega_AI
  addr:
    U: 0x24660
    E: 0x2472C
    J: 0x24660
  size: 0x1DC
  mode: thumb
  params: null
  return: null
-
  label: WaverInit
  addr:
    U: 0x2483C
    E: 0x24908
    J: 0x2483C
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Initialize a waver sprite
-
  label: WaverMove
  addr:
    U: 0x248A4
    E: 0x24970
    J: 0x248A4
  size: 0xE8
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the waver
-
  label: Waver_AI
  addr:
    U: 0x2498C
    E: 0x24A58
    J: 0x2498C
  size: 0x84
  mode: thumb
  params: null
  return: null
-
  label: HiveSpawnParticle
  addr:
    U: 0x24A10
    E: 0x24ADC
    J: 0x24A10
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Spawns 2 particle effects
-
  label: HiveInit
  addr:
    U: 0x24A3C
    E: 0x24B08
    J: 0x24A3C
  size: 0x124
  mode: thumb
  params: null
  return: null
  notes: Initialize a hive sprite
-
  label: HiveCountMellow
  addr:
    U: 0x24B60
    E: 0x24C2C
    J: 0x24B60
  size: 0x54
  mode: thumb
  params: null
  return:
    label: NumOfMellowsAlive
    type: u8
    notes: Number of mellows alive
  notes: Counts the number of mellows of the current hive
-
  label: HivePhase1
  addr:
    U: 0x24BB4
    E: 0x24C80
    J: 0x24BB4
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Spawns a mellow if necesserary and checks if the hive should go to phase 2
-
  label: HivePhase2
  addr:
    U: 0x24C2C
    E: 0x24CF8
    J: 0x24C2C
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Spawns a mellow if necesserary and checks if the hive should go to phase 3
-
  label: HivePhase3
  addr:
    U: 0x24CA4
    E: 0x24D70
    J: 0x24CA4
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Spawns a mellow if necessary
-
  label: HiveDying
  addr:
    U: 0x24CD4
    E: 0x24DA0
    J: 0x24CD4
  size: 0x10C
  mode: thumb
  params: null
  return: null
  notes: Handles the hive dying, sets the 3 hives killed event if necessary
-
  label: HiveIgnoreSamusCollision
  addr:
    U: 0x24DE0
    E: 0x24EAC
    J: 0x24DE0
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Sets the ignore samus collision timer of the hive to 1
-
  label: HiveRootsInit
  addr:
    U: 0x24DF0
    E: 0x24EBC
    J: 0x24DF0
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Initialize a hive roots sprite
-
  label: HiveRootsMove
  addr:
    U: 0x24E54
    E: 0x24F20
    J: 0x24E54
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Handles the idle movement related part of the idle animation
-
  label: MellowInit
  addr:
    U: 0x24E78
    E: 0x24F44
    J: 0x24E78
  size: 0x150
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Initialize a mellow sprite
-
  label: MellowIdleAnim
  addr:
    U: 0x24FC8
    E: 0x25094
    J: 0x24FC8
  size: 0xC0
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the mellow being idle
-
  label: MellowFleeing
  addr:
    U: 0x25088
    E: 0x25154
    J: 0x25088
  size: 0x48
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles a mellow fleeing
-
  label: MellowSamusDetected
  addr:
    U: 0x250D0
    E: 0x2519C
    J: 0x250D0
  size: 0x68
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Called once when the mellow detected samus
-
  label: MellowMove
  addr:
    U: 0x25138
    E: 0x25204
    J: 0x25138
  size: 0x3FC
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the movement of the mellow when chasing samus
-
  label: Hive_AI
  addr:
    U: 0x25534
    E: 0x25600
    J: 0x25534
  size: 0x84
  mode: thumb
  params: null
  return: null
-
  label: HiveRoots_AI
  addr:
    U: 0x255B8
    E: 0x25684
    J: 0x255B8
  size: 0xAC
  mode: thumb
  params: null
  return: null
-
  label: Mellow_AI
  addr:
    U: 0x25664
    E: 0x25730
    J: 0x25664
  size: 0x154
  mode: thumb
  params: null
  return: null
-
  label: Mellow_Swarm_AI
  addr:
    U: 0x257B8
    E: 0x25884
    J: 0x257B8
  size: 0x1E8
  mode: thumb
  params: null
  return: null
-
  label: ImagoLarvaBellyFlashing
  addr:
    U: 0x25A24
    E: 0x25AF0
    J: 0x25A24
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the flashing animation of the imago larva belly
-
  label: ImagoLarvaInit
  addr:
    U: 0x25A80
    E: 0x25B4C
    J: 0x25A80
  size: 0x194
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Initialize an imago larva sprite
-
  label: ImagoLarvaDetectSamus
  addr:
    U: 0x25C14
    E: 0x25CE0
    J: 0x25C14
  size: 0x38
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Calls ImagoLarvaBellyFlashing and checks if samus is in range
-
  label: ImagoLarvaHittingWallGfxInit
  addr:
    U: 0x25C4C
    E: 0x25D18
    J: 0x25C4C
  size: 0x1C
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Initialize the GFX for the larva hitting the wall after dashing
-
  label: ImagoLarvaCallBellyFlashing
  addr:
    U: 0x25C68
    E: 0x25D34
    J: 0x25C68
  size: 0xC
  mode: thumb
  params: null
  return: null
  notes: Calls ImagoLarvaBellyFlashing
-
  label: ImagoLarvaRetreating
  addr:
    U: 0x25C9C
    E: 0x25D68
    J: 0x25C9C
  size: 0x68
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Handles the larva retreating
-
  label: ImagoLarvaAfterRetreatGfxInit
  addr:
    U: 0x25D04
    E: 0x25DD0
    J: 0x25D04
  size: 0x1C
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Initialize the GFX for the larva after it retreated
-
  label: ImagoLarvaAttackAfterRetreat
  addr:
    U: 0x25D20
    E: 0x25DEC
    J: 0x25D20
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Timer related to the attack animation after the larva retreated
-
  label: ImagoLarvaStartingToAttack
  addr:
    U: 0x25D48
    E: 0x25E14
    J: 0x25D48
  size: 0x34
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Called once when the larva starts to attack
-
  label: ImagoLarvaCheckWarningAnimEnded
  addr:
    U: 0x25D7C
    E: 0x25E48
    J: 0x25D7C
  size: 0x24
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Checks if the warning animation before attacking has ended
-
  label: ImagoLarvaAttackGfxInit
  addr:
    U: 0x25DA0
    E: 0x25E6C
    J: 0x25DA0
  size: 0x28
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Initialize the GFX for the larva attacking
-
  label: ImagoLarvaAttacking
  addr:
    U: 0x25DC8
    E: 0x25E94
    J: 0x25DC8
  size: 0x64
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Handles the larva attacking
-
  label: ImagoTakingDamageGfxInit
  addr:
    U: 0x25E2C
    E: 0x25EF8
    J: 0x25E2C
  size: 0x38
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Initialize the GFX for the larva taking damage
-
  label: ImagoLarvaCeckTakingDamageAnimEnded
  addr:
    U: 0x25E64
    E: 0x25F30
    J: 0x25E64
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the taking damage animation has ended
-
  label: ImagoLarvaBeforeDying
  addr:
    U: 0x25E88
    E: 0x25F54
    J: 0x25E88
  size: 0x64
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Called once before the larva dies
-
  label: ImagoLarvaCheckDyingAnimEnded
  addr:
    U: 0x25EEC
    E: 0x25FB8
    J: 0x25EEC
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Checks if the dying animation has ended
-
  label: ImagoLarvaDead
  addr:
    U: 0x25F14
    E: 0x25FE0
    J: 0x25F14
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the death of the imago larva, calls SpriteDeath  and sets the caterpillar killed event if necessary
-
  label: ImagoLarvaOutsideInit
  addr:
    U: 0x25F70
    E: 0x2603C
    J: 0x25F70
  size: 0x1CC
  mode: thumb
  params: null
  return: null
  notes: Initialize a imago larva outside sprite
-
  label: ImagoLarvaOutsideRetracting
  addr:
    U: 0x2613C
    E: 0x26208
    J: 0x2613C
  size: 0x180
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Called all the time but seems to only affect the retraction
-
  label: ImagoLarvaOutsideAttacking
  addr:
    U: 0x262BC
    E: 0x26388
    J: 0x262BC
  size: 0x60
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Called all the time but seems to only affect the attack
-
  label: ImagoLarvaOutsideRemoveOrbs
  addr:
    U: 0x2631C
    E: 0x263E8
    J: 0x2631C
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Removes the 3 orbs when attacking
-
  label: ImagoLarvaOutsideAttackingAnim
  addr:
    U: 0x2636C
    E: 0x26438
    J: 0x2636C
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Handles the attacking animation
-
  label: ImagoLarvaOutsideCheckAttackingAnimEnded
  addr:
    U: 0x263D4
    E: 0x264A0
    J: 0x263D4
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Checks if the attacking animation has ended
-
  label: ImagoLarvaOutsideDead
  addr:
    U: 0x26424
    E: 0x264F0
    J: 0x26424
  size: 0xD0
  mode: thumb
  params: null
  return: null
  notes: Handles the death of the imago larva outside, calls SpriteDeath
-
  label: ImagoLarva_AI
  addr:
    U: 0x264F4
    E: 0x265C0
    J: 0x264F4
  size: 0x2C0
  mode: thumb
  params: null
  return: null
-
  label: ImagoLarva_Outside_AI
  addr:
    U: 0x267B4
    E: 0x26880
    J: 0x267B4
  size: 0x108
  mode: thumb
  params: null
  return: null
-
  label: MorphBallLauncherChangeClipAction
  addr:
    U: 0x268BC
    E: 0x26988
    J: 0x268BC
  size: 0x74
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enables the launcher hitbox
-
  label: MorphBallLauncherInit
  addr:
    U: 0x26930
    E: 0x269FC
    J: 0x26930
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Initialize a morph ball launcher sprite
-
  label: MorphBallLauncherDetectBomb
  addr:
    U: 0x269C4
    E: 0x26A90
    J: 0x269C4
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Checks if there's a bomb on the launcher
-
  label: MorphBallLauncherBombTimer
  addr:
    U: 0x26A58
    E: 0x26B24
    J: 0x26A58
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Timer that's as long as the bomb explosion time
-
  label: MorphBallLauncherLaunchSamusAnim
  addr:
    U: 0x26A98
    E: 0x26B64
    J: 0x26A98
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Handles the samus launching animation
-
  label: MorphBallLauncher_AI
  addr:
    U: 0x26B08
    E: 0x26BD4
    J: 0x26B08
  size: 0x48
  mode: thumb
  params: null
  return: null
-
  label: MorphBallLauncher_Back_AI
  addr:
    U: 0x26B50
    E: 0x26C1C
    J: 0x26B50
  size: 0xE8
  mode: thumb
  params: null
  return: null
-
  label: ImagoCocoonUpdatePositionAndAnim
  addr:
    U: 0x26C38
    E: 0x26D04
    J: 0x26C38
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Updates the animation and the position for imago cocoon and the imago cocoon vines
-
  label: ImagoCocoonChangeOneClipAction
  addr:
    U: 0x26CA0
    E: 0x26D6C
    J: 0x26CA0
  size: 0x40
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Removes the middle block of the floor when imago cocoon falls
-
  label: ImagoCocoonChangeTwoMiddleClipAction
  addr:
    U: 0x26CE0
    E: 0x26DAC
    J: 0x26CE0
  size: 0x70
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Removes the 2 blocks of the floor around the middle block when imago cocoon falls
-
  label: ImagoCocoonChangeTwoAroundClipAction
  addr:
    U: 0x26D50
    E: 0x26E1C
    J: 0x26D50
  size: 0x7C
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Removes the 2 blocks at the edges of the floor when imago cocoon falls
-
  label: ImagoCocoonChangeTwoBlockingClipAction
  addr:
    U: 0x26DCC
    E: 0x26E98
    J: 0x26DCC
  size: 0x5C
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Removes the blocks blocking the passage after imago dies
-
  label: ImagoCocoonChangeOamScaling
  addr:
    U: 0x26E28
    E: 0x26EF4
    J: 0x26E28
  size: 0x54
  mode: thumb
  params:
  - label: ScalingCheck
    type: u16
  - label: OamScaling
    type: u16
  return: null
  notes: Checks if the OAM scaling is above or below r0-0x100 or r0+0x100 if check is succesful, adds/decrement r1 to the current OAM scaling
-
  label: ImagoCocoonInit
  addr:
    U: 0x26E7C
    E: 0x26F48
    J: 0x26E7C
  size: 0x2AC
  mode: thumb
  params: null
  return: null
  notes: Initialize an imago cocoon sprite
-
  label: ImagoCocoonFallingMovement
  addr:
    U: 0x27128
    E: 0x271F4
    J: 0x27128
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the imago cocoon falling
-
  label: ImagoCocoonMainLoop
  addr:
    U: 0x27154
    E: 0x27220
    J: 0x27154
  size: 0x130
  mode: thumb
  params: null
  return: null
  notes: Handles the spawning of imago cocoon (detecting samus to play the music) also handles the death of imago cocoon (setting the event) also calls ImagoCocoonChangeOAMScalling and handles the palette switching
-
  label: ImagoCocoonFallingBeforeBlocks
  addr:
    U: 0x27284
    E: 0x27350
    J: 0x27284
  size: 0x174
  mode: thumb
  params: null
  return: null
  notes: Handles imago cocoon falling before he destroyed the blocks
-
  label: ImagoCocoonFallingAfterBlocks
  addr:
    U: 0x273F8
    E: 0x274C4
    J: 0x273F8
  size: 0xFC
  mode: thumb
  params: null
  return: null
  notes: Handles imago cocoon falling after he destroyed the blocks
-
  label: ImagoCocoonUnlockPassage
  addr:
    U: 0x274F4
    E: 0x275C0
    J: 0x274F4
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Checks the timer for the imago cocoon, if timer ended sets door unlock timer and opens up the passage
-
  label: ImagoCocoonInGroundAnim
  addr:
    U: 0x2753C
    E: 0x27608
    J: 0x2753C
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Handles the animation of the imago cocoon when he is on the ground after falling
-
  label: ImagoCocoonVineInit
  addr:
    U: 0x275AC
    E: 0x27678
    J: 0x275AC
  size: 0x320
  mode: thumb
  params: null
  return: null
  notes: Initialize an imago cocoon vine sprite
-
  label: ImagoCocoonVinePlaySound
  addr:
    U: 0x278CC
    E: 0x27998
    J: 0x278CC
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Plays a sound if conditions are true
-
  label: ImagoCocoonVineDeath
  addr:
    U: 0x27904
    E: 0x279D0
    J: 0x27904
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Called when the vine dies
-
  label: ImagoCocoonVineSpawnSpore
  addr:
    U: 0x2798C
    E: 0x27A58
    J: 0x2798C
  size: 0x160
  mode: thumb
  params: null
  return: null
  notes: Handles the spawning of the spores
-
  label: ImagoCocoonVineHangingDeath
  addr:
    U: 0x27AEC
    E: 0x27BB8
    J: 0x27AEC
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the removal of the hanging vine when imago dies
-
  label: ImagoCocoonVineHangingDeathAnim
  addr:
    U: 0x27B30
    E: 0x27BFC
    J: 0x27B30
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the animation of the removal of the hanging vine when imago dies
-
  label: ImagoCocoonSporeSyncPosition
  addr:
    U: 0x27B74
    E: 0x27C40
    J: 0x27B74
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the spore position with the imago cocoon position
-
  label: ImagoCocoonSporeInit
  addr:
    U: 0x27BC8
    E: 0x27C94
    J: 0x27BC8
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Initialize an imago cocoon spore sprite
-
  label: ImagoCocoonSporeBeforeSpawning
  addr:
    U: 0x27C70
    E: 0x27D3C
    J: 0x27C70
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Called before the spawning of the imago cocoon spore
-
  label: ImagoCocoonSporeSpawning
  addr:
    U: 0x27CE4
    E: 0x27DB0
    J: 0x27CE4
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Handles the spawning of the imago cocoon spore
-
  label: ImagoCocoonSporeMove
  addr:
    U: 0x27D70
    E: 0x27E3C
    J: 0x27D70
  size: 0x114
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the imago cocoon spore
-
  label: ImagoCocoonSporeExplodingGfxInit
  addr:
    U: 0x27E84
    E: 0x27F50
    J: 0x27E84
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the spore exploding
-
  label: ImagoCocoonSporeCheckExplodingAnimEnded
  addr:
    U: 0x27EB8
    E: 0x27F84
    J: 0x27EB8
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the exploding animation has ended
-
  label: WingedRipperImagoCollision
  addr:
    U: 0x27EDC
    E: 0x27FA8
    J: 0x27EDC
  size: 0xC4
  mode: thumb
  params: null
  return:
    label: Colliding
    type: bool
  notes: Checks if the winged ripper and imago are colliding when he is falling
-
  label: WingedRipperInit
  addr:
    U: 0x27FA0
    E: 0x2806C
    J: 0x27FA0
  size: 0xA0
  mode: thumb
  params: null
  return: null
  notes: Initialize a winged ripper sprite
-
  label: WingedRipperGfxInit
  addr:
    U: 0x28040
    E: 0x2810C
    J: 0x28040
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the winged ripper
-
  label: WingedRipperMove
  addr:
    U: 0x28060
    E: 0x2812C
    J: 0x28060
  size: 0x224
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the winged ripper
-
  label: WingedRipperDeath
  addr:
    U: 0x28284
    E: 0x28350
    J: 0x28284
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the death of the winged ripper
-
  label: ImagoCocoon_AI
  addr:
    U: 0x282C8
    E: 0x28394
    J: 0x282C8
  size: 0x104
  mode: thumb
  params: null
  return: null
-
  label: ImagoCocoonVine_AI
  addr:
    U: 0x283CC
    E: 0x28498
    J: 0x283CC
  size: 0x70
  mode: thumb
  params: null
  return: null
-
  label: ImagoCocoonSpore_AI
  addr:
    U: 0x2843C
    E: 0x28508
    J: 0x2843C
  size: 0x8C
  mode: thumb
  params: null
  return: null
-
  label: WingedRipper_AI
  addr:
    U: 0x284C8
    E: 0x28594
    J: 0x284C8
  size: 0x6C
  mode: thumb
  params: null
  return: null
-
  label: DefeatedImagoCocoon_AI
  addr:
    U: 0x28534
    E: 0x28600
    J: 0x28534
  size: 0x78
  mode: thumb
  params: null
  return: null
-
  label: ImagoCocoonRoot_AI
  addr:
    U: 0x285AC
    E: 0x28678
    J: 0x285AC
  size: 0x7C
  mode: thumb
  params: null
  return: null
-
  label: EventTrigger_ImagoPassage_AI
  addr:
    U: 0x28628
    E: 0x286F4
    J: 0x28628
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Event trigger, discovered imago passage AI
-
  label: ImagoCocoon_AfterFight_AI
  addr:
    U: 0x286B8
    E: 0x28784
    J: 0x286B8
  size: 0x74
  mode: thumb
  params: null
  return: null
-
  label: ElevatorPad_AI
  addr:
    U: 0x2872C
    E: 0x287F8
    J: 0x2872C
  size: 0xB8
  mode: thumb
  params: null
  return: null
-
  label: DisableChozodiaAlarm
  addr:
    U: 0x287E4
    E: 0x288B0
    J: 0x287E4
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Disables the alarm if mecha ridley isn't dead  sets the stealth music if fully powered suit isn't obtained
-
  label: DecrementChozodiaAlarm
  addr:
    U: 0x28830
    E: 0x288FC
    J: 0x28830
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Decrements the alarm
-
  label: SpawnSpacePiratesWaiting
  addr:
    U: 0x28874
    E: 0x28940
    J: 0x28874
  size: 0x138
  mode: thumb
  params: null
  return: null
  notes: Spawns the space pirates waiting when the alarm is on
-
  label: SpacePirateTurningAround
  addr:
    U: 0x289AC
    E: 0x28A78
    J: 0x289AC
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Updates the hitbox left and right offset and X flips the sprite if necessary
-
  label: SpacePirateSamusDetection
  addr:
    U: 0x289F0
    E: 0x28ABC
    J: 0x289F0
  size: 0xA18
  mode: thumb
  params: null
  return: null
  notes: Handles the pirate detecting samus
-
  label: SpacePirateCheckCollidingWithLaser
  addr:
    U: 0x29408
    E: 0x294D4
    J: 0x29408
  size: 0xD8
  mode: thumb
  params: null
  return: null
  notes: Checks if a space pirate is colliding with a space pirate laser
-
  label: SpacePirateFireLaserGround
  addr:
    U: 0x294E0
    E: 0x295AC
    J: 0x294E0
  size: 0x190
  mode: thumb
  params: null
  return: null
  notes: Spawns space pirate lasers secondary sprites when the space pirate fires on ground
-
  label: SpacePirateFireLaserWall
  addr:
    U: 0x29670
    E: 0x2973C
    J: 0x29670
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Spawns space pirate lasers secondary sprites when the space pirate fires on the wall
-
  label: SpacePirateCheckSamusInShootingRange
  addr:
    U: 0x29A18
    E: 0x29AE4
    J: 0x29A18
  size: 0x150
  mode: thumb
  params: null
  return:
    label: InRange
    type: bool
  notes: Checks if samus in is shooting range of the pirate
-
  label: SpacePirateInit
  addr:
    U: 0x2A374
    E: 0x2A440
    J: 0x2A374
  size: 0x2C8
  mode: thumb
  params: null
  return: null
  notes: Initialize a space pirate sprite
-
  label: SpacePirateRunningTurningAround
  addr:
    U: 0x2A804
    E: 0x2A8D0
    J: 0x2A804
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles the pirate turning around when running
-
  label: SpacePirateIdleAlertAnimation
  addr:
    U: 0x2A83C
    E: 0x2A908
    J: 0x2A83C
  size: 0xD4
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation of the pirate when alert
-
  label: SpacePirateClimbing
  addr:
    U: 0x2B708
    E: 0x2B7D4
    J: 0x2B708
  size: 0x1F4
  mode: thumb
  params: null
  return: null
  notes: Handles the pirate climbing
-
  label: SpacePirateDeath
  addr:
    U: 0x2C30C
    E: 0x2C3D8
    J: 0x2C30C
  size: 0x94
  mode: thumb
  params:
  - label: PlaySoundFlag
    type: bool
  return: null
  notes: Handles the death of the space pirate, counts the number of space pirates alives and if all pirates are dead disables the alarm
-
  label: SpacePirateLaserInit
  addr:
    U: 0x2C44C
    E: 0x2C518
    J: 0x2C44C
  size: 0xF4
  mode: thumb
  params: null
  return: null
  notes: Initialize a space pirate laser sprite
-
  label: SpacePirateLaserExploding
  addr:
    U: 0x2C540
    E: 0x2C60C
    J: 0x2C540
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Handles the explosion of the laser (when colliding with something)
-
  label: SpacePirateLaserCheckExplodingAnimEnded
  addr:
    U: 0x2C5A0
    E: 0x2C66C
    J: 0x2C5A0
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the exploding animation has ended
-
  label: SpacePirateLaserMove
  addr:
    U: 0x2C5C4
    E: 0x2C690
    J: 0x2C5C4
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the space pirate laser
-
  label: SpacePirate_AI
  addr:
    U: 0x2C6A4
    E: 0x2C770
    J: 0x2C6A4
  size: 0x488
  mode: thumb
  params: null
  return: null
-
  label: SpacePirateLaser_AI
  addr:
    U: 0x2CB2C
    E: 0x2CBF8
    J: 0x2CB2C
  size: 0x3C
  mode: thumb
  params: null
  return: null
-
  label: BlackSpacePirateHitByProjectile
  addr:
    U: 0x2CB68
    E: 0x2CC34
    J: 0x2CB68
  size: 0x268
  mode: thumb
  params: null
  return: null
  notes: Handles the black space pirate getting hit by a projectile, checks if the projectile is of plasma type, deals damage if yes and spawns a particle effect if not
-
  label: BlackSpacePirateCollidingWithLaser
  addr:
    U: 0x2CDD0
    E: 0x2CE9C
    J: 0x2CDD0
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Checks if the black space pirate is colliding with a laser, if yes sets a particle effect
-
  label: BlackSpacePirateInit
  addr:
    U: 0x2CEB0
    E: 0x2CF7C
    J: 0x2CEB0
  size: 0xE4
  mode: thumb
  params: null
  return: null
  notes: Initialize a black space pirate sprite
-
  label: BlackSpacePirateCheckOffScreen
  addr:
    U: 0x2CF94
    E: 0x2D060
    J: 0x2CF94
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Checks if the black space pirate is on screen, if yes sets its pose to 27
-
  label: BlackSpacePirateBeforeShootingGfxInit
  addr:
    U: 0x2CFB4
    E: 0x2D080
    J: 0x2CFB4
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the black space pirate before shooting
-
  label: SpacePirateShootingTimer
  addr:
    U: 0x2D004
    E: 0x2D0D0
    J: 0x2D004
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the timer for the timer shooting
-
  label: BlackSpacePirateShootingGfxInit
  addr:
    U: 0x2D048
    E: 0x2D114
    J: 0x2D048
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the black space pirate shooting
-
  label: BlackSpacePirateJumping
  addr:
    U: 0x2D180
    E: 0x2D24C
    J: 0x2D180
  size: 0x45C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the black space pirate jumping
-
  label: BlackSpacePirateDeath
  addr:
    U: 0x2D758
    E: 0x2D824
    J: 0x2D758
  size: 0x3C
  mode: thumb
  params:
  - label: PlaySoundFlag
    type: bool
  return: null
  notes: Handles the death of the black space pirate
-
  label: BlackSpacePirate_AI
  addr:
    U: 0x2D840
    E: 0x2D90C
    J: 0x2D840
  size: 0x438
  mode: thumb
  params: null
  return: null
-
  label: EscapeShipSpacePirateInit
  addr:
    U: 0x2DC78
    E: 0x2DD44
    J: 0x2DC78
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Initialize an escape ship space pirate sprite
-
  label: EscapeShipSpacePirateInit2
  addr:
    U: 0x2DCD8
    E: 0x2DDA4
    J: 0x2DCD8
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Second part of the initialization
-
  label: EscapeShipSpacePirateDetectSamus
  addr:
    U: 0x2DD1C
    E: 0x2DDE8
    J: 0x2DD1C
  size: 0x7C
  mode: thumb
  params: null
  return: null
  notes: Detects if samus is in range
-
  label: EscapeShipSpacePirate_AI
  addr:
    U: 0x2DD98
    E: 0x2DE64
    J: 0x2DD98
  size: 0x458
  mode: thumb
  params: null
  return: null
-
  label: ZiplineGeneratorChangeClipAction
  addr:
    U: 0x2E1F0
    E: 0x2E2BC
    J: 0x2E1F0
  size: 0x64
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox for the zipline generator
-
  label: ZiplineGeneratorInit
  addr:
    U: 0x2E254
    E: 0x2E320
    J: 0x2E254
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Initialize a zipline generator sprite
-
  label: ZiplineGeneratorDetectSamus
  addr:
    U: 0x2E334
    E: 0x2E400
    J: 0x2E334
  size: 0xBC
  mode: thumb
  params: null
  return: null
  notes: Detects if samus is in the hole and in morph ball if yes starts activating the ziplines
-
  label: ZiplineGeneratorActivating
  addr:
    U: 0x2E3F0
    E: 0x2E4BC
    J: 0x2E3F0
  size: 0xFC
  mode: thumb
  params: null
  return: null
  notes: Handles the activating animation, and the end of the activation (sets samus pose to morphball and sets the ziplines activated event)
-
  label: ZiplineGenerator_AI
  addr:
    U: 0x2E4EC
    E: 0x2E5B8
    J: 0x2E4EC
  size: 0x38
  mode: thumb
  params: null
  return: null
-
  label: ZiplineGeneratorPart_AI
  addr:
    U: 0x2E524
    E: 0x2E5F0
    J: 0x2E524
  size: 0xEC
  mode: thumb
  params: null
  return: null
-
  label: GametInit
  addr:
    U: 0x2E610
    E: 0x2E6DC
    J: 0x2E610
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Initialize a gamet sprite
-
  label: GametGfxInit
  addr:
    U: 0x2E670
    E: 0x2E73C
    J: 0x2E670
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the gamet
-
  label: GametSpawn
  addr:
    U: 0x2E6AC
    E: 0x2E778
    J: 0x2E6AC
  size: 0x168
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range and spawns the gamet
-
  label: GametGoingUp
  addr:
    U: 0x2E814
    E: 0x2E8E0
    J: 0x2E814
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the gamet going up after spawning
-
  label: GametRespawning
  addr:
    U: 0x2E894
    E: 0x2E960
    J: 0x2E894
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Handles the gamet respawning
-
  label: GametMove
  addr:
    U: 0x2E8F8
    E: 0x2E9C4
    J: 0x2E8F8
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Handles the gamet moving
-
  label: Gamet_AI
  addr:
    U: 0x2E9BC
    E: 0x2EA88
    J: 0x2E9BC
  size: 0x13C
  mode: thumb
  params: null
  return: null
-
  label: SecurityGateChangeClipAction
  addr:
    U: 0x2EAF8
    E: 0x2EBC4
    J: 0x2EAF8
  size: 0x50
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disables the hitbox for the gate
-
  label: SecurityGateOpen
  addr:
    U: 0x2EB48
    E: 0x2EC14
    J: 0x2EB48
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Opens the gate
-
  label: SecurityGateStartClosing
  addr:
    U: 0x2EB88
    E: 0x2EC54
    J: 0x2EB88
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Starts the closing of the gate
-
  label: SecurityGateDefaultOpenInit
  addr:
    U: 0x2EBC0
    E: 0x2EC8C
    J: 0x2EBC0
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Initialize a security gate default open sprite
-
  label: SecurityGateDefaultOpenCheckAlarm
  addr:
    U: 0x2EC68
    E: 0x2ED34
    J: 0x2EC68
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Checks if the alarm timer isn't 0, if yes calls SecurityGateStartClosing
-
  label: SecurityGateCheckClosingAnimEnded
  addr:
    U: 0x2EC80
    E: 0x2ED4C
    J: 0x2EC80
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the closing animation has ended
-
  label: SecurityGateDefaultOpenOpenAfterAlarm
  addr:
    U: 0x2ECB8
    E: 0x2ED84
    J: 0x2ECB8
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Checks if the alarm timer is 0, if yes calls SecurityGateOpen
-
  label: SecurityGateCheckOpeningAnimEnded
  addr:
    U: 0x2ED18
    E: 0x2EDE4
    J: 0x2ED18
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Checks if the opening animation has ended
-
  label: SecurityGateDeath
  addr:
    U: 0x2ED40
    E: 0x2EE0C
    J: 0x2ED40
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Calls SpriteDeath, seems unused
-
  label: SecurityGateDefaultClosedInit
  addr:
    U: 0x2ED80
    E: 0x2EE4C
    J: 0x2ED80
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Initialize a security gate default closed sprite
-
  label: SecurityGateDefaultClosedCheckAlarm
  addr:
    U: 0x2EE24
    E: 0x2EEF0
    J: 0x2EE24
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Checks if the alarm timer is 0, if yes calls SecurityGateStartClosing
-
  label: SecurityGateDefaultClosedCloseAfterAlarm
  addr:
    U: 0x2EE3C
    E: 0x2EF08
    J: 0x2EE3C
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Checks if the alarm timer isn't 0, if yes calls SecurityGateOpen
-
  label: SecurityGate_Open_AI
  addr:
    U: 0x2EE78
    E: 0x2EF44
    J: 0x2EE78
  size: 0xF0
  mode: thumb
  params: null
  return: null
  notes: Security gate default open AI
-
  label: SecurityGate_Closed_AI
  addr:
    U: 0x2EF68
    E: 0x2F034
    J: 0x2EF68
  size: 0xF0
  mode: thumb
  params: null
  return: null
  notes: Security gate default closed AI
-
  label: ZebboInit
  addr:
    U: 0x2F058
    E: 0x2F124
    J: 0x2F058
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Initialize a zebbo sprite
-
  label: ZebboGfxInit
  addr:
    U: 0x2F0B0
    E: 0x2F17C
    J: 0x2F0B0
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the zebbo
-
  label: ZebboSpawn
  addr:
    U: 0x2F0EC
    E: 0x2F1B8
    J: 0x2F0EC
  size: 0x164
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range and spawns the zebbo
-
  label: ZebboGoingUp
  addr:
    U: 0x2F250
    E: 0x2F31C
    J: 0x2F250
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the zebbo going up after spawning
-
  label: ZebboRespawning
  addr:
    U: 0x2F2D0
    E: 0x2F39C
    J: 0x2F2D0
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Handles the zebbo respawning
-
  label: ZebboMove
  addr:
    U: 0x2F334
    E: 0x2F400
    J: 0x2F334
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Handles the zebbo moving
-
  label: Zebbo_AI
  addr:
    U: 0x2F3FC
    E: 0x2F4C8
    J: 0x2F3FC
  size: 0x138
  mode: thumb
  params: null
  return: null
-
  label: WorkerRobotCheckSamusTouchingFront
  addr:
    U: 0x2F534
    E: 0x2F600
    J: 0x2F534
  size: 0xC4
  mode: thumb
  params: null
  return:
    label: SamusTouchingFront
    type: bool
  notes: Checks if samus is in front of the worker robot
-
  label: WorkerRobotInit
  addr:
    U: 0x2F5F8
    E: 0x2F6C4
    J: 0x2F5F8
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Initialize a worker robot sprite
-
  label: WorkerRobotGfxInit
  addr:
    U: 0x2F688
    E: 0x2F754
    J: 0x2F688
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the worker robot
-
  label: WorkerRobotSleepingDetectProjectile
  addr:
    U: 0x2F6A8
    E: 0x2F774
    J: 0x2F6A8
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks for a projectile collision when the robot is sleeping
-
  label: WorkerRobotStandingGfxInit
  addr:
    U: 0x2F6E0
    E: 0x2F7AC
    J: 0x2F6E0
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the worker robot standing
-
  label: WorkerRobotCheckStandingAnimEnded
  addr:
    U: 0x2F718
    E: 0x2F7E4
    J: 0x2F718
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the standing animation has ended
-
  label: WorkerRobotWalkingDetectProjectile
  addr:
    U: 0x2F734
    E: 0x2F800
    J: 0x2F734
  size: 0x19C
  mode: thumb
  params: null
  return: null
  notes: Checks for a projectile collision when the robot is walking
-
  label: WorkerRobotWakingUpGfxInit
  addr:
    U: 0x2F8D0
    E: 0x2F99C
    J: 0x2F8D0
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the worker robot waking up
-
  label: WorkerRobotCheckProjectile
  addr:
    U: 0x2F90C
    E: 0x2F9D8
    J: 0x2F90C
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Calls WorkerRobotWalkingDetectProjectile and decrements timer1
-
  label: WorkerRobotWalkGfxInit
  addr:
    U: 0x2F948
    E: 0x2FA14
    J: 0x2F948
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the worker robot walking
-
  label: WorkerRobotMove
  addr:
    U: 0x2F968
    E: 0x2FA34
    J: 0x2F968
  size: 0x25C
  mode: thumb
  params: null
  return: null
  notes: Handles the worker robot walking
-
  label: WorkerRobotBackToSleepGfxInit
  addr:
    U: 0x2FBC4
    E: 0x2FC90
    J: 0x2FBC4
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the worker robot going back to sleep
-
  label: WorkerRobotCheckBackToSleepAnimEnded
  addr:
    U: 0x2FBFC
    E: 0x2FCC8
    J: 0x2FBFC
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Checks if the going back to sleep animation has ended
-
  label: WorkerRobotTurningAround
  addr:
    U: 0x2FC30
    E: 0x2FCFC
    J: 0x2FC30
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Handles the worker robot turning around
-
  label: WorkerRobotCheckTurningAroundAnimEnded
  addr:
    U: 0x2FC7C
    E: 0x2FD48
    J: 0x2FC7C
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the turning around animation has ended
-
  label: WorkerRobotFallingGfxInit
  addr:
    U: 0x2FC98
    E: 0x2FD64
    J: 0x2FC98
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the worker robot falling
-
  label: WorkerRobotFalling
  addr:
    U: 0x2FCC0
    E: 0x2FD8C
    J: 0x2FCC0
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the worker robot falling
-
  label: WorkingRobotFallingSleepGfxInit
  addr:
    U: 0x2FD40
    E: 0x2FE0C
    J: 0x2FD40
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the worker robot falling when asleep
-
  label: WorkerRobotFallingSleep
  addr:
    U: 0x2FD5C
    E: 0x2FE28
    J: 0x2FD5C
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Handles the worker robot falling when asleep
-
  label: WorkerRobot_AI
  addr:
    U: 0x2FDD4
    E: 0x2FEA0
    J: 0x2FDD4
  size: 0x11C
  mode: thumb
  params: null
  return: null
-
  label: ParasiteCount
  addr:
    U: 0x2FEF0
    E: 0x2FFBC
    J: 0x2FEF0
  size: 0x54
  mode: thumb
  params: null
  return:
    label: CountGreaterThan3
    type: bool
  notes: Counts the number of bugs that are on pose 0x43, used to know if samus should take damage
-
  label: ParasiteInit
  addr:
    U: 0x2FF44
    E: 0x30010
    J: 0x2FF44
  size: 0x12C
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Initialize a parasite sprite
-
  label: ParasiteGrabSamus
  addr:
    U: 0x30070
    E: 0x3013C
    J: 0x30070
  size: 0x90
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite grabbing samus
-
  label: ParasiteSamusGrabbed
  addr:
    U: 0x30100
    E: 0x301CC
    J: 0x30100
  size: 0x190
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite behavior when grabbing samus
-
  label: ParasiteExpulsedGfxInit
  addr:
    U: 0x30290
    E: 0x3035C
    J: 0x30290
  size: 0x30
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Initialize the GFX for the parasite getting expulsed
-
  label: ParasiteStarExplusedAfterGrabbingObject
  addr:
    U: 0x302C0
    E: 0x3038C
    J: 0x302C0
  size: 0xA0
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite starting to get expulsed when he was previously on an object (geron or samus)
-
  label: ParasiteExpulsed
  addr:
    U: 0x30360
    E: 0x3042C
    J: 0x30360
  size: 0xA8
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite getting expulsed
-
  label: ParasiteExplusedAfterGrabbingObject
  addr:
    U: 0x30408
    E: 0x304D4
    J: 0x30408
  size: 0xE8
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite getting expulsed when he was previously on an object (geron or samus)
-
  label: ParasiteFalling
  addr:
    U: 0x304F0
    E: 0x305BC
    J: 0x304F0
  size: 0xDC
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite falling
-
  label: ParasiteJumping
  addr:
    U: 0x30684
    E: 0x30750
    J: 0x30684
  size: 0xBC
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite (multiple) jumping
-
  label: ParasiteJumpingSecondPart
  addr:
    U: 0x3080C
    E: 0x308D8
    J: 0x3080C
  size: 0xC0
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the second part of the parasite (multiple) jumping
-
  label: ParasiteCrouchingGfxInit
  addr:
    U: 0x308CC
    E: 0x30998
    J: 0x308CC
  size: 0x50
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Initialize the GFX for the parasite crouching
-
  label: ParasiteWalking
  addr:
    U: 0x30AB4
    E: 0x30B80
    J: 0x30AB4
  size: 0x1A4
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite (multiple) walking
-
  label: ParasiteUncrouchingGfxInit
  addr:
    U: 0x30C58
    E: 0x30D24
    J: 0x30C58
  size: 0x1C
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Initialize the GFX for the parasite uncrouching
-
  label: ParasiteCheckTurningAroundAnimEnded
  addr:
    U: 0x30C74
    E: 0x30D40
    J: 0x30C74
  size: 0x24
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Checks if the turning around animation has ended
-
  label: ParasiteCheckTurningAroundAnimNearEnded
  addr:
    U: 0x30C98
    E: 0x30D64
    J: 0x30C98
  size: 0x1C
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Checks if the turning around animation has nearly ended
-
  label: ParasiteLanding
  addr:
    U: 0x30CD4
    E: 0x30DA0
    J: 0x30CD4
  size: 0xA0
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite landing
-
  label: ParasiteNormalFalling
  addr:
    U: 0x30D84
    E: 0x30E50
    J: 0x30D84
  size: 0x74
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the parasite falling normally (block broken below)
-
  label: ParasiteCheckEvent
  addr:
    U: 0x30E54
    E: 0x30F20
    J: 0x30E54
  size: 0x60
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Checks if the bugs killed event should be set
-
  label: ParasiteGrabGeron
  addr:
    U: 0x30EB4
    E: 0x30F80
    J: 0x30EB4
  size: 0x98
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the bug grabbing a geron
-
  label: ParasiteBombCollision
  addr:
    U: 0x310E8
    E: 0x311B4
    J: 0x310E8
  size: 0x118
  mode: thumb
  params:
  - label: CurrSpritePtr
    type: SpriteData *
    notes: Current sprite pointer
  return: null
  notes: Handles the collision with a bomb exploding
-
  label: Parasite_Multiple_AI
  addr:
    U: 0x31200
    E: 0x312CC
    J: 0x31200
  size: 0x27C
  mode: thumb
  params: null
  return: null
-
  label: Parasite_AI
  addr:
    U: 0x3147C
    E: 0x31548
    J: 0x3147C
  size: 0x28C
  mode: thumb
  params: null
  return: null
-
  label: PistonChangeFourClipAction
  addr:
    U: 0x31708
    E: 0x317D4
    J: 0x31708
  size: 0x54
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox for the piston
-
  label: PistonChangeOneBelowClipAction
  addr:
    U: 0x3175C
    E: 0x31828
    J: 0x3175C
  size: 0x20
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of the bottom block of the piston
-
  label: PistonChangeOneUpperClipAction
  addr:
    U: 0x3177C
    E: 0x31848
    J: 0x3177C
  size: 0x28
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox of the top block of the piston
-
  label: PistonCheckSamusIn
  addr:
    U: 0x317E4
    E: 0x318B0
    J: 0x317E4
  size: 0x4C
  mode: thumb
  params: null
  return:
    label: In
    type: bool
  notes: Checks if samus is in the top part of the piston after it went up
-
  label: PistonInit
  addr:
    U: 0x31830
    E: 0x318FC
    J: 0x31830
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Initialize a piston sprite
-
  label: PistonGfxInit
  addr:
    U: 0x31890
    E: 0x3195C
    J: 0x31890
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the piston
-
  label: PistonCheckProjectile
  addr:
    U: 0x318BC
    E: 0x31988
    J: 0x318BC
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Checks for a projectile
-
  label: PistonMove
  addr:
    U: 0x31944
    E: 0x31A10
    J: 0x31944
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Handles the piston opening
-
  label: PistonAfterMoving
  addr:
    U: 0x3199C
    E: 0x31A68
    J: 0x3199C
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Called after the piston finished opening
-
  label: Piston_AI
  addr:
    U: 0x319D0
    E: 0x31A9C
    J: 0x319D0
  size: 0xD4
  mode: thumb
  params: null
  return: null
-
  label: RidleyCheckDead
  addr:
    U: 0x31C58
    E: 0x31D24
    J: 0x31C58
  size: 0x180
  mode: thumb
  params: null
  return: null
  notes: Checks if ridley is dead
-
  label: RidleySamusGrabbed
  addr:
    U: 0x31E40
    E: 0x31F0C
    J: 0x31E40
  size: 0x268
  mode: thumb
  params:
  - label: RamSlot
    type: u8
  return: null
  notes: Handles ridley grabbing samus
-
  label: RidleyTailAttacksXMove
  addr:
    U: 0x320D8
    E: 0x321A4
    J: 0x320D8
  size: 0xB0
  mode: thumb
  params:
  - label: XMovement
    type: u16
  return:
    label: PrevCollisionNotAir
    type: bool
    notes: Previous collision not air
  notes: Handles ridley moving horizontally when doing tail attacks
-
  label: RidleyTailAttacksYMove
  addr:
    U: 0x32188
    E: 0x32254
    J: 0x32188
  size: 0x44
  mode: thumb
  params:
  - label: YMovement
    type: u16
  return: null
  notes: Handles ridley moving vertically when doing tail attacks
-
  label: RidleySpawnFireballsStart
  addr:
    U: 0x321CC
    E: 0x32298
    J: 0x321CC
  size: 0x58
  mode: thumb
  params:
  - label: OamScaling
    type: u16
  return: null
  notes: Spawns the fireballs at the beginning of the fight using r0 for room slot
-
  label: RidleyCheckSpawn
  addr:
    U: 0x32224
    E: 0x322F0
    J: 0x32224
  size: 0x284
  mode: thumb
  params: null
  return: null
  notes: Initializes a ridley sprite
-
  label: RidleyPlayCutscene
  addr:
    U: 0x324A8
    E: 0x32574
    J: 0x324A8
  size: 0xB4
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is facing left, if yes plays cutscene
-
  label: RidleySpawning
  addr:
    U: 0x3255C
    E: 0x32628
    J: 0x3255C
  size: 0x6E4
  mode: thumb
  params: null
  return: null
  notes: Handles ridley spawning
-
  label: RidleyFlyingGfxInit
  addr:
    U: 0x32C40
    E: 0x32D0C
    J: 0x32C40
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for ridley flying normally
-
  label: RidleyTurningAroundGfxInit
  addr:
    U: 0x332F4
    E: 0x333C0
    J: 0x332F4
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for ridley turning around
-
  label: RidleyCheckTurningAroundAnimNearEnded
  addr:
    U: 0x3337C
    E: 0x33448
    J: 0x3337C
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Checks if the turning around animation has nearly ended
-
  label: RidleyCheckTurningAroundSecondPartAnimEnded
  addr:
    U: 0x33410
    E: 0x334DC
    J: 0x33410
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Check if the second part of the turning around animation has ended
-
  label: Ridley_Empty
  addr:
    U: 0x338B4
    E: 0x33980
    J: 0x338B4
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: RidleyBigFireballsAttack
  addr:
    U: 0x339D4
    E: 0x33AA0
    J: 0x339D4
  size: 0x12C
  mode: thumb
  params: null
  return: null
  notes: Handles the big fireballs attack
-
  label: RidleyDying
  addr:
    U: 0x33B00
    E: 0x33BCC
    J: 0x33B00
  size: 0x214
  mode: thumb
  params: null
  return: null
  notes: Handles ridley dying, sets random particle effects and sets the ridley killed event
-
  label: RidleyBodyInit
  addr:
    U: 0x33D14
    E: 0x33DE0
    J: 0x33D14
  size: 0x148
  mode: thumb
  params: null
  return: null
  notes: Initialize a ridley body sprite
-
  label: RidleyTailDead
  addr:
    U: 0x33F74
    E: 0x34040
    J: 0x33F74
  size: 0x144
  mode: thumb
  params: null
  return: null
  notes: Handles the ridley tail dying
-
  label: RidleyTailInit
  addr:
    U: 0x340B8
    E: 0x34184
    J: 0x340B8
  size: 0x9C
  mode: thumb
  params: null
  return: null
  notes: Initialize a ridley tail sprite
-
  label: RidleyFireBallInit
  addr:
    U: 0x34710
    E: 0x347DC
    J: 0x34710
  size: 0x14C
  mode: thumb
  params: null
  return: null
  notes: Initialize a ridley fire ball sprite
-
  label: RidleyFireBallSmallMove
  addr:
    U: 0x3485C
    E: 0x34928
    J: 0x3485C
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the small fire balls (when samus is grabbed)
-
  label: RidleyFireBallBigMove
  addr:
    U: 0x348B4
    E: 0x34980
    J: 0x348B4
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the big fire balls (when samus is grabbed)
-
  label: RidleyFireBallMediumMove
  addr:
    U: 0x34920
    E: 0x349EC
    J: 0x34920
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the medium fire balls (at the beginning of the fight)
-
  label: Ridley_AI
  addr:
    U: 0x34A38
    E: 0x34B04
    J: 0x34A38
  size: 0x2EC
  mode: thumb
  params: null
  return: null
-
  label: RidleyTail_AI
  addr:
    U: 0x34D24
    E: 0x34DF0
    J: 0x34D24
  size: 0x310
  mode: thumb
  params: null
  return: null
-
  label: RidleyBody_AI
  addr:
    U: 0x35034
    E: 0x35100
    J: 0x35034
  size: 0x168
  mode: thumb
  params: null
  return: null
  notes: Ridley fireball AI
-
  label: RidleyFireball_AI
  addr:
    U: 0x3519C
    E: 0x35268
    J: 0x3519C
  size: 0x1C4
  mode: thumb
  params: null
  return: null
-
  label: MetroidMidair
  addr:
    U: 0x35360
    E: 0x3542C
    J: 0x35360
  size: 0x7C
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  return:
    label: NotMidair
    type: bool
  notes: Checks if colliding with air, used when samus is gabbed for the movement
-
  label: MetroidMove
  addr:
    U: 0x353DC
    E: 0x354A8
    J: 0x353DC
  size: 0x30C
  mode: thumb
  params:
  - label: SamusYPosition
    type: u16
  - label: SamusXPosition
    type: u16
  - label: YSpeed
    type: u8
  - label: XSpeed
    type: u8
  - label: SpeedDivisor
    type: u8
  return: null
  notes: Handles the metroid moving
-
  label: MetroidBombDetection
  addr:
    U: 0x356E8
    E: 0x357B4
    J: 0x356E8
  size: 0xBC
  mode: thumb
  params: null
  return:
    label: BombTouching
    type: bool
  notes: Detects if a bomb is colliding with the metroid
-
  label: MetroidCheckBouncingOnMetroid
  addr:
    U: 0x357A4
    E: 0x35870
    J: 0x357A4
  size: 0x1B8
  mode: thumb
  params:
  - label: Movement
    type: u16
  return: null
  notes: Checks if the metroid is colliding with another metroid, if yes makes them bounce
-
  label: MetroidCheckSamusGrabbed
  addr:
    U: 0x3595C
    E: 0x35A28
    J: 0x3595C
  size: 0x48
  mode: thumb
  params: null
  return:
    label: SamusGrabbed
    type: bool
  notes: Checks if another metroid is grabbing samus
-
  label: MetroidPlaySound
  addr:
    U: 0x359A4
    E: 0x35A70
    J: 0x359A4
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Plays a sound if conditions are true
-
  label: MetroidInit
  addr:
    U: 0x359D0
    E: 0x35A9C
    J: 0x359D0
  size: 0x184
  mode: thumb
  params: null
  return: null
  notes: Initialize a metroid sprite
-
  label: MetroidCheckSpawn
  addr:
    U: 0x35B54
    E: 0x35C20
    J: 0x35B54
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Checks if the metroid should spawn (is on screen)
-
  label: MetroidSpawning
  addr:
    U: 0x35B98
    E: 0x35C64
    J: 0x35B98
  size: 0xDC
  mode: thumb
  params: null
  return: null
  notes: Handles the metroid spawning
-
  label: MetroidSpawnedGfxInit
  addr:
    U: 0x35C74
    E: 0x35D40
    J: 0x35C74
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Initializes a metroid to be moving
-
  label: MetroidMovement
  addr:
    U: 0x35CA8
    E: 0x35D74
    J: 0x35CA8
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Calls MetroidMove, MetroidCheckBouncingOnMetroid and checks if grabbing samus
-
  label: MetroidGrabSamusGfxInit
  addr:
    U: 0x35D28
    E: 0x35DF4
    J: 0x35D28
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Initializes a metroid to have samus grabbed
-
  label: MetroidSamusGrabbed
  addr:
    U: 0x35D6C
    E: 0x35E38
    J: 0x35D6C
  size: 0x168
  mode: thumb
  params: null
  return: null
  notes: Handles the metroid having grabbed samus (movement and release)
-
  label: MetroidDeath
  addr:
    U: 0x35ED4
    E: 0x35FA0
    J: 0x35ED4
  size: 0x13C
  mode: thumb
  params: null
  return: null
  notes: Calls SpriteDeath and checks if all metroids are dead, sets event accordingly
-
  label: Metroid_AI
  addr:
    U: 0x36010
    E: 0x360DC
    J: 0x36010
  size: 0x160
  mode: thumb
  params: null
  return: null
-
  label: MetroidShell_AI
  addr:
    U: 0x36170
    E: 0x3623C
    J: 0x36170
  size: 0x104
  mode: thumb
  params: null
  return: null
-
  label: MetroidDoorLock_AI
  addr:
    U: 0x36274
    E: 0x36340
    J: 0x36274
  size: 0x98
  mode: thumb
  params: null
  return: null
-
  label: RinkaInit
  addr:
    U: 0x3630C
    E: 0x363D8
    J: 0x3630C
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Initialize a rinka sprite
-
  label: RinkaGfxInit
  addr:
    U: 0x363A4
    E: 0x36470
    J: 0x363A4
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the rinka
-
  label: RinkaRespawn
  addr:
    U: 0x363E0
    E: 0x364AC
    J: 0x363E0
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Handles the respawning of the rinka
-
  label: RinkaSpawning
  addr:
    U: 0x36474
    E: 0x36540
    J: 0x36474
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Handles the rinka spawning
-
  label: RinkaMove
  addr:
    U: 0x3658C
    E: 0x36658
    J: 0x3658C
  size: 0x234
  mode: thumb
  params: null
  return: null
  notes: Handles the rinka moving
-
  label: RinkaMotherBrainGfxInit
  addr:
    U: 0x367C0
    E: 0x3688C
    J: 0x367C0
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the mother brain rinka
-
  label: RinkaMotherBrainRespawn
  addr:
    U: 0x367E0
    E: 0x368AC
    J: 0x367E0
  size: 0x184
  mode: thumb
  params: null
  return: null
  notes: Handles the respawning of thte mother brain rinka
-
  label: RinkaMotherBrainSpawning
  addr:
    U: 0x36964
    E: 0x36A30
    J: 0x36964
  size: 0x110
  mode: thumb
  params: null
  return: null
  notes: Handles the mother brain rinka spawning
-
  label: RinkaMotherBrainMove
  addr:
    U: 0x36A74
    E: 0x36B40
    J: 0x36A74
  size: 0x2C0
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the mother brain rinka and determines where it spawns
-
  label: Rinka_AI
  addr:
    U: 0x36D34
    E: 0x36E00
    J: 0x36D34
  size: 0x9C
  mode: thumb
  params: null
  return: null
-
  label: Rinka_MotherBrain_AI
  addr:
    U: 0x36DD0
    E: 0x36E9C
    J: 0x36DD0
  size: 0xF4
  mode: thumb
  params: null
  return: null
-
  label: PolypInit
  addr:
    U: 0x36EC4
    E: 0x36F90
    J: 0x36EC4
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Initialize a polyp sprite
-
  label: PolypGfxInit
  addr:
    U: 0x36F10
    E: 0x36FDC
    J: 0x36F10
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initializes a polyp to be idle
-
  label: PolypCheckSpawnProjectile
  addr:
    U: 0x36F34
    E: 0x37000
    J: 0x36F34
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Checks if the polyp can spawn a projectile
-
  label: PolypCheckSpittingAnimEnded
  addr:
    U: 0x36FA8
    E: 0x37074
    J: 0x36FA8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Checks if the warning animation has ended
-
  label: PolypSpawnProjectile
  addr:
    U: 0x36FD8
    E: 0x370A4
    J: 0x36FD8
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Spawns a poly projectile
-
  label: PolypCheckAfterSpittingAnimEnded
  addr:
    U: 0x3703C
    E: 0x37108
    J: 0x3703C
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the after spitting animation has ended
-
  label: PolypCheckRetractingAnimNearEnded
  addr:
    U: 0x37068
    E: 0x37134
    J: 0x37068
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the retracting animation has nearly ended
-
  label: PolypProjectileInit
  addr:
    U: 0x37084
    E: 0x37150
    J: 0x37084
  size: 0xE0
  mode: thumb
  params: null
  return: null
  notes: Initialize a polyp projectile sprite
-
  label: PolypProjectileSpawn
  addr:
    U: 0x37164
    E: 0x37230
    J: 0x37164
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Handles the spawning of the polyp projectile
-
  label: PolypProjectileMove
  addr:
    U: 0x371AC
    E: 0x37278
    J: 0x371AC
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the polyp projectile
-
  label: PolypProjectileExplodingGfxInit
  addr:
    U: 0x37234
    E: 0x37300
    J: 0x37234
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Initializes a polyp projectile to be exploding
-
  label: PolypProjectileCheckExplodingAnimEnded
  addr:
    U: 0x37284
    E: 0x37350
    J: 0x37284
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the exploding animation has ended
-
  label: Polyp_AI
  addr:
    U: 0x372A8
    E: 0x37374
    J: 0x372A8
  size: 0x11C
  mode: thumb
  params: null
  return: null
-
  label: PolypProjectile_AI
  addr:
    U: 0x373C4
    E: 0x37490
    J: 0x373C4
  size: 0x78
  mode: thumb
  params: null
  return: null
-
  label: ViolaInit
  addr:
    U: 0x3743C
    E: 0x37508
    J: 0x3743C
  size: 0x120
  mode: thumb
  params: null
  return: null
  notes: Initialize a viola sprite
-
  label: ViolaMoveRight
  addr:
    U: 0x3755C
    E: 0x37628
    J: 0x3755C
  size: 0x1A8
  mode: thumb
  params: null
  return: null
  notes: Handles the viola moving to the right
-
  label: ViolaMoveLeft
  addr:
    U: 0x37704
    E: 0x377D0
    J: 0x37704
  size: 0x148
  mode: thumb
  params: null
  return: null
  notes: Handles the viola moving to the left
-
  label: ViolaMoveDown
  addr:
    U: 0x3784C
    E: 0x37918
    J: 0x3784C
  size: 0x148
  mode: thumb
  params: null
  return: null
  notes: Handles the viola moving down
-
  label: ViolaMoveUp
  addr:
    U: 0x37994
    E: 0x37A60
    J: 0x37994
  size: 0x14C
  mode: thumb
  params: null
  return: null
  notes: Handles the viola moving up
-
  label: ViolaStartFalling
  addr:
    U: 0x37AE0
    E: 0x37BAC
    J: 0x37AE0
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Initializes a viola to be falling
-
  label: ViolaFalling
  addr:
    U: 0x37AF8
    E: 0x37BC4
    J: 0x37AF8
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Handles the viola falling
-
  label: Viola_AI
  addr:
    U: 0x37B70
    E: 0x37C3C
    J: 0x37B70
  size: 0x14C
  mode: thumb
  params: null
  return: null
-
  label: SecurityLaserInit
  addr:
    U: 0x37CBC
    E: 0x37D88
    J: 0x37CBC
  size: 0x21C
  mode: thumb
  params: null
  return: null
  notes: Initialize a security laser sprite
-
  label: SecurityLaserSamusCollision
  addr:
    U: 0x37ED8
    E: 0x37FA4
    J: 0x37ED8
  size: 0x13C
  mode: thumb
  params: null
  return: null
  notes: Handles the security laser colliding with samus
-
  label: SecurityLaserCheckDespawnAnimEnded
  addr:
    U: 0x38014
    E: 0x380E0
    J: 0x38014
  size: 0xD4
  mode: thumb
  params: null
  return: null
  notes: Checks if the despawning animation has ended
-
  label: SecurityLaserSetAlarm
  addr:
    U: 0x380E8
    E: 0x381B4
    J: 0x380E8
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Sets the alarm
-
  label: SecurityLaser_Unused
  addr:
    U: 0x38104
    E: 0x381D0
    J: 0x38104
  size: 0xCC
  mode: thumb
  params: null
  return: null
  notes: Very similar code to SecurityLaserCheckDespawnAnimEnded, seems unused
-
  label: SecurityLaser_AI
  addr:
    U: 0x381D0
    E: 0x3829C
    J: 0x381D0
  size: 0x13C
  mode: thumb
  params: null
  return: null
-
  label: HoltzYMovement
  addr:
    U: 0x3830C
    E: 0x383D8
    J: 0x3830C
  size: 0xCC
  mode: thumb
  params:
  - label: YMovement
    type: u16
  return:
    label: PrevCollisionCheckIsSolid
    type: bool
    notes: Previous collision check is solid
  notes: Handles the vertical movement of the holtz
-
  label: HoltzXMovement
  addr:
    U: 0x383D8
    E: 0x384A4
    J: 0x383D8
  size: 0x8C
  mode: thumb
  params:
  - label: XMovement
    type: u16
  return:
    label: PrevCollisionCheckIsSolid
    type: bool
    notes: Previous collision check is solid
  notes: Handles the horizontal movement of the holtz
-
  label: HoltzInit
  addr:
    U: 0x38464
    E: 0x38530
    J: 0x38464
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Initialize a holtz sprite
-
  label: HoltzGfxInit
  addr:
    U: 0x384DC
    E: 0x385A8
    J: 0x384DC
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initializes a holtz to be idle
-
  label: HoltzSamusDetection
  addr:
    U: 0x38518
    E: 0x385E4
    J: 0x38518
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation and samus detection
-
  label: HoltzWarningGfxInit
  addr:
    U: 0x38588
    E: 0x38654
    J: 0x38588
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the holtz warning
-
  label: HoltzCheckWarningAnimEnded
  addr:
    U: 0x385A8
    E: 0x38674
    J: 0x385A8
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Checks if the warning animation has ended
-
  label: HoltzGoingDownMove
  addr:
    U: 0x38638
    E: 0x38704
    J: 0x38638
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the holtz going down
-
  label: HoltzSlidingMove
  addr:
    U: 0x38698
    E: 0x38764
    J: 0x38698
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the holtz sliding on the ground
-
  label: HoltzGoingUpMove
  addr:
    U: 0x386E4
    E: 0x387B0
    J: 0x386E4
  size: 0x9C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the holtz going up
-
  label: HoltzBackToCeiling
  addr:
    U: 0x38780
    E: 0x3884C
    J: 0x38780
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Handles the animation of the holtz back on the ceiling
-
  label: Holtz_AI
  addr:
    U: 0x387D0
    E: 0x3889C
    J: 0x387D0
  size: 0x1AC
  mode: thumb
  params: null
  return: null
-
  label: GekitaiMachine_AI
  addr:
    U: 0x3897C
    E: 0x38A48
    J: 0x3897C
  size: 0xC
  mode: thumb
  params: null
  return: null
-
  label: CalculateDelayForRuinsTest
  addr:
    U: 0x38988
    E: 0x38A54
    J: 0x38988
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calcules the delay for the ruins test
-
  label: RuinsTestChangeClipAction
  addr:
    U: 0x389AC
    E: 0x38A78
    J: 0x389AC
  size: 0xD8
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Disables the ceiling hitbox
-
  label: RuinsTestMoveToPosition
  addr:
    U: 0x38A84
    E: 0x38B50
    J: 0x38A84
  size: 0x1D0
  mode: thumb
  params:
  - label: TargetYPosition
    type: u16
  - label: TargetXPosition
    type: u16
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  - label: OamScaling
    type: u16
  - label: Always4
    type: u16
  return: null
  notes: Handles slowly moving an object from r2 and r3 to r0 and r1? Used to move the ghost back at the center at the end of the fight and to move the symbols to the corners
-
  label: RuinsTestProjectileCollision
  addr:
    U: 0x38C54
    E: 0x38D20
    J: 0x38C54
  size: 0xD4
  mode: thumb
  params: null
  return:
    label: Colliding
    type: bool
  notes: Checks if a projectile is colliding with the shootable symbol Handles samus taking damage
-
  label: RuinsTestCheckSamusHurting
  addr:
    U: 0x38DF4
    E: 0x38EC0
    J: 0x38DF4
  size: 0x34
  mode: thumb
  params: null
  return:
    label: SamusGettingHurt
    type: bool
  notes: Checks if the current sprite mosaic flag is on and if samus' current pose is Getting Hurt
-
  label: RuinsTestGhostMove
  addr:
    U: 0x38F44
    E: 0x39010
    J: 0x38F44
  size: 0x9C
  mode: thumb
  params:
  - label: RandomNum
    type: u8
    notes: Random number
  return: null
  notes: Moves the ghost depending on the Sine Y Values table
-
  label: RuinsTestInit
  addr:
    U: 0x38FE0
    E: 0x390AC
    J: 0x38FE0
  size: 0xEC
  mode: thumb
  params: null
  return: null
  notes: Initialize a ruins test sprite
-
  label: RuinsTestSpawnReflectionStart
  addr:
    U: 0x3910C
    E: 0x391D8
    J: 0x3910C
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Spawns the ruins test reflection cover and the ruins test samus reflection start
-
  label: RuinsTestCheckSamusNotFacingBackground
  addr:
    U: 0x391C4
    E: 0x39290
    J: 0x391C4
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is still facing the background
-
  label: RuinsTestSpawnGhost
  addr:
    U: 0x39234
    E: 0x39300
    J: 0x39234
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Spawn the ruins test ghost and the ruins test ghost outline sprites
-
  label: RuinsTestAfterGhostSpawn
  addr:
    U: 0x392C8
    E: 0x39394
    J: 0x392C8
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Called once after the ghost spawn
-
  label: RuinsTestMoveGhostToCenter
  addr:
    U: 0x39610
    E: 0x396DC
    J: 0x39610
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Moves the ghost back to the center at the end of the fight
-
  label: RuinsTestReflectionEnd
  addr:
    U: 0x396D0
    E: 0x3979C
    J: 0x396D0
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Spawns the ruins test samus reflection end, plays the getting fully powered suit cutscene sets the fully powered suit event, and calls RuinsTestChangeCCAA
-
  label: RuinsTestGhostInit
  addr:
    U: 0x39774
    E: 0x39840
    J: 0x39774
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Initialize a ruins test ghost sprite
-
  label: RuinsTestGhostSpawn
  addr:
    U: 0x3988C
    E: 0x39958
    J: 0x3988C
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Handles the spawning of the ruins test ghost
-
  label: RuinsTestGhostSyncPosition
  addr:
    U: 0x39900
    E: 0x399CC
    J: 0x39900
  size: 0xFC
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the ghost position with the main ruins test sprite
-
  label: RuinsTestGhostDespawn
  addr:
    U: 0x399FC
    E: 0x39AC8
    J: 0x399FC
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the despawning of the ruins test ghost
-
  label: RuinsTestGhostAfterFirstSymbol
  addr:
    U: 0x39C74
    E: 0x39D40
    J: 0x39C74
  size: 0x17C
  mode: thumb
  params: null
  return: null
  notes: Called after the first symbol is in place
-
  label: RuinsTestGhostAfterFight
  addr:
    U: 0x39DF0
    E: 0x39EBC
    J: 0x39DF0
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Called once at the end of the fight
-
  label: RuinsTest_AI
  addr:
    U: 0x39E78
    E: 0x39F44
    J: 0x39E78
  size: 0x2F4
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestSymbol_AI
  addr:
    U: 0x3A16C
    E: 0x3A238
    J: 0x3A16C
  size: 0x394
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestSamusReflection_Start_AI
  addr:
    U: 0x3A500
    E: 0x3A5CC
    J: 0x3A500
  size: 0x1B8
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestReflectionCover_AI
  addr:
    U: 0x3A6B8
    E: 0x3A784
    J: 0x3A6B8
  size: 0xC8
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestGhostOutline_AI
  addr:
    U: 0x3A780
    E: 0x3A84C
    J: 0x3A780
  size: 0x134
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestShootableSymbol_AI
  addr:
    U: 0x3A8B4
    E: 0x3A980
    J: 0x3A8B4
  size: 0x24C
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestGhost_AI
  addr:
    U: 0x3AB00
    E: 0x3ABCC
    J: 0x3AB00
  size: 0x168
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestSamusReflection_End_AI
  addr:
    U: 0x3AC68
    E: 0x3AD34
    J: 0x3AC68
  size: 0x3D4
  mode: thumb
  params: null
  return: null
-
  label: RuinsTestLightningInit
  addr:
    U: 0x3B03C
    E: 0x3B108
    J: 0x3B03C
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Partially Initialize a ruins test lightning sprite
-
  label: RuinsTestLightning_AI
  addr:
    U: 0x3B06C
    E: 0x3B138
    J: 0x3B06C
  size: 0x300
  mode: thumb
  params: null
  return: null
-
  label: MellaYMovement
  addr:
    U: 0x3B36C
    E: 0x3B438
    J: 0x3B36C
  size: 0xCC
  mode: thumb
  params:
  - label: YMovement
    type: u16
  return:
    label: PrevCollisionCheckIsSolid
    type: bool
    notes: Previous collision check is solid
  notes: Handles the Y movement of the mella
-
  label: MellaXMovement
  addr:
    U: 0x3B438
    E: 0x3B504
    J: 0x3B438
  size: 0x8C
  mode: thumb
  params:
  - label: XMovement
    type: u16
  return:
    label: PrevCollisionCheckIsSolid
    type: bool
    notes: Previous collision check is solid
  notes: Handles the X movement of the mella
-
  label: MellaInit
  addr:
    U: 0x3B4C4
    E: 0x3B590
    J: 0x3B4C4
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Initialize a mella sprite
-
  label: MellaIdleGfxInit
  addr:
    U: 0x3B52C
    E: 0x3B5F8
    J: 0x3B52C
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Initializes a mella to be idle
-
  label: MellaIdleAnimation
  addr:
    U: 0x3B564
    E: 0x3B630
    J: 0x3B564
  size: 0x9C
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation and samus detection
-
  label: MellaGoingDownGfxInit
  addr:
    U: 0x3B600
    E: 0x3B6CC
    J: 0x3B600
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initializes a mella to be moving
-
  label: MellaStartGoingDown
  addr:
    U: 0x3B624
    E: 0x3B6F0
    J: 0x3B624
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Handles the delay before the mella goes down
-
  label: MellaGoingDown
  addr:
    U: 0x3B688
    E: 0x3B754
    J: 0x3B688
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Handles the mella going down
-
  label: MellaGoingUp
  addr:
    U: 0x3B71C
    E: 0x3B7E8
    J: 0x3B71C
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Handles the mella going up
-
  label: Mella_AI
  addr:
    U: 0x3B7B0
    E: 0x3B87C
    J: 0x3B7B0
  size: 0x194
  mode: thumb
  params: null
  return: null
-
  label: AtomicShootElectricity
  addr:
    U: 0x3BC34
    E: 0x3BD00
    J: 0x3BC34
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Handles the atomic shooting the electricity and the animation before shooting
-
  label: AtomicInit
  addr:
    U: 0x3BCEC
    E: 0x3BDB8
    J: 0x3BCEC
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Initialize an atomic sprite
-
  label: AtomicGfxInit
  addr:
    U: 0x3BD7C
    E: 0x3BE48
    J: 0x3BD7C
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the atomic
-
  label: AtomicIdleAnimation
  addr:
    U: 0x3BDA8
    E: 0x3BE74
    J: 0x3BDA8
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation of the atomic
-
  label: AtomicMove
  addr:
    U: 0x3BE38
    E: 0x3BF04
    J: 0x3BE38
  size: 0x144
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the atomic
-
  label: AtomicElectricityCheckAtomicAlive
  addr:
    U: 0x3C150
    E: 0x3C21C
    J: 0x3C150
  size: 0x30
  mode: thumb
  params:
  - label: RamSlot
    type: u8
  return:
    label: NotAtomicOrDead
    type: bool
  notes: Checks if the main sprite of the atomic electricity is an atomic and is alive
-
  label: AtomicElectricityInit
  addr:
    U: 0x3C180
    E: 0x3C24C
    J: 0x3C180
  size: 0x7C
  mode: thumb
  params: null
  return: null
  notes: Initialize an atomic electricity sprite
-
  label: AtomicElectricitySpawn
  addr:
    U: 0x3C1FC
    E: 0x3C2C8
    J: 0x3C1FC
  size: 0x1AC
  mode: thumb
  params: null
  return: null
  notes: Handles the spawning of the atomic electricity
-
  label: AtomicElectricityMove
  addr:
    U: 0x3C3A8
    E: 0x3C474
    J: 0x3C3A8
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Handles the atomic electricty moving
-
  label: AtomicElectricityExploding
  addr:
    U: 0x3C470
    E: 0x3C53C
    J: 0x3C470
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Handles the atomic electricty exploding
-
  label: AtomicElectricityCheckOnGroundAnimEnded
  addr:
    U: 0x3C4C4
    E: 0x3C590
    J: 0x3C4C4
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Checks if the animation of the electricity being on the ground has ended
-
  label: Atomic_AI
  addr:
    U: 0x3C4DC
    E: 0x3C5A8
    J: 0x3C4DC
  size: 0x150
  mode: thumb
  params: null
  return: null
-
  label: AtomicElectricity_AI
  addr:
    U: 0x3C62C
    E: 0x3C6F8
    J: 0x3C62C
  size: 0xD8
  mode: thumb
  params: null
  return: null
-
  label: AreaBannerInit
  addr:
    U: 0x3C704
    E: 0x3C7D0
    J: 0x3C704
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Initialize an area banner sprite
-
  label: AreaBannerSpawn
  addr:
    U: 0x3C7A8
    E: 0x3C874
    J: 0x3C7A8
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Handles the area banner spawning
-
  label: AreaBannerCheckScrollingUpAnimEnded
  addr:
    U: 0x3C7C8
    E: 0x3C894
    J: 0x3C7C8
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Checks if the scrolling up animation has ended
-
  label: AreaBannerStatic
  addr:
    U: 0x3C828
    E: 0x3C8F4
    J: 0x3C828
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the area banner being static
-
  label: AreaBannerCheckRemovingAnimEnded
  addr:
    U: 0x3C86C
    E: 0x3C938
    J: 0x3C86C
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Checks if the scrolling down animation has ended
-
  label: AreaBanner_AI
  addr:
    U: 0x3C884
    E: 0x3C950
    J: 0x3C884
  size: 0xE0
  mode: thumb
  params: null
  return: null
-
  label: MotherBrainSyncSubSpritePosition
  addr:
    U: 0x3C964
    E: 0x3CA30
    J: 0x3C964
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the sub sprites of mother brain with her
-
  label: MotherBrainPaletteSwitching
  addr:
    U: 0x3C9CC
    E: 0x3CA98
    J: 0x3C9CC
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the palette switching when mother brain charges the beam and fires it
-
  label: MotherBrainInit
  addr:
    U: 0x3CA4C
    E: 0x3CB18
    J: 0x3CA4C
  size: 0x144
  mode: thumb
  params: null
  return: null
  notes: Initialize a mother brain sprite
-
  label: MotherBrainMainLoop
  addr:
    U: 0x3CBFC
    E: 0x3CCC8
    J: 0x3CBFC
  size: 0x3FC
  mode: thumb
  params: null
  return: null
  notes: Mother brain main loop AI, handles the update of the sub sprites, firing the beam the death and the animations
-
  label: MotherBrainDeath
  addr:
    U: 0x3CFF8
    E: 0x3D0C4
    J: 0x3CFF8
  size: 0xCC
  mode: thumb
  params: null
  return: null
  notes: Handles the death of mother brain
-
  label: MotherBrainStartEscape
  addr:
    U: 0x3D0C4
    E: 0x3D190
    J: 0x3D0C4
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Spawns the item banner and the explosion zebes escape sprites
-
  label: MotherBrainEyeInit
  addr:
    U: 0x3D130
    E: 0x3D1FC
    J: 0x3D130
  size: 0x158
  mode: thumb
  params: null
  return: null
  notes: Initialize a mother brain part sprite
-
  label: MotherBrainEyeHitboxInit
  addr:
    U: 0x3D288
    E: 0x3D354
    J: 0x3D288
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Initialize the hitbox of the mother brain eye sprite
-
  label: MotherBrainEye_Empty
  addr:
    U: 0x3D32C
    E: 0x3D3F8
    J: 0x3D32C
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: MotherBrainEyeSpawnBlock
  addr:
    U: 0x3D330
    E: 0x3D3FC
    J: 0x3D330
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Spawns a mother brain block sprite
-
  label: MotherBrainEyeHitTimer
  addr:
    U: 0x3D45C
    E: 0x3D528
    J: 0x3D45C
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Sets the invicibiliy stun flash timer to 0
-
  label: MotherBrainEyeSpawnGlassBreaking
  addr:
    U: 0x3D46C
    E: 0x3D538
    J: 0x3D46C
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Spawns the mother brain glass breaking sprite
-
  label: MotherBrain_AI
  addr:
    U: 0x3D4C0
    E: 0x3D58C
    J: 0x3D4C0
  size: 0xE0
  mode: thumb
  params: null
  return: null
-
  label: MotherBrainEye_AI
  addr:
    U: 0x3D5A0
    E: 0x3D66C
    J: 0x3D5A0
  size: 0xA0
  mode: thumb
  params: null
  return: null
  notes: Mother brain part AI
-
  label: MotherBrainBeam_AI
  addr:
    U: 0x3D640
    E: 0x3D70C
    J: 0x3D640
  size: 0xE4
  mode: thumb
  params: null
  return: null
-
  label: MotherBrainBlock_AI
  addr:
    U: 0x3D724
    E: 0x3D7F0
    J: 0x3D724
  size: 0xA8
  mode: thumb
  params: null
  return: null
-
  label: MotherBrainGlassBreaking_AI
  addr:
    U: 0x3D7CC
    E: 0x3D898
    J: 0x3D7CC
  size: 0x94
  mode: thumb
  params: null
  return: null
-
  label: AcidWormRandomXMovement
  addr:
    U: 0x3D978
    E: 0x3DA44
    J: 0x3D978
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Handles the horizontal semi-random movement of the acid worm head
-
  label: AcidWormChangeTwoGroundClipAction
  addr:
    U: 0x3D9B8
    E: 0x3DA84
    J: 0x3D9B8
  size: 0x48
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the 2 blocks on the ground
-
  label: AcidWormChangeBigBlockDownClipAction
  addr:
    U: 0x3DA00
    E: 0x3DACC
    J: 0x3DA00
  size: 0x50
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the first 2 blocks of the big block on the ground
-
  label: AcidWormChangeBigBlockMiddleClipAction
  addr:
    U: 0x3DA50
    E: 0x3DB1C
    J: 0x3DA50
  size: 0x58
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the 2 middle blocks of the big block on the ground
-
  label: AcidWormChangeBigBlockTopClipAction
  addr:
    U: 0x3DAA8
    E: 0x3DB74
    J: 0x3DAA8
  size: 0xE4
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Used to remove the 2 top blocks of the big block on the ground
-
  label: AcidWormPlaySound
  addr:
    U: 0x3DB8C
    E: 0x3DC58
    J: 0x3DB8C
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Plays a sound depending on SubSpriteData1.Unknown
-
  label: AcidWormCollidingWithSamusWhenExtending
  addr:
    U: 0x3DBB0
    E: 0x3DC7C
    J: 0x3DBB0
  size: 0x44
  mode: thumb
  params: null
  return:
    label: Colliding
    type: bool
  notes: Checks if the acid worm is colliding with samus when extending
-
  label: AcidWormInit
  addr:
    U: 0x3DBF4
    E: 0x3DCC0
    J: 0x3DBF4
  size: 0x224
  mode: thumb
  params: null
  return: null
  notes: Initialize an acid worm sprite
-
  label: AcidWormCheckSamusOnZipline
  addr:
    U: 0x3DE18
    E: 0x3DEE4
    J: 0x3DE18
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is on a zipline
-
  label: AcidWormSpawnStart
  addr:
    U: 0x3DE38
    E: 0x3DF04
    J: 0x3DE38
  size: 0x84
  mode: thumb
  params: null
  return: null
  notes: Handles the start of the spawning
-
  label: AcidWormSpawnExtending
  addr:
    U: 0x3DEBC
    E: 0x3DF88
    J: 0x3DEBC
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm extending when spawning
-
  label: AcidWormSpawnStayingOnTop
  addr:
    U: 0x3DF4C
    E: 0x3E018
    J: 0x3DF4C
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm staying on top when spawning
-
  label: AcidWormSpawnRetracting
  addr:
    U: 0x3DF84
    E: 0x3E050
    J: 0x3DF84
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm retracting when spawning
-
  label: AcidWormGfxInit
  addr:
    U: 0x3E004
    E: 0x3E0D0
    J: 0x3E004
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Initializes the acid worm to be idle
-
  label: AcidWormIdle
  addr:
    U: 0x3E030
    E: 0x3E0FC
    J: 0x3E030
  size: 0xC0
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation and samus detection
-
  label: AcidWormCheckEndWarningAnim
  addr:
    U: 0x3E0F0
    E: 0x3E1BC
    J: 0x3E0F0
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Checks if the warning animation has ended
-
  label: AcidWormExtend
  addr:
    U: 0x3E14C
    E: 0x3E218
    J: 0x3E14C
  size: 0x35C
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm extending
-
  label: AcidWormHookedToBlock
  addr:
    U: 0x3E4A8
    E: 0x3E574
    J: 0x3E4A8
  size: 0x210
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm being hooked to a block or fully extended
-
  label: AcidWormRetracting
  addr:
    U: 0x3E6B8
    E: 0x3E784
    J: 0x3E6B8
  size: 0x1AC
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm retracting when spawning
-
  label: AcidWormRaiseAcid
  addr:
    U: 0x3E864
    E: 0x3E930
    J: 0x3E864
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm raising the acid
-
  label: AcidWormAcidGoDown
  addr:
    U: 0x3E8CC
    E: 0x3E998
    J: 0x3E8CC
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm going down
-
  label: AcidWormDeathGfxInit
  addr:
    U: 0x3E93C
    E: 0x3EA08
    J: 0x3E93C
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the acid worm dying
-
  label: AcidWormDeathFlashingAnim
  addr:
    U: 0x3E960
    E: 0x3EA2C
    J: 0x3E960
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Handles the flashing animation when the acid worm is dying
-
  label: AcidWormDying
  addr:
    U: 0x3E9E8
    E: 0x3EAB4
    J: 0x3E9E8
  size: 0xD0
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm dying animation
-
  label: AcidWormBodyInit
  addr:
    U: 0x3EAB8
    E: 0x3EB84
    J: 0x3EAB8
  size: 0x258
  mode: thumb
  params: null
  return: null
  notes: Initialize an acid worm body sprite
-
  label: AcidWormBodyMove
  addr:
    U: 0x3ED10
    E: 0x3EDDC
    J: 0x3ED10
  size: 0x10C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the acid worm body
-
  label: AcidWormBodyDeath
  addr:
    U: 0x3F018
    E: 0x3F0E4
    J: 0x3F018
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Handles the death of the acid worm body
-
  label: AcidWormSpitInit
  addr:
    U: 0x3F0E0
    E: 0x3F1AC
    J: 0x3F0E0
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Initialize an acid worm spit sprite
-
  label: AcidWormSpitMove
  addr:
    U: 0x3F16C
    E: 0x3F238
    J: 0x3F16C
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Handles the acid worm spit movement
-
  label: AcidWormSpitExplodingGfxInit
  addr:
    U: 0x3F284
    E: 0x3F350
    J: 0x3F284
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the acid worm spit exploding
-
  label: AcidWormCheckExplodingAnimEnded
  addr:
    U: 0x3F2CC
    E: 0x3F398
    J: 0x3F2CC
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the exploding animation has ended
-
  label: AcidWormCheckExplodingOnAcidAnimEnded
  addr:
    U: 0x3F2F0
    E: 0x3F3BC
    J: 0x3F2F0
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the exploding animation on acid has ended
-
  label: AcidWorm_AI
  addr:
    U: 0x3F31C
    E: 0x3F3E8
    J: 0x3F31C
  size: 0x264
  mode: thumb
  params: null
  return: null
-
  label: AcidWormBody_AI
  addr:
    U: 0x3F580
    E: 0x3F64C
    J: 0x3F580
  size: 0xA4
  mode: thumb
  params: null
  return: null
-
  label: AcidWormSpit_AI
  addr:
    U: 0x3F624
    E: 0x3F6F0
    J: 0x3F624
  size: 0x60
  mode: thumb
  params: null
  return: null
-
  label: SidehopperCheckSamusNearLeftRight
  addr:
    U: 0x3F684
    E: 0x3F750
    J: 0x3F684
  size: 0x20
  mode: thumb
  params: null
  return:
    label: OutOfRange
    type: bool
  notes: Checks if samus is out of range of the sidehopper
-
  label: SidehopperInit
  addr:
    U: 0x3F6A4
    E: 0x3F770
    J: 0x3F6A4
  size: 0xD0
  mode: thumb
  params: null
  return: null
  notes: Initialize a sidehopper sprite
-
  label: SidehopperIdleGfxInit
  addr:
    U: 0x3F774
    E: 0x3F840
    J: 0x3F774
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the sidehopper going back to idle
-
  label: SidehopperJumpingGfxInit
  addr:
    U: 0x3F794
    E: 0x3F860
    J: 0x3F794
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the sidehopper jumping
-
  label: SidehopperLandingGfxInit
  addr:
    U: 0x3F814
    E: 0x3F8E0
    J: 0x3F814
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the sidehopper landing
-
  label: SidehopperAfterIdle
  addr:
    U: 0x3F864
    E: 0x3F930
    J: 0x3F864
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Determines what the sidehopper should do after being idle
-
  label: SidehopperCheckBeforeJumpingAnimEnded
  addr:
    U: 0x3F8FC
    E: 0x3F9C8
    J: 0x3F8FC
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Checks if the animation before jumping has ended whe on ground
-
  label: SidehopperJumpingGround
  addr:
    U: 0x3F96C
    E: 0x3FA38
    J: 0x3F96C
  size: 0x1E8
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the sidehopper jumping when on the ground
-
  label: SidehopperJumpingCeiling
  addr:
    U: 0x3FB54
    E: 0x3FC20
    J: 0x3FB54
  size: 0x1FC
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the sidehopper jumping when on the ceiling
-
  label: SidehopperCheckLandingCeilingAnimEnded
  addr:
    U: 0x3FD50
    E: 0x3FE1C
    J: 0x3FD50
  size: 0x14
  mode: thumb
  params: null
  return: null
  notes: Checks if the landing animation when on the ceiling has ended
-
  label: SiidehopperJumpingGroundIntoBlock
  addr:
    U: 0x3FD64
    E: 0x3FE30
    J: 0x3FD64
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Handles the sidehopper jumping from the ground into a block
-
  label: SidehopperJumpingCeilingIntoBlock
  addr:
    U: 0x3FE08
    E: 0x3FED4
    J: 0x3FE08
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Handles the sidehopper jumping from the ceiling into a block
-
  label: SidehopperGroundIdleAnim
  addr:
    U: 0x3FEB0
    E: 0x3FF7C
    J: 0x3FEB0
  size: 0x9C
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation of the sidehopper on the ground
-
  label: SidehopperCeilingIdleAnim
  addr:
    U: 0x3FF4C
    E: 0x40018
    J: 0x3FF4C
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the idle animation of the sidehopper on the ceiling
-
  label: SidehopperDeath
  addr:
    U: 0x3FFA8
    E: 0x40074
    J: 0x3FFA8
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Handles the death of the sidehopper, calls SpriteDeath
-
  label: Sidehopper_AI
  addr:
    U: 0x3FFE0
    E: 0x400AC
    J: 0x3FFE0
  size: 0x198
  mode: thumb
  params: null
  return: null
-
  label: Geron_Norfair_AI
  addr:
    U: 0x40178
    E: 0x40244
    J: 0x40178
  size: 0xB8
  mode: thumb
  params: null
  return: null
-
  label: GeegaInit
  addr:
    U: 0x40230
    E: 0x402FC
    J: 0x40230
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Initialize a geega sprite
-
  label: GeegaGfxInit
  addr:
    U: 0x40290
    E: 0x4035C
    J: 0x40290
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the geega
-
  label: GeegaSpawn
  addr:
    U: 0x402CC
    E: 0x40398
    J: 0x402CC
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Handles the geega spawning
-
  label: GeegaGoingUp
  addr:
    U: 0x403E4
    E: 0x404B0
    J: 0x403E4
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the geega going up
-
  label: GeegaRespawn
  addr:
    U: 0x40464
    E: 0x40530
    J: 0x40464
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Handles the geega respawning
-
  label: GeegaMove
  addr:
    U: 0x404C8
    E: 0x40594
    J: 0x404C8
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Handles the geega moving
-
  label: Geega_AI
  addr:
    U: 0x4058C
    E: 0x40658
    J: 0x4058C
  size: 0x13C
  mode: thumb
  params: null
  return: null
-
  label: Zebetite_AI
  addr:
    U: 0x406C8
    E: 0x40794
    J: 0x406C8
  size: 0x30C
  mode: thumb
  params: null
  return: null
-
  label: CannonFireBullet
  addr:
    U: 0x409D4
    E: 0x40AA0
    J: 0x409D4
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Checks if the cannon can fire a bullet, if yes spawns a cannon bullet sprite
-
  label: CannonCheckSurroundings
  addr:
    U: 0x40A20
    E: 0x40AEC
    J: 0x40A20
  size: 0xE8
  mode: thumb
  params: null
  return: null
  notes: Checks for walls to know where the cannon can/can't turn
-
  label: Cannon_AI
  addr:
    U: 0x40B08
    E: 0x40BD4
    J: 0x40B08
  size: 0x61C
  mode: thumb
  params: null
  return: null
-
  label: CannonBullet_AI
  addr:
    U: 0x41124
    E: 0x411F0
    J: 0x41124
  size: 0x184
  mode: thumb
  params: null
  return: null
-
  label: ImagoLarva_Right_AI
  addr:
    U: 0x412A8
    E: 0x41374
    J: 0x412A8
  size: 0x11C
  mode: thumb
  params: null
  return: null
  notes: Imago larva (right side) AI
-
  label: GerutaTangleVineUpdateGeruta
  addr:
    U: 0x413C4
    E: 0x41490
    J: 0x413C4
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Updates the geruta
-
  label: TangleVine_Geruta_AI
  addr:
    U: 0x4144C
    E: 0x41518
    J: 0x4144C
  size: 0x1A0
  mode: thumb
  params: null
  return: null
-
  label: Geruta_TangleVine_AI
  addr:
    U: 0x415EC
    E: 0x416B8
    J: 0x415EC
  size: 0x130
  mode: thumb
  params: null
  return: null
  notes: Geurta (tangle vine) AI
-
  label: TangleVine_Red_Geruta_AI
  addr:
    U: 0x4171C
    E: 0x417E8
    J: 0x4171C
  size: 0xCC
  mode: thumb
  params: null
  return: null
-
  label: TangleVine_Larva_Right_AI
  addr:
    U: 0x417E8
    E: 0x418B4
    J: 0x417E8
  size: 0xD0
  mode: thumb
  params: null
  return: null
-
  label: TangleVine_Larva_Left_AI
  addr:
    U: 0x418B8
    E: 0x41984
    J: 0x418B8
  size: 0xD4
  mode: thumb
  params: null
  return: null
-
  label: TangleVine_Tall_AI
  addr:
    U: 0x4198C
    E: 0x41A58
    J: 0x4198C
  size: 0x130
  mode: thumb
  params: null
  return: null
-
  label: TangleVine_Medium_AI
  addr:
    U: 0x41ABC
    E: 0x41B88
    J: 0x41ABC
  size: 0x130
  mode: thumb
  params: null
  return: null
-
  label: TangleVine_Curved_AI
  addr:
    U: 0x41BEC
    E: 0x41CB8
    J: 0x41BEC
  size: 0x130
  mode: thumb
  params: null
  return: null
-
  label: TangleVine_Short_AI
  addr:
    U: 0x41D1C
    E: 0x41DE8
    J: 0x41D1C
  size: 0x130
  mode: thumb
  params: null
  return: null
-
  label: ImagoSyncSubSprites
  addr:
    U: 0x41E4C
    E: 0x41F18
    J: 0x41E4C
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the sub sprites of imago with him
-
  label: ImagoShootNeedles
  addr:
    U: 0x41ED4
    E: 0x41FA0
    J: 0x41ED4
  size: 0x17C
  mode: thumb
  params: null
  return: null
  notes: Checks if imago can shoot needles, if yes spawns imago needles sprites
-
  label: ImagoCoreFlashingAnim
  addr:
    U: 0x42050
    E: 0x4211C
    J: 0x42050
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Handles the flahsing animation of the core
-
  label: ImagoSetSidesHitbox
  addr:
    U: 0x420B8
    E: 0x42184
    J: 0x420B8
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Sets the left and right hitboxes of imago depending on the X flip
-
  label: ImagoInit
  addr:
    U: 0x420EC
    E: 0x421B8
    J: 0x420EC
  size: 0x23C
  mode: thumb
  params: null
  return: null
  notes: Initialize an imago sprite
-
  label: ImagoFadeMusic
  addr:
    U: 0x42328
    E: 0x423F4
    J: 0x42328
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calls FadeMusic
-
  label: ImagoStartMusic
  addr:
    U: 0x4234C
    E: 0x42418
    J: 0x4234C
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Starts the imago battle music
-
  label: ImagoComingDown
  addr:
    U: 0x42384
    E: 0x42450
    J: 0x42384
  size: 0xB0
  mode: thumb
  params: null
  return: null
  notes: Handles imago coming down to move through the room (not when he attacks)
-
  label: ImagoComingDownMove
  addr:
    U: 0x42434
    E: 0x42500
    J: 0x42434
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of imago coming down (not when he attacks)
-
  label: ImagoMove
  addr:
    U: 0x424F8
    E: 0x425C4
    J: 0x424F8
  size: 0x2B8
  mode: thumb
  params: null
  return: null
  notes: Handles imago moving through the room
-
  label: ImagoGoingUp
  addr:
    U: 0x427B0
    E: 0x4287C
    J: 0x427B0
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Handles imago going up
-
  label: ImagoAttackingGfxInit
  addr:
    U: 0x42874
    E: 0x42940
    J: 0x42874
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for imago attacking
-
  label: ImagoAttackingGoingDown
  addr:
    U: 0x42898
    E: 0x42964
    J: 0x42898
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Handles imago going down when attacking
-
  label: ImagoAttackingGoingUp
  addr:
    U: 0x42940
    E: 0x42A0C
    J: 0x42940
  size: 0xBC
  mode: thumb
  params: null
  return: null
  notes: Handles imago going up when attacking
-
  label: ImagoSpawnDamagedStinger
  addr:
    U: 0x429FC
    E: 0x42AC8
    J: 0x429FC
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Spawns a imago damaged stinger sprite
-
  label: ImagoCheckSamusAtSuperMissile
  addr:
    U: 0x42A90
    E: 0x42B5C
    J: 0x42A90
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is near the super missile tank when imago is stinger-less
-
  label: ImagoChargeThroughWall
  addr:
    U: 0x42AF8
    E: 0x42BC4
    J: 0x42AF8
  size: 0x100
  mode: thumb
  params: null
  return: null
  notes: Handles imago charging through the wall at the end of the fight, also destroys the first half
-
  label: ImagoDestroyWall
  addr:
    U: 0x42BF8
    E: 0x42CC4
    J: 0x42BF8
  size: 0x378
  mode: thumb
  params: null
  return: null
  notes: Handles imago destroying the wall
-
  label: ImagoDying
  addr:
    U: 0x42F70
    E: 0x4303C
    J: 0x42F70
  size: 0x204
  mode: thumb
  params: null
  return: null
  notes: Handles imago dying and stalling on the wall
-
  label: ImagoSetEvent
  addr:
    U: 0x43174
    E: 0x43240
    J: 0x43174
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Sets the imago killed event
-
  label: ImagoBodySetSidesHitbox
  addr:
    U: 0x431B8
    E: 0x43284
    J: 0x431B8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Sets the left and right hitboxes of the imago body depending on the X flip
-
  label: ImagoBodyInit
  addr:
    U: 0x431E8
    E: 0x432B4
    J: 0x431E8
  size: 0x13C
  mode: thumb
  params: null
  return: null
  notes: Initialize an imago body sprite
-
  label: ImagoBodyBeforeSpawn
  addr:
    U: 0x43324
    E: 0x433F0
    J: 0x43324
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Called beofre imago spawns, checks if imago pose is above 7
-
  label: ImagoBodyUpdatePalette
  addr:
    U: 0x43360
    E: 0x4342C
    J: 0x43360
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Updates the palette row of imago depending on the health
-
  label: ImagoBodySyncPalette
  addr:
    U: 0x433C4
    E: 0x43490
    J: 0x433C4
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the palette of the imago body with imago
-
  label: Imago_AI
  addr:
    U: 0x433F8
    E: 0x434C4
    J: 0x433F8
  size: 0x420
  mode: thumb
  params: null
  return: null
-
  label: ImagoBody_AI
  addr:
    U: 0x43818
    E: 0x438E4
    J: 0x43818
  size: 0x1B0
  mode: thumb
  params: null
  return: null
-
  label: ImagoNeedle_AI
  addr:
    U: 0x439C8
    E: 0x43A94
    J: 0x439C8
  size: 0xEC
  mode: thumb
  params: null
  return: null
  notes: Imaago needle AI
-
  label: ImagoDamagedStinger_AI
  addr:
    U: 0x43AB4
    E: 0x43B80
    J: 0x43AB4
  size: 0x1A4
  mode: thumb
  params: null
  return: null
-
  label: ImagoEgg_AI
  addr:
    U: 0x43C58
    E: 0x43D24
    J: 0x43C58
  size: 0x130
  mode: thumb
  params: null
  return: null
-
  label: CrocomireSyncSubSprites
  addr:
    U: 0x43D88
    E: 0x43E54
    J: 0x43D88
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the sub sprites of crocomire with him
-
  label: CrocomireInit
  addr:
    U: 0x43DF0
    E: 0x43EBC
    J: 0x43DF0
  size: 0x120
  mode: thumb
  params: null
  return: null
  notes: Initialize a crocomire sprite
-
  label: CrocomireGfxInit
  addr:
    U: 0x43F10
    E: 0x43FDC
    J: 0x43F10
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for crocomire
-
  label: Crocomire_Empty
  addr:
    U: 0x43F34
    E: 0x44000
    J: 0x43F34
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: CrocomireBodyInit
  addr:
    U: 0x43F38
    E: 0x44004
    J: 0x43F38
  size: 0x160
  mode: thumb
  params: null
  return: null
  notes: Initialize a crocomire body sprite
-
  label: Crocomire_AI
  addr:
    U: 0x44098
    E: 0x44164
    J: 0x44098
  size: 0x44
  mode: thumb
  params: null
  return: null
-
  label: CrocomireBody_AI
  addr:
    U: 0x440DC
    E: 0x441A8
    J: 0x440DC
  size: 0x6C
  mode: thumb
  params: null
  return: null
-
  label: SearchlightEyeInit
  addr:
    U: 0x44148
    E: 0x44214
    J: 0x44148
  size: 0x13C
  mode: thumb
  params: null
  return: null
  notes: Initialize a searchlight eye sprite
-
  label: SearchlightEyeMove
  addr:
    U: 0x44284
    E: 0x44350
    J: 0x44284
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Handles the searchlight eye moving up and down
-
  label: SearchlightEyeCheckAlarm
  addr:
    U: 0x44314
    E: 0x443E0
    J: 0x44314
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the alarm is on
-
  label: SearchlightEyeCheckAlertedEnded
  addr:
    U: 0x44340
    E: 0x4440C
    J: 0x44340
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the alerted animation has ended (when samus is getting detected)
-
  label: SearchlightEyeCheckShouldShot
  addr:
    U: 0x44364
    E: 0x44430
    J: 0x44364
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the searchlight eye can shoot depending on a timer
-
  label: SearchlightEyeShoot
  addr:
    U: 0x4439C
    E: 0x44468
    J: 0x4439C
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Spawns a searchlight eye projectile sprite
-
  label: SearchlightEyeBeamInit
  addr:
    U: 0x44428
    E: 0x444F4
    J: 0x44428
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Initialize a searchlight eye beam sprite
-
  label: SearchlightEyeBeamDetectSamus
  addr:
    U: 0x444A0
    E: 0x4456C
    J: 0x444A0
  size: 0x17C
  mode: thumb
  params: null
  return: null
  notes: Handles the detection of samus to activate the alarm, also deactivates the other searchlight eye beams
-
  label: SearchlightEyeBeamDisappear
  addr:
    U: 0x4461C
    E: 0x446E8
    J: 0x4461C
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Handles the searchlight eye beam disappearing
-
  label: SearchlightEye_AI
  addr:
    U: 0x44658
    E: 0x44724
    J: 0x44658
  size: 0x104
  mode: thumb
  params: null
  return: null
-
  label: SearchlightEyeBeam_AI
  addr:
    U: 0x4475C
    E: 0x44828
    J: 0x4475C
  size: 0x5C
  mode: thumb
  params: null
  return: null
-
  label: SearchlighEyeProjectile_AI
  addr:
    U: 0x447B8
    E: 0x44884
    J: 0x447B8
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Searchlight eye projectile AI
-
  label: Geron_AI
  addr:
    U: 0x448E0
    E: 0x449AC
    J: 0x448E0
  size: 0x344
  mode: thumb
  params: null
  return: null
-
  label: GunshipFlickerFlames
  addr:
    U: 0x44C24
    E: 0x44CF0
    J: 0x44C24
  size: 0x84
  mode: thumb
  params: null
  return: null
  notes: Handles the flames flickering between big and small
-
  label: GunshipPortholeFlashingAnim
  addr:
    U: 0x44CA8
    E: 0x44D74
    J: 0x44CA8
  size: 0xB0
  mode: thumb
  params: null
  return: null
  notes: Handles the flashing animation of the porthole
-
  label: GunshipCheckSamusEnter
  addr:
    U: 0x44D58
    E: 0x44E24
    J: 0x44D58
  size: 0x64
  mode: thumb
  params: null
  return:
    label: Entering
    type: bool
  notes: Checks if samus is entering the ship
-
  label: GunshipInit
  addr:
    U: 0x44DBC
    E: 0x44E88
    J: 0x44DBC
  size: 0x1E0
  mode: thumb
  params: null
  return: null
  notes: Initialize a gunship sprite
-
  label: GunshipGameStartMove
  addr:
    U: 0x44F9C
    E: 0x45068
    J: 0x44F9C
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the ship before the intro cutscene at the start of the game
-
  label: GunshipSamusEnter
  addr:
    U: 0x44FE4
    E: 0x450B0
    J: 0x44FE4
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Handles samus starting to enter the ship
-
  label: GunshipSamusEntering
  addr:
    U: 0x45024
    E: 0x450F0
    J: 0x45024
  size: 0xCC
  mode: thumb
  params: null
  return: null
  notes: Handles samus entering the ship
-
  label: GunshipRefill
  addr:
    U: 0x450F0
    E: 0x451BC
    J: 0x450F0
  size: 0x15C
  mode: thumb
  params: null
  return: null
  notes: Handles the ship refilling samus
-
  label: GunshipAfterRefill
  addr:
    U: 0x4524C
    E: 0x45318
    J: 0x4524C
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Called after the refill ends, spawns an item banner sprite
-
  label: GunshipAfterSave
  addr:
    U: 0x452DC
    E: 0x453A8
    J: 0x452DC
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Called after a save ends, spanws an item banner sprite
-
  label: GunshipSaving
  addr:
    U: 0x45320
    E: 0x453EC
    J: 0x45320
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Called when saving the game, doesn't handle the save
-
  label: GunshipSamusLeave
  addr:
    U: 0x45358
    E: 0x45424
    J: 0x45358
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Handles samus starting to leave the ship
-
  label: GunshipSamusLeaving
  addr:
    U: 0x45410
    E: 0x454DC
    J: 0x45410
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Handles samus leaving the ship
-
  label: GunshipReleaseSamus
  addr:
    U: 0x45468
    E: 0x45534
    J: 0x45468
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Sets samus pose to facing the foreground
-
  label: GunshipReset
  addr:
    U: 0x4548C
    E: 0x45558
    J: 0x4548C
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Sets the samus collision of the gunship to escape ship, called after samus leaves the ship
-
  label: GunshipCheckSamusOnTopAfterLeaving
  addr:
    U: 0x454B4
    E: 0x45580
    J: 0x454B4
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is on top of the ship after leaving it
-
  label: GunshipEscapeZebes
  addr:
    U: 0x454DC
    E: 0x455A8
    J: 0x454DC
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Sets the escaped zebes event
-
  label: GunshipSamusEnteringWhenEscaping
  addr:
    U: 0x4552C
    E: 0x455F8
    J: 0x4552C
  size: 0xE4
  mode: thumb
  params: null
  return: null
  notes: Handles samus entering the ship when escaping zebes
-
  label: GunshipSpawnFlamesEscape
  addr:
    U: 0x45610
    E: 0x456DC
    J: 0x45610
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Spawns the flames for the ship escaping zebes
-
  label: GunshipTakingOff
  addr:
    U: 0x45688
    E: 0x45754
    J: 0x45688
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Handles the gunship taking off when escaping
-
  label: GunshipFlying
  addr:
    U: 0x45708
    E: 0x457D4
    J: 0x45708
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Handles the gunship flying when escaping
-
  label: GunshipPartInit
  addr:
    U: 0x45794
    E: 0x45860
    J: 0x45794
  size: 0x1A0
  mode: thumb
  params: null
  return: null
  notes: Initialize a gunship part sprite
-
  label: GunshipPartFlamesFlyingGfxInit
  addr:
    U: 0x45934
    E: 0x45A00
    J: 0x45934
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the big flames when flying
-
  label: GunshipPartCheckLandingEnded
  addr:
    U: 0x459E4
    E: 0x45AB0
    J: 0x459E4
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Checks if the landing at the beginning of the game has ended
-
  label: GunshipPartEntrySides
  addr:
    U: 0x45A68
    E: 0x45B34
    J: 0x45A68
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Handles the animations of the sides of the entry of the ship
-
  label: GunshipPartEntrySidesClose
  addr:
    U: 0x45B10
    E: 0x45BDC
    J: 0x45B10
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the animation of the sides of the entry closing
-
  label: GunshipPartEntryTop
  addr:
    U: 0x45B6C
    E: 0x45C38
    J: 0x45B6C
  size: 0xF8
  mode: thumb
  params: null
  return: null
  notes: Handles the animations of the top of the entry of the ship
-
  label: GunshipPartEntryTopClose
  addr:
    U: 0x45C64
    E: 0x45D30
    J: 0x45C64
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Handles the animation of the top of the entry closing
-
  label: GunshipPartCheckSpawnPlatform
  addr:
    U: 0x45CC0
    E: 0x45D8C
    J: 0x45CC0
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Checks if the platform should spawn
-
  label: GunshipSpawnPlatform
  addr:
    U: 0x45D14
    E: 0x45DE0
    J: 0x45D14
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Handles the platform spawning
-
  label: GunshipPartDespawnPlatform
  addr:
    U: 0x45D64
    E: 0x45E30
    J: 0x45D64
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Handles the platform despawning
-
  label: Gunship_AI
  addr:
    U: 0x45E4C
    E: 0x45F18
    J: 0x45E4C
  size: 0x24C
  mode: thumb
  params: null
  return: null
-
  label: GunshipPart_AI
  addr:
    U: 0x46098
    E: 0x46164
    J: 0x46098
  size: 0x1E4
  mode: thumb
  params: null
  return: null
-
  label: GlassTubeChangeClipAction
  addr:
    U: 0x4627C
    E: 0x46348
    J: 0x4627C
  size: 0x160
  mode: thumb
  params: null
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Disables the glass tube hitbox
-
  label: GlassTubeInit
  addr:
    U: 0x463DC
    E: 0x464A8
    J: 0x463DC
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Initialize a glass tube sprite
-
  label: GlassTubeCheckPowerBombCollision
  addr:
    U: 0x4646C
    E: 0x46538
    J: 0x4646C
  size: 0xC0
  mode: thumb
  params: null
  return: null
  notes: Checks if the glass tube is colliding with a power bomb
-
  label: GlassTubeDelayBeforeBreaking
  addr:
    U: 0x4652C
    E: 0x465F8
    J: 0x4652C
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Delay before the glass tube starts to break
-
  label: GlassTubeCheckCrackingAnimEnded
  addr:
    U: 0x46568
    E: 0x46634
    J: 0x46568
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Checks if the cracking animation has ended
-
  label: GlassTubeCheckBreakingAnimEnded
  addr:
    U: 0x465F4
    E: 0x466C0
    J: 0x465F4
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the breaking animation has ended
-
  label: GlassTube_AI
  addr:
    U: 0x46620
    E: 0x466EC
    J: 0x46620
  size: 0xE8
  mode: thumb
  params: null
  return: null
-
  label: SavePlatformChozodiaInit
  addr:
    U: 0x46708
    E: 0x467D4
    J: 0x46708
  size: 0x168
  mode: thumb
  params: null
  return: null
  notes: Initialize a save platform (chozodia) sprite
-
  label: SavePlatformChozodiaSamusDetection
  addr:
    U: 0x46870
    E: 0x4693C
    J: 0x46870
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is on the save platform (calls SavePlatformDetectSamus and checks if morhed/crouching)
-
  label: SavePlatformChozodiaCheckOpeningAnimEnded
  addr:
    U: 0x468C8
    E: 0x46994
    J: 0x468C8
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the opening animation has ended
-
  label: SavePlatformChozodiaSecondSamusDetection
  addr:
    U: 0x468F4
    E: 0x469C0
    J: 0x468F4
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Re-Detects if samus in on the save platform after the opening animation
-
  label: SavePlatformChozodiaCheckClosingAnimEnded
  addr:
    U: 0x4696C
    E: 0x46A38
    J: 0x4696C
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Checks if the closing animation has ended
-
  label: SavePlatformChozodiaReleaseSamus
  addr:
    U: 0x4699C
    E: 0x46A68
    J: 0x4699C
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Releases samus (sets pose to facing the foreground)
-
  label: SavePlatformChozodiaChozodiaSamusDetectionOut
  addr:
    U: 0x469D0
    E: 0x46A9C
    J: 0x469D0
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Detects if samus is out of the platform after being released
-
  label: SaveStationChozodiaCheckRefill
  addr:
    U: 0x46A04
    E: 0x46AD0
    J: 0x46A04
  size: 0xC0
  mode: thumb
  params: null
  return: null
  notes: Checks if samus needs a refill
-
  label: SaveStationChozodiaRefill
  addr:
    U: 0x46AC4
    E: 0x46B90
    J: 0x46AC4
  size: 0x194
  mode: thumb
  params: null
  return: null
  notes: Refills samus
-
  label: SavePlatformChozodiaAfterRefill
  addr:
    U: 0x46C58
    E: 0x46D24
    J: 0x46C58
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the item banner at the end of the refill is gone
-
  label: SavePlatformChozodiaSaveInput
  addr:
    U: 0x46C90
    E: 0x46D5C
    J: 0x46C90
  size: 0xD0
  mode: thumb
  params: null
  return: null
  notes: Called before the player inputs an answer to the save yes no cursor
-
  label: SavePlatformChozodiaFlashingAnim
  addr:
    U: 0x46D60
    E: 0x46E2C
    J: 0x46D60
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Handles the flashing animation when saving
-
  label: SavePlatformChozodiaFlashingAnimEnd
  addr:
    U: 0x46DA0
    E: 0x46E6C
    J: 0x46DA0
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Called after saving
-
  label: SavePlatformChozodiaTextTimer
  addr:
    U: 0x46DE4
    E: 0x46EB0
    J: 0x46DE4
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Timer before displaying the "Save Done" banner
-
  label: SavePlatformChozodiaCheckMessageBannerOut
  addr:
    U: 0x46E28
    E: 0x46EF4
    J: 0x46E28
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the item banner at the end of the save is gone
-
  label: SavePlatformChozodiaMessageBannerDisappearingTimer
  addr:
    U: 0x46E60
    E: 0x46F2C
    J: 0x46E60
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Timer when the message banner is disappearing
-
  label: SavePlatformTopChozodiaInit
  addr:
    U: 0x46E84
    E: 0x46F50
    J: 0x46E84
  size: 0x1B8
  mode: thumb
  params: null
  return: null
  notes: Initialize a save platform top (chozodia) sprite
-
  label: SavePlatformTopChozodiaCheckRefillAnimEnded
  addr:
    U: 0x4703C
    E: 0x47108
    J: 0x4703C
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the refill animation has ended
-
  label: SavePlatformTopChozodia_Empty
  addr:
    U: 0x47068
    E: 0x47134
    J: 0x47068
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: SavePlatformTopChozodiaExtendGfxInit
  addr:
    U: 0x4706C
    E: 0x47138
    J: 0x4706C
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the top extending down
-
  label: SavePlatformTopChozodiaCheckExtendingAnimEnded
  addr:
    U: 0x47088
    E: 0x47154
    J: 0x47088
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the extending animation has ended
-
  label: SavePlatformToChozodiaRetractingGfxInit
  addr:
    U: 0x470B4
    E: 0x47180
    J: 0x470B4
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the top retracting
-
  label: SavePlatformTopChozodiaCheckRetractingAnimEnded
  addr:
    U: 0x470E8
    E: 0x471B4
    J: 0x470E8
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Checks if the retracting animation has ended
-
  label: SavePlatformTopChozodiaCheckTubeAnimSpawnEnded
  addr:
    U: 0x47114
    E: 0x471E0
    J: 0x47114
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube spawning animation has ended
-
  label: SavePlatformTopChozodiaCheckSpawnBigLight
  addr:
    U: 0x47164
    E: 0x47230
    J: 0x47164
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Checks if the big light should spawn
-
  label: SavePlatformTopChozodiaCheckTubeAnimEnded
  addr:
    U: 0x471B8
    E: 0x47284
    J: 0x471B8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube animation has ended
-
  label: SavePlatformTopChozodiaCheckTubeDespawningAnimEnded
  addr:
    U: 0x471E8
    E: 0x472B4
    J: 0x471E8
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube despawning animation has ended
-
  label: SavePlatformTopChozodiaCheckTubeAroundAnimEnded
  addr:
    U: 0x47224
    E: 0x472F0
    J: 0x47224
  size: 0x18
  mode: thumb
  params: null
  return: null
  notes: Checks if the tube around animation has ended (quick beam going to the center at the beginning)
-
  label: SaveStationTopChozodiaCheckTubeAroundAnimEnded
  addr:
    U: 0x4723C
    E: 0x47308
    J: 0x4723C
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Handles the down up tube animation (thing going from ground to top)
-
  label: SavePlatform_Chozodia_AI
  addr:
    U: 0x47280
    E: 0x4734C
    J: 0x47280
  size: 0x1E8
  mode: thumb
  params: null
  return: null
-
  label: SavePlatformTop_Chozodia_AI
  addr:
    U: 0x47468
    E: 0x47534
    J: 0x47468
  size: 0x198
  mode: thumb
  params: null
  return: null
-
  label: BaristuteCheckSamusNearLeftRight
  addr:
    U: 0x47600
    E: 0x476CC
    J: 0x47600
  size: 0x20
  mode: thumb
  params: null
  return:
    label: InRange
    type: bool
  notes: Checks if samus is in range of the baristute (0x200 on both sides)
-
  label: BaristuteInit
  addr:
    U: 0x47620
    E: 0x476EC
    J: 0x47620
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Initialize a baristute sprite
-
  label: BaristuteJumpingGfxInit
  addr:
    U: 0x476B0
    E: 0x4777C
    J: 0x476B0
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Initializes a baristute to do the warning before a jump
-
  label: BaristuteCheckBeforeJumpingAnimEnded
  addr:
    U: 0x476E4
    E: 0x477B0
    J: 0x476E4
  size: 0x7C
  mode: thumb
  params: null
  return: null
  notes: Checks if the animation before jumping has ended
-
  label: BaristuteJumping
  addr:
    U: 0x47760
    E: 0x4782C
    J: 0x47760
  size: 0x100
  mode: thumb
  params: null
  return: null
  notes: Handles the baristute jumping
-
  label: BaristuteLandingGfxInit
  addr:
    U: 0x47860
    E: 0x4792C
    J: 0x47860
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Initializes a baristute to be landing
-
  label: BaristuteCheckLandingAnimNearEnded
  addr:
    U: 0x4789C
    E: 0x47968
    J: 0x4789C
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the landing animatoin has nearly ended
-
  label: BaristuteIdleGfxInit
  addr:
    U: 0x478B8
    E: 0x47984
    J: 0x478B8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Initializes a baristute to be idle
-
  label: BaristuteIdle
  addr:
    U: 0x478E8
    E: 0x479B4
    J: 0x478E8
  size: 0xCC
  mode: thumb
  params: null
  return: null
  notes: Handles the baristute being idle
-
  label: BaristuteWalkingGfxInit
  addr:
    U: 0x479B4
    E: 0x47A80
    J: 0x479B4
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Initializes a baristute to be walking
-
  label: BaristutePlayWalkingSound
  addr:
    U: 0x47A28
    E: 0x47AF4
    J: 0x47A28
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Plays the walking sound
-
  label: BaristuteWalking
  addr:
    U: 0x47A78
    E: 0x47B44
    J: 0x47A78
  size: 0xD4
  mode: thumb
  params: null
  return: null
  notes: Handles the baristute walking
-
  label: BaristuteBouncingGfxInit
  addr:
    U: 0x47B4C
    E: 0x47C18
    J: 0x47B4C
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Initializes the baristute to be falling
-
  label: BaristuteBouncing
  addr:
    U: 0x47B70
    E: 0x47C3C
    J: 0x47B70
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Handles the baristute falling
-
  label: BaristuteDeath
  addr:
    U: 0x47BE0
    E: 0x47CAC
    J: 0x47BE0
  size: 0x150
  mode: thumb
  params: null
  return: null
  notes: Handles a baristute death, does checks related to the baristutes in kraid
-
  label: Baristute_AI
  addr:
    U: 0x47D30
    E: 0x47DFC
    J: 0x47D30
  size: 0x18C
  mode: thumb
  params: null
  return: null
-
  label: ElevatorStatueChangeTwoGroundClipAction
  addr:
    U: 0x47EBC
    E: 0x47F88
    J: 0x47EBC
  size: 0x50
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox of the statue debris on the ground
-
  label: KraidElevatorStatueChangeClipAction
  addr:
    U: 0x47F0C
    E: 0x47FD8
    J: 0x47F0C
  size: 0x64
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of the statue
-
  label: KraidElevatorStatueAfterFall
  addr:
    U: 0x47F70
    E: 0x4803C
    J: 0x47F70
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Initializes the kraid elevator statue to be fallen
-
  label: KraidElevatorStatueInit
  addr:
    U: 0x47FBC
    E: 0x48088
    J: 0x47FBC
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Initialize a kraid elevator statue sprite
-
  label: KraidElevatorStatueCheckShouldFall
  addr:
    U: 0x48048
    E: 0x48114
    J: 0x48048
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Checks if samus isn't using an elevator and if kraid is dead
-
  label: KraidElevatorStatueTimerBeforeFalling
  addr:
    U: 0x4807C
    E: 0x48148
    J: 0x4807C
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Timer before the statue starts falling
-
  label: KraidElevatorStatueFalling
  addr:
    U: 0x480D0
    E: 0x4819C
    J: 0x480D0
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Handles the statue falling
-
  label: RidleyElevatorStatueChangeClipAction
  addr:
    U: 0x48174
    E: 0x48240
    J: 0x48174
  size: 0x64
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of the statue
-
  label: RidleyElevatorStatueAfterFall
  addr:
    U: 0x481D8
    E: 0x482A4
    J: 0x481D8
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Initializes the ridley elevator statue to be fallen
-
  label: RidleyStatueElevatorInit
  addr:
    U: 0x48224
    E: 0x482F0
    J: 0x48224
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Initialize a ridley elevator statue sprite
-
  label: RidleyElevatorStatueCheckShouldFall
  addr:
    U: 0x482B0
    E: 0x4837C
    J: 0x482B0
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Checks if samus isn't using an elevator and if ridley is dead
-
  label: RidleyElevatorStatueTimerBeforeFalling
  addr:
    U: 0x482E4
    E: 0x483B0
    J: 0x482E4
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Timer before the statue starts falling
-
  label: RidleyElevatorStatueFalling
  addr:
    U: 0x48338
    E: 0x48404
    J: 0x48338
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Handles the statue falling
-
  label: KraidElevatorStatue_AI
  addr:
    U: 0x483F0
    E: 0x484BC
    J: 0x483F0
  size: 0x48
  mode: thumb
  params: null
  return: null
-
  label: RidleyElevatorStatue_AI
  addr:
    U: 0x48438
    E: 0x48504
    J: 0x48438
  size: 0x48
  mode: thumb
  params: null
  return: null
-
  label: ElevatorStatueDebris_AI
  addr:
    U: 0x48480
    E: 0x4854C
    J: 0x48480
  size: 0xCC
  mode: thumb
  params: null
  return: null
-
  label: RisingChozoPillarRandomSpriteDebris
  addr:
    U: 0x4854C
    E: 0x48618
    J: 0x4854C
  size: 0xA8
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  - label: RandomNum
    type: u8
    notes: Random number
  return: null
  notes: Spawns random sprite debris
-
  label: RisingChozoPillarRandomParticles
  addr:
    U: 0x485F4
    E: 0x486C0
    J: 0x485F4
  size: 0xAC
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  - label: RandomNum
    type: u8
    notes: Random number
  return: null
  notes: Spawns random particle effects
-
  label: RisingChozoPillarSpawnThreePlatforms
  addr:
    U: 0x486A0
    E: 0x4876C
    J: 0x486A0
  size: 0xE4
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Spawns 3 chozo pillar platform sprites
-
  label: RisingChozoPillarSpawnTwoPlatforms
  addr:
    U: 0x48784
    E: 0x48850
    J: 0x48784
  size: 0xB8
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Spawns 2 chozo pillar platform sprites
-
  label: RisingChozoPillarSpawnOnePlatform
  addr:
    U: 0x4883C
    E: 0x48908
    J: 0x4883C
  size: 0x68
  mode: thumb
  params:
  - label: YPosition
    type: u16
  - label: XPosition
    type: u16
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Spawns 1 chozo pillar platform sprite
-
  label: RisingChozoPillar_AI
  addr:
    U: 0x488A4
    E: 0x48970
    J: 0x488A4
  size: 0x248
  mode: thumb
  params: null
  return: null
-
  label: ChozoPillarPlatform_AI
  addr:
    U: 0x48AEC
    E: 0x48BB8
    J: 0x48AEC
  size: 0x124
  mode: thumb
  params: null
  return: null
-
  label: ChozoPillarPlatformShadow_AI
  addr:
    U: 0x48C10
    E: 0x48CDC
    J: 0x48C10
  size: 0x6C
  mode: thumb
  params: null
  return: null
-
  label: SkulteraSetSidesHitbox
  addr:
    U: 0x48C7C
    E: 0x48D48
    J: 0x48C7C
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Sets the left and right hitboxes of the skultera depending on the X flip
-
  label: SkulteraXMovement
  addr:
    U: 0x48CAC
    E: 0x48D78
    J: 0x48CAC
  size: 0x64
  mode: thumb
  params:
  - label: XMovement
    type: u16
  return:
    label: PrevCollisionCheckIsSolid
    type: bool
    notes: Previous collision check is solid
  notes: Handles the horizontal movement of the skultera
-
  label: SkulteraInit
  addr:
    U: 0x48D10
    E: 0x48DDC
    J: 0x48D10
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Initialize a skultera sprite
-
  label: SkulteraGfxInit
  addr:
    U: 0x48D78
    E: 0x48E44
    J: 0x48D78
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Initializes a skultera to be idle
-
  label: SkulteraMoving
  addr:
    U: 0x48DA8
    E: 0x48E74
    J: 0x48DA8
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the skultera when not chasing samus
-
  label: SkulteraChasingSamusGfxInit
  addr:
    U: 0x48E6C
    E: 0x48F38
    J: 0x48E6C
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Initialize a skultera to be chasing samus
-
  label: SkulteraChasingSamus
  addr:
    U: 0x48E8C
    E: 0x48F58
    J: 0x48E8C
  size: 0x110
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the skultera when chasing samus
-
  label: SkulteraTurningAroundGfxInit
  addr:
    U: 0x48F9C
    E: 0x49068
    J: 0x48F9C
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Initializes a skultera to be turning around
-
  label: SkulteraCheckTurningAroundAnimEnded
  addr:
    U: 0x48FD4
    E: 0x490A0
    J: 0x48FD4
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Checks if the turning around animation has ended
-
  label: Skultera_AI
  addr:
    U: 0x48FF8
    E: 0x490C4
    J: 0x48FF8
  size: 0x18C
  mode: thumb
  params: null
  return: null
-
  label: StatueVerticalLineChangeClipAction
  addr:
    U: 0x49184
    E: 0x49250
    J: 0x49184
  size: 0x80
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of a vertical lign of 6 blocks
-
  label: StatueHorizontalLineThreeChangeClipAction
  addr:
    U: 0x49204
    E: 0x492D0
    J: 0x49204
  size: 0x58
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of a horizontal lign of 3 blocks
-
  label: StatueHorizontalLineHeightChangeClipAction
  addr:
    U: 0x4925C
    E: 0x49328
    J: 0x4925C
  size: 0xB8
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox of a horizontal lign of 8 blocks
-
  label: KraidStatueAfterOpen
  addr:
    U: 0x49314
    E: 0x493E0
    J: 0x49314
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Called after the statue finished opening or when initializing the sprite but it's already opened
-
  label: KraidStatueInit
  addr:
    U: 0x4933C
    E: 0x49408
    J: 0x4933C
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Initialize a kraid statue sprite
-
  label: KraidStatueCheckBackgroundLocked
  addr:
    U: 0x49404
    E: 0x494D0
    J: 0x49404
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Checks if the background has finished scrolling to the center
-
  label: KraidStatueOpening
  addr:
    U: 0x49474
    E: 0x49540
    J: 0x49474
  size: 0x1B8
  mode: thumb
  params: null
  return: null
  notes: Handles the kraid statue opening
-
  label: RidleyStatueChangeThreeClipAction
  addr:
    U: 0x4962C
    E: 0x496F8
    J: 0x4962C
  size: 0x6C
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable the hitbox for a horizontal lign of 3 blocks
-
  label: RidleyStatueChangeFourClipAction
  addr:
    U: 0x49698
    E: 0x49764
    J: 0x49698
  size: 0x7C
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox for 4 blocks
-
  label: RidleyStatueAfterOpen
  addr:
    U: 0x49714
    E: 0x497E0
    J: 0x49714
  size: 0x28
  mode: thumb
  params: null
  return: null
  notes: Called after the statue finished opening or when initializing the sprite but it's already opened
-
  label: RidleyStatueInit
  addr:
    U: 0x4973C
    E: 0x49808
    J: 0x4973C
  size: 0xB4
  mode: thumb
  params: null
  return: null
  notes: Initialize a ridley statue sprite
-
  label: RidleyStatueCheckBackgroundLocked
  addr:
    U: 0x497F0
    E: 0x498BC
    J: 0x497F0
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Checks if the background has finished scrolling to the center
-
  label: RidleyStatueOpening
  addr:
    U: 0x49844
    E: 0x49910
    J: 0x49844
  size: 0x1F4
  mode: thumb
  params: null
  return: null
  notes: Handles the ridley statue opening
-
  label: KraidStatue_AI
  addr:
    U: 0x49A38
    E: 0x49B04
    J: 0x49A38
  size: 0x118
  mode: thumb
  params: null
  return: null
-
  label: RidleyStatue_AI
  addr:
    U: 0x49B50
    E: 0x49C1C
    J: 0x49B50
  size: 0x80
  mode: thumb
  params: null
  return: null
-
  label: Searchlight_AI
  addr:
    U: 0x49BD0
    E: 0x49C9C
    J: 0x49BD0
  size: 0x1FC
  mode: thumb
  params: null
  return: null
-
  label: PrimarySpriteB3_AI
  addr:
    U: 0x49DCC
    E: 0x49E98
    J: 0x49DCC
  size: 0xEC
  mode: thumb
  params: null
  return: null
-
  label: GadoraInit
  addr:
    U: 0x49EB8
    E: 0x49F84
    J: 0x49EB8
  size: 0x134
  mode: thumb
  params: null
  return: null
  notes: Initialize a gadora sprite
-
  label: GadoraGfxInit
  addr:
    U: 0x49FEC
    E: 0x4A0B8
    J: 0x49FEC
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Initializes a gadora to be idle
-
  label: GadoraSamusDetection
  addr:
    U: 0x4A01C
    E: 0x4A0E8
    J: 0x4A01C
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is in range
-
  label: GadoraCheckBeforeOpeningEyeAnimEnded
  addr:
    U: 0x4A070
    E: 0x4A13C
    J: 0x4A070
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Checks if the warning animation ended
-
  label: GadoraCheckOpeningEyeAnimEnded
  addr:
    U: 0x4A0A4
    E: 0x4A170
    J: 0x4A0A4
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Checks if the opening eye animation ended, spawns a gadora beam sprite if necessary
-
  label: GadoraEyeOpened
  addr:
    U: 0x4A10C
    E: 0x4A1D8
    J: 0x4A10C
  size: 0x74
  mode: thumb
  params: null
  return: null
  notes: Handles the gadora having its eye opened
-
  label: GadoraCheckClosingEyeAnimNearEnded
  addr:
    U: 0x4A180
    E: 0x4A24C
    J: 0x4A180
  size: 0x1C
  mode: thumb
  params: null
  return: null
  notes: Checks if the closing eye animation has nearly ended
-
  label: GadoraDeathGfxInit
  addr:
    U: 0x4A19C
    E: 0x4A268
    J: 0x4A19C
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Initialize the GFX for the gadora dying
-
  label: GadoraDeath
  addr:
    U: 0x4A1CC
    E: 0x4A298
    J: 0x4A1CC
  size: 0xD4
  mode: thumb
  params: null
  return: null
  notes: Handles the death of the gadora
-
  label: Gadora_AI
  addr:
    U: 0x4A2A0
    E: 0x4A36C
    J: 0x4A2A0
  size: 0x78
  mode: thumb
  params: null
  return: null
-
  label: GadoraEye_AI
  addr:
    U: 0x4A318
    E: 0x4A3E4
    J: 0x4A318
  size: 0x1D0
  mode: thumb
  params: null
  return: null
-
  label: GadoraBeam_AI
  addr:
    U: 0x4A4E8
    E: 0x4A5B4
    J: 0x4A4E8
  size: 0xFC
  mode: thumb
  params: null
  return: null
-
  label: Steam_AI
  addr:
    U: 0x4A5E4
    E: 0x4A6B0
    J: 0x4A5E4
  size: 0x208
  mode: thumb
  params: null
  return: null
-
  label: Steam_Diagonal_AI
  addr:
    U: 0x4A7EC
    E: 0x4A8B8
    J: 0x4A7EC
  size: 0x144
  mode: thumb
  params: null
  return: null
-
  label: UnknownItemBlockChangeClipAction
  addr:
    U: 0x4A930
    E: 0x4A9FC
    J: 0x4A930
  size: 0x70
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox for the block
-
  label: UnknownItemBlock_AI
  addr:
    U: 0x4A9A0
    E: 0x4AA6C
    J: 0x4A9A0
  size: 0x22C
  mode: thumb
  params: null
  return: null
-
  label: UnknownItemBlockLight_AI
  addr:
    U: 0x4ABCC
    E: 0x4AC98
    J: 0x4ABCC
  size: 0x34
  mode: thumb
  params: null
  return: null
-
  label: EscapeShipSetIgnoreSamus
  addr:
    U: 0x4AC94
    E: 0x4AD60
    J: 0x4AC94
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Loops through all sprites and sets the ignore samus collision timer to 0xf
-
  label: EscapeShipSetPirateDrawOrder
  addr:
    U: 0x4ACC8
    E: 0x4AD94
    J: 0x4ACC8
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Sets the draw order of all space pirates to 2
-
  label: EscapeShipCheckCollidingWithLaser
  addr:
    U: 0x4ADCC
    E: 0x4AE98
    J: 0x4ADCC
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Checks if the escape ship is colliding with a space pirate laser, if yes destroys it and spawns a particle effect
-
  label: EscapeShip_AI
  addr:
    U: 0x4AE90
    E: 0x4AF5C
    J: 0x4AE90
  size: 0x4FC
  mode: thumb
  params: null
  return: null
-
  label: EscapeShipPart_AI
  addr:
    U: 0x4B38C
    E: 0x4B458
    J: 0x4B38C
  size: 0x278
  mode: thumb
  params: null
  return: null
-
  label: SpacePirateCarryingPowerBomb_AI
  addr:
    U: 0x4B604
    E: 0x4B6D0
    J: 0x4B604
  size: 0x180
  mode: thumb
  params: null
  return: null
-
  label: FakePowerBomb_AI
  addr:
    U: 0x4B784
    E: 0x4B850
    J: 0x4B784
  size: 0x6C
  mode: thumb
  params: null
  return: null
-
  label: FakePowerBombEventTrigger_AI
  addr:
    U: 0x4B7F0
    E: 0x4B8BC
    J: 0x4B7F0
  size: 0x94
  mode: thumb
  params: null
  return: null
-
  label: FallingChozoPillar_AI
  addr:
    U: 0x4B884
    E: 0x4B950
    J: 0x4B884
  size: 0x218
  mode: thumb
  params: null
  return: null
-
  label: MechaRidleySyncSubSpritesPosition
  addr:
    U: 0x4BA9C
    E: 0x4BB68
    J: 0x4BA9C
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the mecha ridley part sprites position with the mecha ridley sprite
-
  label: MechaRidleyPartGreenGlow
  addr:
    U: 0x4BB04
    E: 0x4BBD0
    J: 0x4BB04
  size: 0x84
  mode: thumb
  params: null
  return: null
  notes: Handles the green glow on the mecha ridley parts
-
  label: MechaRidleyInit
  addr:
    U: 0x4BF68
    E: 0x4C034
    J: 0x4BF68
  size: 0x230
  mode: thumb
  params: null
  return: null
  notes: Initialize a mecha ridley sprite
-
  label: MechaRidleyStartWalking
  addr:
    U: 0x4C198
    E: 0x4C264
    J: 0x4C198
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Called once before mecha ridley starts walking
-
  label: MechaRidleyWalkingStationary
  addr:
    U: 0x4C1E0
    E: 0x4C2AC
    J: 0x4C1E0
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Handles mecha ridley walking semi-stationary at the beginning
-
  label: MechaRidleyWalking
  addr:
    U: 0x4C200
    E: 0x4C2CC
    J: 0x4C200
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Handles mecha ridley walking at the begining
-
  label: MechaRidleyStartBattle
  addr:
    U: 0x4C2A4
    E: 0x4C370
    J: 0x4C2A4
  size: 0x98
  mode: thumb
  params: null
  return: null
  notes: Called after mecha ridley finished walking, plays the music and enables the alarm
-
  label: MechaRidleyCheckSamusOutOfAmmo
  addr:
    U: 0x4C33C
    E: 0x4C408
    J: 0x4C33C
  size: 0x8C
  mode: thumb
  params:
  - label: RamSlot
    type: u8
  return:
    label: SamusHasNoMoreAmmo
    type: bool
  notes: Checks if samus is out of ammo (missiles and super missiles), used to force a missile attack
-
  label: RidleyClawAttack
  addr:
    U: 0x4C400
    E: 0x4C4CC
    J: 0x4C400
  size: 0x12C
  mode: thumb
  params: null
  return: null
  notes: Handles the claw attack
-
  label: MechaRidleyStandingUp
  addr:
    U: 0x4C52C
    E: 0x4C5F8
    J: 0x4C52C
  size: 0xB0
  mode: thumb
  params: null
  return: null
  notes: Handles mecha ridley standing up
-
  label: MechaRidleyCurledUp
  addr:
    U: 0x4C5DC
    E: 0x4C6A8
    J: 0x4C5DC
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Handles mecha ridley curled up
-
  label: MechaRidleyCheckRetractingHeadBeforeMovingBackAnimEnded
  addr:
    U: 0x4C630
    E: 0x4C6FC
    J: 0x4C630
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Checks if the retracting head animation before moving back has ended
-
  label: MechaRidleyMovingBack
  addr:
    U: 0x4C6A8
    E: 0x4C774
    J: 0x4C6A8
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Handles mecha ridley moving back
-
  label: MechaRidleyBeforeFireballs
  addr:
    U: 0x4C738
    E: 0x4C804
    J: 0x4C738
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Called once before the fireballs attack
-
  label: MechaRidleyCheckExtendingHeadBeforeFireballsAnimEnded
  addr:
    U: 0x4C784
    E: 0x4C850
    J: 0x4C784
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the extending head animation before the fireballs attack has ended
-
  label: MechaRidleyCheckOpeningMouthAnimEnded
  addr:
    U: 0x4C7BC
    E: 0x4C888
    J: 0x4C7BC
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Checks if the opening mouth animation before the fireballs attack has ended
-
  label: MechaRidleyFireballsAttack
  addr:
    U: 0x4C7F4
    E: 0x4C8C0
    J: 0x4C7F4
  size: 0xBC
  mode: thumb
  params: null
  return: null
  notes: Handles the fireballs attack
-
  label: MechaRidleyCheckClosingMouthAnimEnded
  addr:
    U: 0x4C8B0
    E: 0x4C97C
    J: 0x4C8B0
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Checks if the closing mouth animation after the fireballs attack has ended
-
  label: MechaRidleyCheckRetractingHeadAfterFireballsAnimEnded
  addr:
    U: 0x4C8E0
    E: 0x4C9AC
    J: 0x4C8E0
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Checks if the retracting head animation after the fireballs attack has ended
-
  label: MechaRidleyStartDying
  addr:
    U: 0x4C92C
    E: 0x4C9F8
    J: 0x4C92C
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Called once before mecha ridley dies
-
  label: MechaRidleyDying
  addr:
    U: 0x4C994
    E: 0x4CA60
    J: 0x4C994
  size: 0x9C
  mode: thumb
  params: null
  return: null
  notes: Handles mecha ridley dying
-
  label: MechaRidleyGlowFading
  addr:
    U: 0x4CA30
    E: 0x4CAFC
    J: 0x4CA30
  size: 0x1A8
  mode: thumb
  params: null
  return: null
  notes: Handles the fading of the green glow when mecha ridley dies
-
  label: MechaRidleySpawnDrops
  addr:
    U: 0x4CBD8
    E: 0x4CCA4
    J: 0x4CBD8
  size: 0x244
  mode: thumb
  params: null
  return: null
  notes: Handles the spawn of the multiple large energy
-
  label: MechaRidleyFirstEyeGlow
  addr:
    U: 0x4CE1C
    E: 0x4CEE8
    J: 0x4CE1C
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Handles the first part of the eye glow at the end of the fight
-
  label: MechaRidleySecondEyeGlow
  addr:
    U: 0x4CEC0
    E: 0x4CF8C
    J: 0x4CEC0
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Handles the second part of the eye glow at the end of the fight (spawns an item banner sprite and sets the mecha ridley killed event)
-
  label: MechaRidleyPartInit
  addr:
    U: 0x4CF88
    E: 0x4D054
    J: 0x4CF88
  size: 0x358
  mode: thumb
  params: null
  return: null
  notes: Initialize a mecha ridley part sprite
-
  label: MechaRidleyPartGlows
  addr:
    U: 0x4D2E0
    E: 0x4D3AC
    J: 0x4D2E0
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Calls MechaRidleyPartGreenGlow and 4bb88
-
  label: MechaRidleyPartCoreCoverExplosion
  addr:
    U: 0x4D338
    E: 0x4D404
    J: 0x4D338
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Handles the explosion of the mecha ridley core cover
-
  label: MechaRidleyPartUpdateFrontClawHitbox
  addr:
    U: 0x4D928
    E: 0x4D9F4
    J: 0x4D928
  size: 0x238
  mode: thumb
  params: null
  return: null
  notes: Updates the hitbox of the claw in front
-
  label: MechaRidley_AI
  addr:
    U: 0x4DD58
    E: 0x4DE24
    J: 0x4DD58
  size: 0x384
  mode: thumb
  params: null
  return: null
-
  label: MechaRidleyPart_AI
  addr:
    U: 0x4E0DC
    E: 0x4E1A8
    J: 0x4E0DC
  size: 0x3C4
  mode: thumb
  params: null
  return: null
-
  label: MechaRidleyLaser_AI
  addr:
    U: 0x4E4A0
    E: 0x4E56C
    J: 0x4E4A0
  size: 0x118
  mode: thumb
  params: null
  return: null
-
  label: MechaRidleyMissile_AI
  addr:
    U: 0x4E5B8
    E: 0x4E684
    J: 0x4E5B8
  size: 0x208
  mode: thumb
  params: null
  return: null
-
  label: MechaRidleyFireball_AI
  addr:
    U: 0x4E7C0
    E: 0x4E88C
    J: 0x4E7C0
  size: 0x150
  mode: thumb
  params: null
  return: null
-
  label: EscapeGateChangeClipAction
  addr:
    U: 0x4E910
    E: 0x4E9DC
    J: 0x4E910
  size: 0xB0
  mode: thumb
  params:
  - label: ClipdataAffectingAction
    type: u8
    enum: ClipdataAffectingAction
  return: null
  notes: Changes the current clipdata affecting action and calls ProcessClipdata Enable/disable the hitbox for the gate
-
  label: EscapeGate_AI
  addr:
    U: 0x4E9C0
    E: 0x4EA8C
    J: 0x4E9C0
  size: 0x348
  mode: thumb
  params: null
  return: null
