-
  label: InterruptSetup
  addr:
    U: 0xC0
    E: 0xC0
    J: 0xC0
  size: 0x44
  mode: arm
  params: null
  return: null
  notes: Sets the Pointer To Interrupt Code and calls MainGameLoop
-
  label: InterruptCode
  addr:
    U: 0x104
    E: 0x104
    J: 0x104
  size: 0x138
  mode: arm
  params: null
  return: null
  notes: Interrupt code
-
  label: MainGameLoop
  addr:
    U: 0x23C
    E: 0x23C
    J: 0x23C
  size:
    U: 0x464
    E: 0x498
    J: 0x464
  mode: thumb
  params: null
  return: null
  notes: Main game loop
-
  label: InitGame
  addr:
    U: 0x6A0
    E: 0x6D4
    J: 0x6A0
  size: 0x124
  mode: thumb
  params: null
  return: null
  notes: Initialize the game data
-
  label: SoftResetCheck
  addr:
    U: 0x7D0
    E: 0x804
    J: 0x7D0
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Checks if a soft reset should happen
-
  label: SoftReset
  addr:
    U: 0x804
    E: 0x838
    J: 0x804
  size:
    U: 0x108
    E: 0x128
    J: 0x108
  mode: thumb
  params: null
  return: null
  notes: Handles a soft reset
-
  label: CallLZ77UnComp16Bit
  addr:
    U: 0x90C
    E: 0x960
    J: 0x90C
  size: 0xC
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  return: null
  notes: Calls LZ77UnCompReadNormalWrite16bit
-
  label: CallLZ77UnComp8Bit
  addr:
    U: 0x918
    E: 0x96C
    J: 0x918
  size: 0xC
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  return: null
  notes: Calls LZ77UnCompReadNormalWrite8bit
-
  label: CallSoundBias
  addr:
    U: 0x940
    E: 0x994
    J: 0x940
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Calls SoundBias0 and SoundBias0x200
-
  label: CallMultiBoot
  addr:
    U: 0x950
    E: 0x9A4
    J: 0x950
  size: 0xC
  mode: thumb
  params: null
  return: null
  notes: Calls MultiBoot
-
  label: CallVBlankIntrWait
  addr:
    U: 0x95C
    E: 0x9B0
    J: 0x95C
  size: 0xC
  mode: thumb
  params: null
  return: null
  notes: Calls VBlankIntrWait
-
  label: UpdateInput
  addr:
    U: 0x968
    E: 0x9BC
    J: 0x968
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Updates the input
-
  label: ClearRAM
  addr:
    U: 0x9A0
    E: 0x9F4
    J: 0x9A0
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Clears OAM, PALRAM and VRAM
-
  label: LoadInterruptCode
  addr:
    U: 0x9E8
    E: 0xA3C
    J: 0x9E8
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Loads the interrupt code
-
  label: ResetFreeOam
  addr:
    U: 0xA18
    E: 0xA6C
    J: 0xA18
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Resets the OAM
-
  label: FixedPointMultiply
  addr:
    U: 0xA4C
    E: 0xAA0
    J: 0xA4C
  size: 0x1C
  mode: thumb
  params:
  - label: Multiplicand
    type: s16
  - label: Multiplier1256
    type: s16
    notes: Multiplier (1/256)
  return:
    label: Product
    type: s16
  notes: Fixed-point multiplication of two values, where the second has a scaling factor of 1/256 (ranges from -128 to 127.99)
-
  label: FixedPointDivide
  addr:
    U: 0xA68
    E: 0xABC
    J: 0xA68
  size: 0x18
  mode: thumb
  params:
  - label: Dividend
    type: s16
  - label: Divisor14
    type: s16
    notes: Divisor (1/4)
  return:
    label: Quotient
    type: s16
  notes: Fixed-point division of two values, where the second has a scaling factor of 1/4 (ranges from -8192 to 8191.75)
-
  label: FixedPointInverse
  addr:
    U: 0xA80
    E: 0xAD4
    J: 0xA80
  size: 0x18
  mode: thumb
  params:
  - label: Value
    type: s16
  return:
    label: Inverse165536
    type: s16
    notes: Inverse (1/65536)
  notes: Fixed-point inverse of a value, with a scaling factor of 1/65536
-
  label: CallVBlankCode
  addr:
    U: 0xA98
    E: 0xAEC
    J: 0xA98
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Calls the Vblank code with the function in VBlankCodePointer
-
  label: SetVBlankCodePtr
  addr:
    U: 0xAE4
    E: 0xB38
    J: 0xAE4
  size: 0x1C
  mode: thumb
  params:
  - label: VBlankCodePtr
    type: void *
    tags:
    - thumb
    notes: V-Blank code pointer
  return: null
  notes: Sets VBlankCodePointer to r0
-
  label: CallHBlankCode
  addr:
    U: 0xB00
    E: 0xB54
    J: 0xB00
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calls the Vblank code with the function in HBlankCodePointer
-
  label: SetHBlankCodePtr
  addr:
    U: 0xB24
    E: 0xB78
    J: 0xB24
  size: 0x1C
  mode: thumb
  params:
  - label: HBlankCodePtr
    type: void *
    tags:
    - thumb
    notes: H-Blank code pointer
  return: null
  notes: Sets HBlankCodePointer to r0
-
  label: CallVCountCode
  addr:
    U: 0xB40
    E: 0xB94
    J: 0xB40
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calls the VCount code with the function in VCountCodePointer
-
  label: SetVCountCodePtr
  addr:
    U: 0xB64
    E: 0xBB8
    J: 0xB64
  size: 0x1C
  mode: thumb
  params:
  - label: VCountCodePtr
    type: void *
    tags:
    - thumb
    notes: V-Count code pointer
  return: null
  notes: Sets VCountCodePointer to r0
-
  label: CallSerialCommunicationCode
  addr:
    U: 0xB80
    E: 0xBD4
    J: 0xB80
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calls the serial communication code with the function in SerialCommunicationCodePointer
-
  label: SetSerialCommunicationCode
  addr:
    U: 0xBA4
    E: 0xBF8
    J: 0xBA4
  size: 0x1C
  mode: thumb
  params:
  - label: FunctionPtr
    type: void *
    tags:
    - thumb
    notes: Function pointer
  return: null
  notes: Sets SerialCommunicationCodePointer to r0
-
  label: CallTimer3OverflowCode
  addr:
    U: 0xBC0
    E: 0xC14
    J: 0xBC0
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calls the timer 3 overflow code with the function in Timer3OverflowCodePointer
-
  label: SetTimer3OverflowCode
  addr:
    U: 0xBE4
    E: 0xC38
    J: 0xBE4
  size: 0x1C
  mode: thumb
  params:
  - label: FunctionPtr
    type: void *
    tags:
    - thumb
    notes: Function pointer
  return: null
  notes: Sets Timer3OverflowCodePointer to r0
-
  label: EmptyFunction_C00
  addr:
    U: 0xC00
    E: 0xC54
    J: 0xC00
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function (interrupt handler)
-
  label: Music_EmptyFunction
  addr:
    U: 0x24BC
    E: 0x2510
    J: 0x24BC
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: InitSound
  addr:
    U: 0x2564
    E: 0x25B8
    J: 0x2564
  size: 0x294
  mode: thumb
  params: null
  return: null
  notes: Initializes registers and RAM values that are related to sound/music (sets the pointers to the sound codes)
-
  label: TransferSound
  addr:
    U: 0x28F4
    E: 0x2948
    J: 0x28F4
  size: 0x124
  mode: thumb
  params: null
  return: null
  notes: Sets up 2 repeat DMA Transfers from the raw sound data to the FIFO channels
-
  label: PlaySound1
  addr:
    U: 0x2A18
    E: 0x2A6C
    J: 0x2A18
  size: 0x10
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  return: null
  notes: Plays a sound
-
  label: StopSound
  addr:
    U: 0x2A28
    E: 0x2A7C
    J: 0x2A28
  size: 0x10
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  return: null
  notes: Stops a sound
-
  label: StopAllMusicAndSounds
  addr:
    U: 0x2A58
    E: 0x2AAC
    J: 0x2A58
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Stops every music/sound currently playing
-
  label: FadeAllSounds
  addr:
    U: 0x2ACC
    E: 0x2B20
    J: 0x2ACC
  size: 0x54
  mode: thumb
  params:
  - label: Timer
    type: u16
  return: null
  notes: Fades every single sound
-
  label: PlaySoundIfNotPlaying
  addr:
    U: 0x2B20
    E: 0x2B74
    J: 0x2B20
  size: 0x44
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  return: null
  notes: Plays a sound, only if it's not currently playing
-
  label: FadeSound
  addr:
    U: 0x2C80
    E: 0x2CD4
    J: 0x2C80
  size: 0x14
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  - label: Timer
    type: u16
  return: null
  notes: Fades a sound
-
  label: ApplyMusicOrSoundFading
  addr:
    U: 0x2C94
    E: 0x2CE8
    J: 0x2C94
  size: 0x54
  mode: thumb
  params:
  - label: TrackDataPtr
    type: void *
    notes: Track data pointer
  - label: Timer
    type: u16
  return: null
  notes: Applies the fading for a sound/music
-
  label: PlaySoundAfterCutscene
  addr:
    U: 0x2DE8
    E: 0x2E3C
    J: 0x2DE8
  size: 0x14
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  - label: Timer
    type: u16
  return: null
  notes: Plays a fading in sound (used to replay the elevator sound after a cutscene)
-
  label: InitFadeInMusic
  addr:
    U: 0x2DFC
    E: 0x2E50
    J: 0x2DFC
  size: 0x38
  mode: thumb
  params:
  - label: TrackDataPtr
    type: void *
    notes: Track data pointer
  - label: SoundEntryPtr
    type: void *
    notes: Sound entry pointer
  - label: Timer
    type: u16
  return: null
  notes: Initialises a music that fades in
-
  label: DMATransfer
  addr:
    U: 0x31E4
    E: 0x3238
    J: 0x31E4
  size: 0xD0
  mode: thumb
  params:
  - label: DmaChannel
    type: u8
    notes: DMA channel
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: Length
    type: u16
  - label: BitSize
    type: u8
    notes: Bit size
  return: null
  notes: Performs a DMA Transfer
-
  label: FillBytes
  addr:
    U: 0x32B4
    E: 0x3308
    J: 0x32B4
  size: 0xCC
  mode: thumb
  params:
  - label: DmaChannel
    type: u8
    notes: DMA channel
  - label: Value
    type: u8
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: Length
    type: u16
  - label: BitSize
    type: u8
    notes: Bit size
  return: null
  notes: Fills the destination address with r1, r3 times
-
  label: CheckSetNewMusicTrack
  addr:
    U: 0x36D0
    E: 0x3724
    J: 0x36D0
  size: 0xBC
  mode: thumb
  params:
  - label: MusicTrack
    type: u16
    notes: Music track
  return: null
  notes: Checks if r0 is a new music track
-
  label: CheckPlayNewMusicTrack
  addr:
    U: 0x3878
    E: 0x38CC
    J: 0x3878
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Check play new music track
-
  label: UpdateMusicAfterAlarmStops
  addr:
    U: 0x3930
    E: 0x3984
    J: 0x3930
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Updates the current played music after the alarm stops in chozodia
-
  label: PlayMusic
  addr:
    U: 0x39F4
    E: 0x3A48
    J: 0x39F4
  size: 0x78
  mode: thumb
  params:
  - label: MusicTrack
    type: u16
    notes: Music track
  - label: Priority
    type: u8
  return: null
  notes: Plays the music in r0
-
  label: FadeMusic
  addr:
    U: 0x3A98
    E: 0x3AEC
    J: 0x3A98
  size: 0x4C
  mode: thumb
  params:
  - label: Timer
    type: u16
  return: null
  notes: Fades the current music track
-
  label: FadeMusicForDemo
  addr:
    U: 0x3AE4
    E: 0x3B38
    J: 0x3AE4
  size: 0x4C
  mode: thumb
  params:
  - label: Timer
    type: u16
  return: null
  notes: Fades the current music track (only used for demo)
-
  label: FadeMusicAndQueueNext
  addr:
    U: 0x3B30
    E: 0x3B84
    J: 0x3B30
  size: 0x4C
  mode: thumb
  params:
  - label: Timer
    type: u16
  - label: MusicTrack
    type: u16
    notes: Music track
  - label: Priority
    type: u8
  return: null
  notes: Fades the current music track and queries the track in r1 to be immediately played next
-
  label: CheckFadeInMusic
  addr:
    U: 0x3C20
    E: 0x3C74
    J: 0x3C20
  size: 0x80
  mode: thumb
  params:
  - label: MusicTrack
    type: u16
    notes: Music track
  - label: Timer
    type: u16
  - label: Priority
    type: u8
  return: null
  notes: Checks if a fading music can play
-
  label: PlayMusicAndQueueCurr
  addr:
    U: 0x3CA0
    E: 0x3CF4
    J: 0x3CA0
  size: 0xAC
  mode: thumb
  params:
  - label: MusicTrack
    type: u16
    notes: Music track
  - label: param_1
    type: bool
  return: null
  notes: Queues the current music, plays the music in r0, and when the music is done replays the queued music
-
  label: QueueSound
  addr:
    U: 0x3FAC
    E: 0x4000
    J: 0x3FAC
  size: 0x68
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  - label: Timer
    type: u16
  return: null
  notes: Initialises a sound in the sound queue
-
  label: FadeOrStopSound
  addr:
    U: 0x4014
    E: 0x4068
    J: 0x4014
  size: 0x70
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  - label: Timer
    type: u16
  return: null
  notes: Fades or stops a sound depending on r1
-
  label: PlaySoundTestMusicTrack
  addr:
    U: 0x4228
    E: 0x427C
    J: 0x4228
  size: 0x38
  mode: thumb
  params:
  - label: MusicTrack
    type: u16
    notes: Music track
  return: null
  notes: Plays a sound test
-
  label: ReplaySoundTestMusicTrack
  addr:
    U: 0x4260
    E: 0x42B4
    J: 0x4260
  size: 0x1C
  mode: thumb
  params:
  - label: SoundId
    type: u16
    notes: Sound ID
  return: null
  notes: Replays a sound test
-
  label: CallSoundCodeB
  addr:
    U: 0x4310
    E: 0x4364
    J: 0x4310
  size: 0x10
  mode: thumb
  params:
  - label: SourceRamAddress
    type: void *
    notes: Source RAM address
  - label: SourceRamAddressCopy
    type: void *
    notes: Source RAM address copy
  - label: DestinationRamAddress
    type: void *
    notes: Destination RAM address
  - label: param_3
    type: u8
  return:
    label: EndDestinationAddress
    type: void *
    notes: End destination address
  notes: Call sound code B
-
  label: SoundCodeB
  addr:
    U: 0x4320
    E: 0x4374
    J: 0x4320
  size: 0x94
  mode: arm
  params:
  - label: SourceRamAddress
    type: void *
    notes: Source RAM address
  - label: SourceRamAddressCopy
    type: void *
    notes: Source RAM address copy
  - label: DestinationRamAddress
    type: void *
    notes: Destination RAM address
  - label: param_3
    type: u8
  return:
    label: EndDestinationAddress
    type: void *
    notes: End destination address
  notes: Sound code B
-
  label: CallSoundCodeC
  addr:
    U: 0x43B4
    E: 0x4408
    J: 0x43B4
  size: 0x10
  mode: thumb
  params:
  - label: DestinationRamAddress
    type: void *
    notes: Destination RAM address
  - label: SourceRamAddress
    type: void *
    notes: Source RAM address
  - label: param_2
    type: u8
  return:
    label: EndSourceAddress
    type: void *
    notes: End source address
  notes: Call sound code C
-
  label: SoundCodeC
  addr:
    U: 0x43C4
    E: 0x4418
    J: 0x43C4
  size: 0xA0
  mode: arm
  params:
  - label: DestinationRamAddress
    type: void *
    notes: Destination RAM address
  - label: SourceRamAddress
    type: void *
    notes: Source RAM address
  - label: param_2
    type: u8
  return:
    label: EndSourceAddress
    type: void *
    notes: End source address
  notes: Sound code C
-
  label: CallSoundCodeA
  addr:
    U: 0x4464
    E: 0x44B8
    J: 0x4464
  size: 0x10
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address?
  - label: DestinationAddress
    type: void *
    notes: Destination address?
  - label: param_2
    type: u8
  return:
    label: EndSourceAddress
    type: void *
    notes: End source address?
  notes: Call sound code A
-
  label: SoundCodeA
  addr:
    U: 0x4474
    E: 0x44C8
    J: 0x4474
  size: 0x648
  mode: arm
  params:
  - label: SourceAddress
    type: void *
    notes: Source address?
  - label: DestinationAddress
    type: void *
    notes: Destination address?
  - label: param_2
    type: u8
  return:
    label: EndSourceAddress
    type: void *
    notes: End source address?
  notes: Sound code A
-
  label: CallGetNoteFrenquency
  addr:
    U: 0x4ABC
    E: 0x4B10
    J: 0x4ABC
  size: 0x4
  mode: thumb
  params:
  - label: Frequency
    type: u32
  - label: MusicPitch
    type: u32
    notes: Music Pitch
  return:
    label: Frequency
    type: u32
  notes: Switches to ARM state and jumps to function below
-
  label: GetNoteFrequency
  addr:
    U: 0x4AC0
    E: 0x4B14
    J: 0x4AC0
  size: 0x18
  mode: arm
  params:
  - label: Frequency
    type: u32
  - label: MusicPitch
    type: u32
    notes: Music Pitch
  return:
    label: Frequency
    type: u32
  notes: Gets the frequency of a note
-
  label: StopMusicOrSound
  addr:
    U: 0x4C1C
    E: 0x4C70
    J: 0x4C1C
  size: 0x78
  mode: thumb
  params:
  - label: TrackDataPtr
    type: void *
    notes: Track data pointer
  return: null
  notes: Stops the music of the track in r0
-
  label: CpuFastSet
  addr:
    U: 0x5190
    E: 0x51E4
    J: 0x5190
  size: 0x4
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: LengthMode
    type: u32
    notes: Length/Mode
  return: null
  notes: Calls software interrupt 0xc
-
  label: CpuSet
  addr:
    U: 0x5194
    E: 0x51E8
    J: 0x5194
  size: 0x4
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: LengthMode
    type: u32
    notes: Length/Mode
  return: null
  notes: Calls software interrupt 0xb
-
  label: DivArm_Divide
  addr:
    U: 0x5198
    E: 0x51EC
    J: 0x5198
  size: 0x4
  mode: thumb
  params:
  - label: Denominator
    type: s32
  - label: Numerator
    type: s32
  return:
    label: Quotient
    type: s32
  notes: Calls software interrupt 0x7
-
  label: DivArm_Modulo
  addr:
    U: 0x519C
    E: 0x51F0
    J: 0x519C
  size: 0x8
  mode: thumb
  params:
  - label: Denominator
    type: s32
  - label: Numerator
    type: s32
  return:
    label: Remainder
    type: s32
  notes: Calls software interrupt 0x7
-
  label: LZ77UnCompReadNormalWrite16bit
  addr:
    U: 0x51A4
    E: 0x51F8
    J: 0x51A4
  size: 0x4
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: CallbackParameter
    type: u32
    notes: Callback parameter
  - label: CallbackStructure
    type: u32
    notes: Callback structure
  return: null
  notes: Calls software interrupt 0x12
-
  label: LZ77UnCompReadNormalWrite8bit
  addr:
    U: 0x51A8
    E: 0x51FC
    J: 0x51A8
  size: 0x4
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: CallbackParameter
    type: u32
    notes: Callback parameter
  - label: CallbackStructure
    type: u32
    notes: Callback structure
  return: null
  notes: Calls software interrupt 0x11
-
  label: MidiKey2Freq
  addr:
    U: 0x51AC
    E: 0x5200
    J: 0x51AC
  size: 0x4
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: MidiKey
    type: u8
    notes: Midi key
  - label: AdjustmentValue
    type: u8
    notes: Adjustment value
  return:
    label: Frequency
    type: u16
  notes: Calls software interrupt 0x1f
-
  label: MultiBoot
  addr:
    U: 0x51B0
    E: 0x5204
    J: 0x51B0
  size: 0x8
  mode: thumb
  params:
  - label: PtrToMultibootparamStructure
    type: void *
    notes: Pointer to MultiBootParam structure
  return:
    label: FailureFlag
    type: bool
    notes: Failure flag
  notes: Calls software interrupt 0x25
-
  label: SoundBias_0
  addr:
    U: 0x51B8
    E: 0x520C
    J: 0x51B8
  size: 0x8
  mode: thumb
  params: null
  return: null
  notes: Calls software interrupt 0x19, r0 = 0
-
  label: SoundBias_200
  addr:
    U: 0x51C0
    E: 0x5214
    J: 0x51C0
  size: 0x8
  mode: thumb
  params: null
  return: null
  notes: Calls software interrupt 0x19, r0 = 1
-
  label: Sqrt
  addr:
    U: 0x51C8
    E: 0x521C
    J: 0x51C8
  size: 0x4
  mode: thumb
  params:
  - label: Num
    type: u32
    notes: Number
  return:
    label: Result
    type: u32
  notes: Calls software interrupt 0x8
-
  label: VBlankIntrWait
  addr:
    U: 0x51CC
    E: 0x5220
    J: 0x51CC
  size: 0x8
  mode: thumb
  params: null
  return: null
  notes: Calls software interrupt 0x5
-
  label: SamusCheckScrewSpeedAffectingEnvironment
  addr:
    U: 0x5368
    E: 0x53BC
    J: 0x5368
  size: 0x10C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return: null
  notes: Checks for screw attack/speedbooster damage to the environment
-
  label: SamusWalkingCheckSidesCollision
  addr:
    U: 0x58A0
    E: 0x58F4
    J: 0x58A0
  size: 0x238
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return: null
  notes: Checks for the sides collision when walking
-
  label: SamusStandingCheckGroundCollision
  addr:
    U: 0x5B8C
    E: 0x5BE0
    J: 0x5B8C
  size: 0xC0
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return:
    label: NewPose
    type: u8
    enum: SamusPose
    notes: New pose
  notes: Checks for block collision when not moving on the ground
-
  label: SamusCheckLandingCollision
  addr:
    U: 0x5C4C
    E: 0x5CA0
    J: 0x5C4C
  size: 0x1D0
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return:
    label: NewPose
    type: u8
    enum: SamusPose
    notes: New pose
  notes: Checks for a block collision to land
-
  label: SamusCheckTopCollision
  addr:
    U: 0x5E1C
    E: 0x5E70
    J: 0x5E1C
  size: 0x11C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return:
    label: NewPose
    type: u8
    enum: SamusPose
    notes: New pose
  notes: Checks for top block collision
-
  label: SamusCheckCollision
  addr:
    U: 0x5F38
    E: 0x5F8C
    J: 0x5F38
  size: 0x2DC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return: null
  notes: Calls other functions related to checking for collision
-
  label: SamusCheckSetEnvironmentEffect
  addr:
    U: 0x6214
    E: 0x6268
    J: 0x6214
  size: 0x3DC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: param_1
    type: u8
  - label: param_2
    type: u8
  return: null
  notes: Checks if a environmental effect should spawn
-
  label: SamusUpdateEnvironmentEffects
  addr:
    U: 0x65F0
    E: 0x6644
    J: 0x65F0
  size: 0x360
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return: null
  notes: Updates the environmental effects and checks if a liquid damage environment effect should happen
-
  label: SamusUpdateJumpVelocity
  addr:
    U: 0x6950
    E: 0x69A4
    J: 0x6950
  size: 0x2DC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusDataCopyPtr
    type: SamusData *
    notes: Samus data copy pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  return: null
  notes: "Updates the velocity of samus mid-air (spin breaking, starting to spin, forced movements\u2026)"
-
  label: SamusSetLandingPose
  addr:
    U: 0x6C2C
    E: 0x6C80
    J: 0x6C2C
  size: 0x280
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusDataCopyPtr
    type: SamusData *
    notes: Samus data copy pointer
  return: null
  notes: Determines the new pose when samus lands on ground
-
  label: SamusSetHurtPose
  addr:
    U: 0x6EAC
    E: 0x6F00
    J: 0x6EAC
  size: 0x19C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusDataCopyPtr
    type: SamusData *
    notes: Samus data copy pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  return: null
  notes: Determines the new pose when samus gets hurt
-
  label: SamusSetKnockbackPose
  addr:
    U: 0x7048
    E: 0x709C
    J: 0x7048
  size: 0x11C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusDataCopyPtr
    type: SamusData *
    notes: Samus data copy pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  return: null
  notes: Determines the new pose when samus receives knockback
-
  label: SamusTurnAroundArmCannon
  addr:
    U: 0x7164
    E: 0x71B8
    J: 0x7164
  size: 0x384
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusDataCopyPtr
    type: SamusData *
    notes: Samus data copy pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  return: null
  notes: Checks if some fields should be carried from samus data copy
-
  label: SamusSetPose
  addr:
    U: 0x74E8
    E: 0x753C
    J: 0x74E8
  size: 0xD4
  mode: thumb
  params:
  - label: SamusPose
    type: u8
    enum: SamusPose
    notes: Samus pose
  return: null
  notes: Sets samus pose to r0
-
  label: SamusCopyData
  addr:
    U: 0x75BC
    E: 0x7610
    J: 0x75BC
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Copies Samus Data into Samus Data Copy (parameter is unused)
-
  label: SamusUpdatePhysics
  addr:
    U: 0x761C
    E: 0x7670
    J: 0x761C
  size: 0x110
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return: null
  notes: Sets samus physics default values and check if slowed by liquid
-
  label: SamusGetXVelocityOnSlope
  addr:
    U: 0x772C
    E: 0x7780
    J: 0x772C
  size: 0x44
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewXVelocity
    type: s16
    notes: New X velocity
  notes: Checks if samus is on a slope and changes the velocity according to it
-
  label: SamusCopyPalette
  addr:
    U: 0x7770
    E: 0x77C4
    J: 0x7770
  size: 0x2C
  mode: thumb
  params:
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: PaletteOffset
    type: u32
    notes: Palette offset
  - label: NumOfColors
    type: u32
    notes: Number of colors
  return: null
  notes: Copies Samus Palette
-
  label: SamusUpdate
  addr:
    U: 0x779C
    E: 0x77F0
    J: 0x779C
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Calls SamusUpdatePhysics, SamusExecutePoseRoutine, SamusUpdateVelocityPosition 1 unknown function b8a8 and increments the animation counter
-
  label: SamusUpdateHitbox
  addr:
    U: 0x77E8
    E: 0x783C
    J: 0x77E8
  size:
    U: 0xF8
    E: 0x100
    J: 0xF8
  mode: thumb
  params: null
  return: null
  notes: Updates the hitbox and the moving direction of samus
-
  label: SamusUpdateGfx
  addr:
    U: 0x78E0
    E: 0x793C
    J: 0x78E0
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Calls UpdateSamusGraphics, SamusUpdateAnimationAndTimers and  SamusUpdateGroundEffects
-
  label: CallCheckPlayLowHealthSound
  addr:
    U: 0x791C
    E: 0x7978
    J: 0x791C
  size: 0xC
  mode: thumb
  params: null
  return: null
  notes: Calls the CheckPlayLowHealthSound function
-
  label: CallUpdateArmCannonOffset
  addr:
    U: 0x7928
    E: 0x7984
    J: 0x7928
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Calls UpdateArmCannonPositionOffset
-
  label: SamusBombJump
  addr:
    U: 0x7948
    E: 0x79A4
    J: 0x7948
  size: 0x5C
  mode: thumb
  params:
  - label: Direction0xaRight0xbUp0xcLeft0x80BombAboveSamusFlag
    type: u8
    notes: Direction (0xA = right, 0xB = up, 0xC = left, 0x80 = Bomb above Samus flag)
  return: null
  notes: Makes samus bounce with a bomb
-
  label: SamusAimCannon
  addr:
    U: 0x79A4
    E: 0x7A00
    J: 0x79A4
  size: 0x354
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return: null
  notes: Sets the aim of the cannon
-
  label: SamusFireBeamOrMissile
  addr:
    U: 0x7CF8
    E: 0x7D54
    J: 0x7CF8
  size: 0xBC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  - label: SamusEquipmentPtr
    type: Equipment *
    notes: Samus equipment pointer
  return:
    label: FiredBeamOrMissile
    type: bool
    notes: Fired beam or missile
  notes: Determines which new projectile samus is firing
-
  label: SamusCheckFirePistol
  addr:
    U: 0x7DB4
    E: 0x7E10
    J: 0x7DB4
  size: 0x6C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  return:
    label: NewProjectile0None1Pistol2ChargedPistol
    type: u8
    notes: New projectile (0 = none, 1 = pistol, 2 = charged pistol)
  notes: Increments charge counter and checks if fully charged when B is released
-
  label: SamusSpawnNewProjectile
  addr:
    U: 0x7E20
    E: 0x7E7C
    J: 0x7E20
  size: 0x23C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  - label: SamusEquipmentPtr
    type: Equipment *
    notes: Samus equipment pointer
  return: null
  notes: Determines what new projectile should spawn, calls the 2 previously listed functions
-
  label: SamusCheckAButtonPressed
  addr:
    U: 0x805C
    E: 0x80B8
    J: 0x805C
  size: 0x24
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: AButtonPressed
    type: bool
    notes: A button pressed
  notes: Checks if A is pressed and if so sets forced movement flag to 1 used in the standing pose subroutines (morphball, turning around and standing)
-
  label: SamusSetHighlightedWeapon
  addr:
    U: 0x8080
    E: 0x80DC
    J: 0x8080
  size: 0x140
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusWeaponInfoPtr
    type: SamusWeaponInfo *
    notes: Samus weapon info pointer
  - label: SamusEquipmentPtr
    type: Equipment *
    notes: Samus equipment pointer
  return: null
  notes: Sets what weapon is hightlighted in the HUD  (also arms the cannon for missiles)
-
  label: SamusSetSpinningPose
  addr:
    U: 0x81C0
    E: 0x821C
    J: 0x81C0
  size: 0xB8
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusEquipmentPtr
    type: Equipment *
    notes: Samus equipment pointer
  return: null
  notes: Sets the spinning pose (space jumping, spinning, screw attacking)
-
  label: SamusApplyXAcceleration
  addr:
    U: 0x8278
    E: 0x82D4
    J: 0x8278
  size: 0x40
  mode: thumb
  params:
  - label: XAcceleration
    type: s16
    notes: X Acceleration
  - label: XVelocity
    type: s16
    notes: X Velocity
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return: null
  notes: Applies an X acceleration to samus
-
  label: SamusCheckHazardDamage
  addr:
    U: 0x82B8
    E: 0x8314
    J: 0x82B8
  size: 0x168
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusEquipmentPtr
    type: Equipment *
    notes: Samus equipment pointer
  - label: SamusHazardDamagePtr
    type: SamusHazardDamage *
    notes: Samus hazard damage pointer
  return:
    label: GettingKnockedBackOrDying
    type: bool
    notes: Getting knocked back or dying
  notes: Checks for varia and gravity and inflicts hazard damage
-
  label: SamusCheckShinesparkingPose
  addr:
    U: 0x8420
    E: 0x847C
    J: 0x8420
  size: 0x58
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return: null
  notes: Checks if samus is shinesparking
-
  label: SamusInactivity
  addr:
    U: 0x8478
    E: 0x84D4
    J: 0x8478
  size: 0x4
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: Always0xff
    type: u8
    notes: Always 0xFF
  notes: Default function used for pose subroutines that don't have any behavior (generally when the player isn't in control of samus)
-
  label: SamusRunning
  addr:
    U: 0x84DC
    E: 0x8538
    J: 0x84DC
  size: 0xD4
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Running pose subroutine
-
  label: SamusRunningGfx
  addr:
    U: 0x85B0
    E: 0x860C
    J: 0x85B0
  size: 0x124
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Running pose GFX update subroutine
-
  label: SamusStanding
  addr:
    U: 0x86D4
    E: 0x8730
    J: 0x86D4
  size: 0x148
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Standing pose subroutine
-
  label: SamusStandingGfx
  addr:
    U: 0x881C
    E: 0x8878
    J: 0x881C
  size: 0x20
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Standing pose GFX update subroutine
-
  label: SamusTurningAround
  addr:
    U: 0x883C
    E: 0x8898
    J: 0x883C
  size: 0xBC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around pose subroutine
-
  label: SamusTurningAroundGfx
  addr:
    U: 0x88F8
    E: 0x8954
    J: 0x88F8
  size: 0x48
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around pose GFX update subroutine
-
  label: SamusShootingGfx
  addr:
    U: 0x8940
    E: 0x899C
    J: 0x8940
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Shooting pose GFX update subroutine
-
  label: SamusCrouching
  addr:
    U: 0x895C
    E: 0x89B8
    J: 0x895C
  size: 0x1B8
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Crouching pose subroutine
-
  label: SamusTurningAroundAndCrouching
  addr:
    U: 0x8B14
    E: 0x8B70
    J: 0x8B14
  size: 0x110
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around and crouching pose subroutine
-
  label: SamusTurningAroundAndCrouchingGfx
  addr:
    U: 0x8C24
    E: 0x8C80
    J: 0x8C24
  size: 0x2C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around and crouching pose GFX update subroutine
-
  label: SamusShootingAndCrouchingGfx
  addr:
    U: 0x8C50
    E: 0x8CAC
    J: 0x8C50
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Shooting and crouching pose GFX update subroutine
-
  label: SamusSkidding
  addr:
    U: 0x8C6C
    E: 0x8CC8
    J: 0x8C6C
  size: 0x8C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Skidding pose subroutine
-
  label: SamusMidair
  addr:
    U: 0x8CF8
    E: 0x8D54
    J: 0x8CF8
  size: 0x100
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Jumping/Falling pose subroutine
-
  label: SamusMidAirGfx
  addr:
    U: 0x8DF8
    E: 0x8E54
    J: 0x8DF8
  size: 0x40
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Jumping/Falling pose GFX update subroutine
-
  label: SamusTurningAroundMidAir
  addr:
    U: 0x8E38
    E: 0x8E94
    J: 0x8E38
  size: 0x80
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around and Jumping/Falling pose subroutine
-
  label: SamusTurningAroundMidAirGfx
  addr:
    U: 0x8EB8
    E: 0x8F14
    J: 0x8EB8
  size: 0x20
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around and Jumping/Falling pose GFX update subroutine
-
  label: SamusStartingSpinJumpGfx
  addr:
    U: 0x8ED8
    E: 0x8F34
    J: 0x8ED8
  size: 0x24
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Starting a spin jump pose GFX update subroutine
-
  label: SamusSpinning
  addr:
    U: 0x8EFC
    E: 0x8F58
    J: 0x8EFC
  size: 0x144
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Spinning pose subroutine
-
  label: SamusSpinningGfx
  addr:
    U: 0x9040
    E: 0x909C
    J: 0x9040
  size: 0x5C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Spinning pose GFX update subroutine
-
  label: SamusStartingWallJump
  addr:
    U: 0x909C
    E: 0x90F8
    J: 0x909C
  size: 0x44
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Starting wall jump pose subroutine
-
  label: SamusStartingWallJumpGfx
  addr:
    U: 0x90E0
    E: 0x913C
    J: 0x90E0
  size: 0x24
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Starting wall jump pose GFX update subroutine
-
  label: SamusSpaceJumpingGfx
  addr:
    U: 0x9104
    E: 0x9160
    J: 0x9104
  size: 0x4C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Space jumping pose GFX update subroutine
-
  label: SamusScrewAttackingGfx
  addr:
    U: 0x9150
    E: 0x91AC
    J: 0x9150
  size: 0xC0
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Screw attacking pose GFX update subroutine
-
  label: SamusMorphing
  addr:
    U: 0x9210
    E: 0x926C
    J: 0x9210
  size: 0x20
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Morphing pose subroutine
-
  label: SamusMorphingGfx
  addr:
    U: 0x9230
    E: 0x928C
    J: 0x9230
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Morphing pose GFX update subroutine
-
  label: SamusMorphball
  addr:
    U: 0x924C
    E: 0x92A8
    J: 0x924C
  size: 0x170
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Morphball pose subroutine
-
  label: SamusRolling
  addr:
    U: 0x93BC
    E: 0x9418
    J: 0x93BC
  size: 0xCC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Rolling pose subroutine
-
  label: SamusRollingGfx
  addr:
    U: 0x9488
    E: 0x94E4
    J: 0x9488
  size: 0x38
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Rolling pose GFX update subroutine
-
  label: SamusUnmorphing
  addr:
    U: 0x94C0
    E: 0x951C
    J: 0x94C0
  size: 0x48
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Unmorphing pose subroutine
-
  label: SamusUnmorphingGfx
  addr:
    U: 0x9508
    E: 0x9564
    J: 0x9508
  size: 0x24
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Unmorphing pose GFX update subroutine
-
  label: SamusMorphballMidAir
  addr:
    U: 0x952C
    E: 0x9588
    J: 0x952C
  size: 0xD8
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Jumping/Falling in morphball pose subroutine
-
  label: SamusHangingOnLedge
  addr:
    U: 0x9604
    E: 0x9660
    J: 0x9604
  size: 0x16C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Hanging on ledge pose subroutine
-
  label: SamusHangingOnLedgeGfx
  addr:
    U: 0x9770
    E: 0x97CC
    J: 0x9770
  size: 0x28
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Hanging on ledge pose GFX update subroutine
-
  label: SamusTurningToAimWhileHanging
  addr:
    U: 0x9798
    E: 0x97F4
    J: 0x9798
  size: 0xC8
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning to aim while hanging pose subroutine
-
  label: SamusTurningToAimWhileHangingGfx
  addr:
    U: 0x9860
    E: 0x98BC
    J: 0x9860
  size: 0x24
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning to aim while hanging pose GFX update subroutine
-
  label: SamusHidingArmCannonWhileHangingGfx
  addr:
    U: 0x9884
    E: 0x98E0
    J: 0x9884
  size: 0x30
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Hiding arm cannon while hanging pose GFX update subroutine
-
  label: SamusAimingWhileHanging
  addr:
    U: 0x98B4
    E: 0x9910
    J: 0x98B4
  size: 0x18C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Aiming while hanging pose subroutine
-
  label: SamusPullingSelfUp
  addr:
    U: 0x9A40
    E: 0x9A9C
    J: 0x9A40
  size: 0x28
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Pulling yourself up from hanging pose subroutine
-
  label: SamusPullingSelfUpGfx
  addr:
    U: 0x9A68
    E: 0x9AC4
    J: 0x9A68
  size: 0x2C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Pulling self up pose GFX update subroutine
-
  label: SamusPullingSelfForward
  addr:
    U: 0x9A94
    E: 0x9AF0
    J: 0x9A94
  size: 0x20
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Pulling self forward from hanging pose subroutine
-
  label: SamusPullingSelfForwardGfx
  addr:
    U: 0x9AB4
    E: 0x9B10
    J: 0x9AB4
  size: 0x2C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Pulling self forward pose GFX update subroutine
-
  label: SamusPullingSelfIntoMorphballTunnelGfx
  addr:
    U: 0x9AE0
    E: 0x9B3C
    J: 0x9AE0
  size: 0x48
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Pulling self into morphball tunnel pose GFX update subroutine
-
  label: SamusUsingAnElevator
  addr:
    U: 0x9B28
    E: 0x9B84
    J: 0x9B28
  size: 0x8C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Using an elevator pose subroutine
-
  label: SamusUsingAnElevatorGfx
  addr:
    U: 0x9BB4
    E: 0x9C10
    J: 0x9BB4
  size: 0x50
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Using an elevator pose GFX update subroutine
-
  label: SamusFacingTheForeground
  addr:
    U: 0x9C04
    E: 0x9C60
    J: 0x9C04
  size: 0x28
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Facing the foreground pose subroutine
-
  label: SamusTurningFromFacingForegroundGfx
  addr:
    U: 0x9C2C
    E: 0x9C88
    J: 0x9C2C
  size: 0x3C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning from facing the foreground pose GFX update subroutine
-
  label: SamusDelayBeforeShinesparkingGfx
  addr:
    U: 0x9C68
    E: 0x9CC4
    J: 0x9C68
  size: 0x38
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Delay before shinesparking pose GFX update subroutine
-
  label: SamusShinesparking
  addr:
    U: 0x9CA0
    E: 0x9CFC
    J: 0x9CA0
  size: 0xB0
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Shinesparking pose subroutine
-
  label: SamusShinesparkingGfx
  addr:
    U: 0x9D50
    E: 0x9DAC
    J: 0x9D50
  size: 0x8C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Shinesparking pose GFX update subroutine
-
  label: SamusShinesparkCollisionGfx
  addr:
    U: 0x9DDC
    E: 0x9E38
    J: 0x9DDC
  size: 0x14
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Shinesparking collision pose GFX update subroutine
-
  label: SamusDelayAfterShinesparkingGfx
  addr:
    U: 0x9DF0
    E: 0x9E4C
    J: 0x9DF0
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Delay after Shinesparking pose GFX update subroutine
-
  label: SamusDelayBeforeBallsparking
  addr:
    U: 0x9E0C
    E: 0x9E68
    J: 0x9E0C
  size: 0x28
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Delay before ballsparking pose subroutine
-
  label: SamusDelayBeforeBallsparkingGfx
  addr:
    U: 0x9E34
    E: 0x9E90
    J: 0x9E34
  size: 0x88
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Delay before ballparking pose GFX update subroutine
-
  label: SamusBallsparkingGfx
  addr:
    U: 0x9EBC
    E: 0x9F18
    J: 0x9EBC
  size: 0x7C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Ballparking pose GFX update subroutine
-
  label: SamusBallsparkCollisionGfx
  addr:
    U: 0x9F38
    E: 0x9F94
    J: 0x9F38
  size: 0x14
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Ballparking collision pose GFX update subroutine
-
  label: SamusOnZipline
  addr:
    U: 0x9F4C
    E: 0x9FA8
    J: 0x9F4C
  size: 0x58
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: On zipline pose subroutine
-
  label: SamusShootingOnZiplineGfx
  addr:
    U: 0x9FA4
    E: 0xA000
    J: 0x9FA4
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Shooting on zipline pose GFX update subroutine
-
  label: SamusMorphballOnZipline
  addr:
    U: 0x9FC0
    E: 0xA01C
    J: 0x9FC0
  size: 0x30
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Morphball on zipline pose subroutine
-
  label: SamusSavingLoadingGame
  addr:
    U: 0x9FF0
    E: 0xA04C
    J: 0x9FF0
  size: 0x18
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Saving/Loading game pose subroutine
-
  label: SamusTurningAroundToDowloadMapDataGfx
  addr:
    U: 0xA008
    E: 0xA064
    J: 0xA008
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around to download map data pose GFX update subroutine
-
  label: SamusGettingHurt
  addr:
    U: 0xA024
    E: 0xA080
    J: 0xA024
  size: 0x68
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Getting hurt pose subroutine
-
  label: SamusGettingHurtGfx
  addr:
    U: 0xA08C
    E: 0xA0E8
    J: 0xA08C
  size: 0x20
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Getting hurt pose GFX update subroutine
-
  label: SamusGettingKnockedBack
  addr:
    U: 0xA0AC
    E: 0xA108
    J: 0xA0AC
  size: 0x30
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Getting knocked back pose subroutine
-
  label: SamusDying
  addr:
    U: 0xA0DC
    E: 0xA138
    J: 0xA0DC
  size: 0x10C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Dying pose subroutine
-
  label: SamusCrouchingToCrawlGfx
  addr:
    U: 0xA1E8
    E: 0xA244
    J: 0xA1E8
  size: 0x34
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Crouching to crawl pose GFX update subroutine
-
  label: SamusCrawlingStopped
  addr:
    U: 0xA21C
    E: 0xA278
    J: 0xA21C
  size: 0x68
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Crawling stopped pose subroutine
-
  label: SamusStartingToCrawlGfx
  addr:
    U: 0xA284
    E: 0xA2E0
    J: 0xA284
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Starting to crawl pose GFX update subroutine
-
  label: SamusCrawling
  addr:
    U: 0xA2A0
    E: 0xA2FC
    J: 0xA2A0
  size: 0x74
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Crawling pose subroutine
-
  label: SamusDyingGfx
  addr:
    U: 0xA314
    E: 0xA370
    J: 0xA314
  size: 0x44
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Dying pose GFX update subroutine
-
  label: SamusTurningAroundWhileCrawling
  addr:
    U: 0xA358
    E: 0xA3B4
    J: 0xA358
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning around while crawling pose subroutine
-
  label: SamusCrawlingGfx
  addr:
    U: 0xA374
    E: 0xA3D0
    J: 0xA374
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Crawling pose GFX update subroutine
-
  label: SamusGrabbingALedgeSuitlessGfx
  addr:
    U: 0xA390
    E: 0xA3EC
    J: 0xA390
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Samus grabbing a ledge suitless pose GFX update subroutine
-
  label: SamusFacingTheBackground
  addr:
    U: 0xA3AC
    E: 0xA408
    J: 0xA3AC
  size: 0x28
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Facing the background pose subroutine
-
  label: SamusTurningFromFacingBackgroundGfx
  addr:
    U: 0xA3D4
    E: 0xA430
    J: 0xA3D4
  size: 0x54
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Samus turning fromfacing the background pose GFX update subroutine
-
  label: SamusTurningToEnterEscapeShipGfx
  addr:
    U: 0xA428
    E: 0xA484
    J: 0xA428
  size: 0x1C
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewSamusPose0xffIfNone
    type: u8
    enum: SamusPose
    notes: New Samus pose (0xFF if none)
  notes: Turning to enter escape ship pose GFX update subroutine
-
  label: SamusExecutePoseSubroutine
  addr:
    U: 0xA444
    E: 0xA4A0
    J: 0xA444
  size:
    U: 0xBC
    E: 0xD8
    J: 0xBC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: NewPose
    type: u8
    enum: SamusPose
    notes: New pose
  notes: Calls BXR1 to execute the current pose subroutines, also calls  SamusSpawnNewWeapon, SamusSetHighlightedWeapon, SamusLiquidDamage, SamusCheckShinesparking and SamusSetSpinningPose
-
  label: SamusUpdateVelocityAndPosition
  addr:
    U: 0xA500
    E: 0xA578
    J: 0xA500
  size: 0x188
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return: null
  notes: Updates the velocity and the position of samus
-
  label: SamusUpdateGraphicsRam
  addr:
    U: 0xA688
    E: 0xA700
    J: 0xA688
  size: 0xDE4
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: FacingLeftOrRight
    type: u8
    notes: 0 if facing right, 1 if facing left
  return: null
  notes: Updates Samus graphics, echo, and OAM
-
  label: SamusUpdatePalette
  addr:
    U: 0xB46C
    E: 0xB4E4
    J: 0xB46C
  size: 0x3FC
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return: null
  notes: Updates the palette of samus
-
  label: CheckPlayLowHealthSound
  addr:
    U: 0xB868
    E: 0xB8E0
    J: 0xB868
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Checks if the low health sound should be played
-
  label: SamusUpdateDrawDistanceAndStandingStatus
  addr:
    U: 0xB8A8
    E: 0xB920
    J: 0xB8A8
  size: 0x68
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return: null
  notes: Updates the draw distances and the standing status
-
  label: UpdateArmCannonOffset
  addr:
    U: 0xB910
    E: 0xB988
    J: 0xB910
  size: 0x3A8
  mode: thumb
  params:
  - label: 0IfFacingRight1IfFacingLeft
    type: u8
    notes: 0 if facing right, 1 if facing left
  return: null
  notes: Updates the arm cannon position offset
-
  label: InitSamusData
  addr:
    U: 0xBCB8
    E: 0xBD30
    J: 0xBCB8
  size: 0x130
  mode: thumb
  params: null
  return: null
  notes: Initializes samus' data
-
  label: DrawSamus
  addr:
    U: 0xBDE8
    E: 0xBE60
    J: 0xBDE8
  size: 0x4F0
  mode: thumb
  params: null
  return: null
  notes: Draws samus
-
  label: DemoMainLoop
  addr:
    U: 0xC2D8
    E: 0xC350
    J: 0xC2D8
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Main loop for a demo
-
  label: UpdateDemoInput
  addr:
    U: 0xC384
    E: 0xC3FC
    J: 0xC384
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Updates the input for the current demo
-
  label: CopyDemoButtonInput
  addr:
    U: 0xC414
    E: 0xC48C
    J: 0xC414
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Copies the demo button
-
  label: InGameSubroutine
  addr:
    U: 0xC4B4
    E: 0xC52C
    J: 0xC4B4
  size:
    U: 0x244
    E: 0x234
    J: 0x244
  mode: thumb
  params: null
  return:
    label: ReturnToTitleScreen
    type: bool
    notes: Return to title screen
  notes: Main loop in game
-
  label: SetVBlankCodeForInGame
  addr:
    U: 0xC6F8
    E: 0xC760
    J: 0xC6F8
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Sets the Vblank code for in game
-
  label: UpdateSamusGfx
  addr:
    U: 0xC734
    E: 0xC7E8
    J: 0xC734
  size: 0x160
  mode: thumb
  params:
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  - label: SamusPhysicsPtr
    type: SamusPhysics *
    notes: Samus physics pointer
  return: null
  notes: Transfers samus' graphics and palettes to VRAM
-
  label: VBlankCodeDuringInGameLoads
  addr:
    U: 0xC894
    E: 0xC948
    J: 0xC894
  size: 0x158
  mode: thumb
  params: null
  return: null
  notes: VBlank code during in game loads
-
  label: VBlankCodeDuringInGame
  addr:
    U: 0xCA6C
    E: 0xCB20
    J: 0xCA6C
  size: 0x134
  mode: thumb
  params: null
  return: null
  notes: VBlank code during in game
-
  label: InitAndLoadGenerics
  addr:
    U: 0xCBAC
    E: 0xCC60
    J: 0xCBAC
  size: 0x23C
  mode: thumb
  params: null
  return: null
  notes: Loads and/or initializes generic data
-
  label: UpdateSprites
  addr:
    U: 0xCF00
    E: 0xCFB4
    J: 0xCF00
  size: 0x42C
  mode: thumb
  params: null
  return: null
  notes: Calls sprites AI, updates sprite info (animation counter, stun timer), updates sprite debris, does checks related to samus on sprite and updates the alarm timer
-
  label: UpdateSpriteAnimation
  addr:
    U: 0xD32C
    E: 0xD3E0
    J: 0xD32C
  size: 0x40
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return: null
  notes: Updates the animation duration counter and the current animation frame
-
  label: DrawOnScreenSprites
  addr:
    U: 0xD430
    E: 0xD4E4
    J: 0xD430
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Loop that calls the DrawSprite function, actually draws sprites, updates sprite debris and is affected by the DisableDrawingSprites flag
-
  label: DrawSprite
  addr:
    U: 0xD544
    E: 0xD5F8
    J: 0xD544
  size: 0x890
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: RamSlot
    type: u32
    notes: RAM slot?
  return: null
  notes: Draws the sprite based on the data in r0 and r1
-
  label: CheckSpriteIsOnScreen
  addr:
    U: 0xDDD4
    E: 0xDE88
    J: 0xDDD4
  size: 0x150
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return: null
  notes: Checks if the sprite in r0 is on screen
-
  label: LoadSpriteDataForRoom
  addr:
    U: 0xDF24
    E: 0xDFD8
    J: 0xDF24
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: 'Calls : ClearSpriteData, LoadSpriteset, CheckReloadEscapeDigitsGraphics, LoadLocationText,  LoadRoomSprites and SpawnSpacePiratesWaiting'
-
  label: LoadSpriteset
  addr:
    U: 0xDF84
    E: 0xE038
    J: 0xDF84
  size: 0x100
  mode: thumb
  params: null
  return: null
  notes: Loads a spriteset
-
  label: LoadNewSpriteGfx
  addr:
    U: 0xE084
    E: 0xE138
    J: 0xE084
  size: 0x2C
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
    notes: Sprite ID
  - label: SpriteGfxRow
    type: u8
    notes: Sprite graphics row
  return: null
  notes: Loads a sprite graphics
-
  label: LoadNewSpritePalette
  addr:
    U: 0xE0B0
    E: 0xE164
    J: 0xE0B0
  size: 0x40
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
    notes: Sprite ID
  - label: SpriteGfxRow
    type: u8
    notes: Sprite graphics row
  - label: LengthRows
    type: u8
    notes: Length (rows)
  return: null
  notes: Loads a sprite palette
-
  label: ClearSpriteData
  addr:
    U: 0xE0F0
    E: 0xE1A4
    J: 0xE0F0
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Clears the sprite data
-
  label: InitSpritesInRoom
  addr:
    U: 0xE134
    E: 0xE1E8
    J: 0xE134
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Loads the sprites of a room
-
  label: InitPrimarySprite
  addr:
    U: 0xE17C
    E: 0xE230
    J: 0xE17C
  size: 0xDC
  mode: thumb
  params:
  - label: SpritePropertySpritesetSlot
    type: u8
    notes: Sprite property/spriteset slot
  - label: SpriteYPosition
    type: u16
    notes: Sprite Y position
  - label: SpriteXPosition
    type: u16
    notes: Sprite X position
  - label: RoomSpriteNum
    type: u8
    notes: Room sprite number
  return: null
  notes: Initializes a primary sprite
-
  label: SpawnNewSecondarySprite
  addr:
    U: 0xE258
    E: 0xE30C
    J: 0xE258
  size: 0xC4
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: SecondarySpriteID
    notes: Sprite ID
  - label: PartNum
    type: u8
    notes: Part number
  - label: SpritesetGfxRow
    type: u8
    notes: Spriteset graphics row
  - label: PrimarySpriteRamSlot
    type: u8
    notes: Primary sprite RAM slot
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: Status
    type: u16
    tags:
    - flags
    enum: SpriteStatus
  return:
    label: AssignedSpriteRamSlot0xffOtherwise
    type: u8
    notes: Assigned sprite RAM slot, 0xFF otherwise
  notes: Spawns a new secondary sprite
-
  label: SpawnNewPrimarySprite
  addr:
    U: 0xE31C
    E: 0xE3D0
    J: 0xE31C
  size: 0xB8
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
    notes: Sprite ID
  - label: RoomSlot
    type: u8
    notes: Room slot
  - label: SpritesetGfxRow
    type: u8
    notes: Spriteset graphics row
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: Status
    type: u16
    tags:
    - flags
    enum: SpriteStatus
  return:
    label: AssignedSpriteRamSlot0xffOtherwise
    type: u8
    notes: Assigned sprite RAM slot, 0xFF otherwise
  notes: Spawns a new primary sprite
-
  label: SpawnDropsAndFollowers
  addr:
    U: 0xE3D4
    E: 0xE488
    J: 0xE3D4
  size: 0xC4
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
    notes: Sprite ID
  - label: RoomSlot
    type: u8
    notes: Room slot
  - label: SpritesetGfxRow
    type: u8
    notes: Spriteset graphics row
  - label: PrimarySpriteRamSlot
    type: u8
    notes: Primary sprite RAM slot
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: Status
    type: u16
    tags:
    - flags
    enum: SpriteStatus
  return:
    label: AssignedSpriteRamSlot0xffOtherwise
    type: u8
    notes: Assigned sprite RAM slot, 0xFF otherwise
  notes: Spawns a drop according to the data in parameters is also used to spawn the follower sprites
-
  label: LoadLocationTextSprite
  addr:
    U: 0xE498
    E: 0xE54C
    J: 0xE498
  size: 0x7C
  mode: thumb
  params: null
  return: null
  notes: Initialize a new primary sprite to be a location text
-
  label: TakeDamageFromSprite
  addr:
    U: 0xE634
    E: 0xE6E8
    J: 0xE634
  size: 0xC4
  mode: thumb
  params:
  - label: KnockbackFlag
    type: bool
    notes: Knockback flag
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: DamageMultiplier
    type: u16
    notes: Damage multiplier
  return:
    label: EnergyAt0
    type: bool
    notes: Energy at 0
  notes: Handles taking damage from a sprite
-
  label: CheckObjectsTouching
  addr:
    U: 0xE6F8
    E: 0xE7AC
    J: 0xE6F8
  size: 0x50
  mode: thumb
  params:
  - label: Object1TopPosition
    type: u16
    notes: Object 1 top position
  - label: Object1BottomPosition
    type: u16
    notes: Object 1 bottom position
  - label: Object1LeftPosition
    type: u16
    notes: Object 1 left position
  - label: Object1RightPosition
    type: u16
    notes: Object 1 right position
  - label: Object2TopPosition
    type: u16
    notes: Object 2 top position
  - label: Object2BottomPosition
    type: u16
    notes: Object 2 bottom position
  - label: Object2LeftPosition
    type: u16
    notes: Object 2 left position
  - label: Object2RightPosition
    type: u16
    notes: Object 2 right position
  return:
    label: ObjectsTouching
    type: bool
    notes: Objects touching
  notes: Checks if 2 objects are touching
-
  label: SamusAndSpriteCollision
  addr:
    U: 0xE748
    E: 0xE7FC
    J: 0xE748
  size: 0xC18
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is colliding with a sprite, applies that collision
-
  label: CheckVerticalCollisionAtPosition
  addr:
    U: 0xF360
    E: 0xF414
    J: 0xF360
  size: 0x11C
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return:
    label: BlockTopEdgeYPosition
    type: u16
    notes: Block top edge Y position
  notes: Checks the vertical collision at the position
-
  label: CheckVerticalCollisionAtPosition_Slopes
  addr:
    U: 0xF47C
    E: 0xF530
    J: 0xF47C
  size: 0x118
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return:
    label: BlockTopEdgeYPosition
    type: u16
    notes: Block top edge Y position
  notes: Checks the vertical collision at the position, accouts for slopes
-
  label: CheckCollisionAtPosition
  addr:
    U: 0xF688
    E: 0xF73C
    J: 0xF688
  size: 0x98
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return: null
  notes: Checks the collision at the position
-
  label: GetCollisionAtPosition
  addr:
    U: 0xF720
    E: 0xF7D4
    J: 0xF720
  size: 0x7C
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return:
    label: CollisionCheck
    type: u32
    notes: Collision check
  notes: Checks the collision at the position and return the collision check
-
  label: CurrSpriteFalling
  addr:
    U: 0xF79C
    E: 0xF850
    J: 0xF79C
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Handles the current sprite falling, seems unused
-
  label: SpriteChooseRandomXFlip
  addr:
    U: 0xF80C
    E: 0xF8C0
    J: 0xF80C
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Chooses a random X flip for the current sprite
-
  label: SpriteChooseRandomXDirection
  addr:
    U: 0xF844
    E: 0xF8F8
    J: 0xF844
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Chosses a random X direction for the current sprite
-
  label: SpriteChooseRandomXDirection_RoomSlot
  addr:
    U: 0xF880
    E: 0xF934
    J: 0xF880
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Sprite choose random X direction with room slot
-
  label: MakeSpriteFaceSamus_XFlip
  addr:
    U: 0xF8B0
    E: 0xF964
    J: 0xF8B0
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Makes the sprite face samus using X flip
-
  label: MakeSpriteFaceSamus_Direction
  addr:
    U: 0xF8E0
    E: 0xF994
    J: 0xF8E0
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Makes the sprite face samus using direction
-
  label: MakeSpriteFaceAwayFromSamus_XFlip
  addr:
    U: 0xF914
    E: 0xF9C8
    J: 0xF914
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Makes the sprite face away from samus using X flip
-
  label: MakeSpriteFaceAwayFromSamus_Direction
  addr:
    U: 0xF944
    E: 0xF9F8
    J: 0xF944
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Makes the sprite face away from samus using direction
-
  label: MechaRidleyMissileRotation
  addr:
    U: 0xFA78
    E: 0xFB2C
    J: 0xFA78
  size: 0x150
  mode: thumb
  params:
  - label: OamRotation
    type: u16
    notes: OAM rotation
  - label: SamusYPosition
    type: u16
    notes: Samus Y position
  - label: SamusXPosition
    type: u16
    notes: Samus X position
  - label: SpriteYPosition
    type: u16
    notes: Sprite Y position
  - label: SpriteXPosition
    type: u16
    notes: Sprite X position
  return:
    label: NewOamRotation
    type: u16
    notes: New OAM rotation
  notes: Calculates the new OAM rotation for the current sprite to face samus
-
  label: CheckEndOfSpriteAnimation_Curr
  addr:
    U: 0xFBC8
    E: 0xFC7C
    J: 0xFBC8
  size: 0x38
  mode: thumb
  params: null
  return:
    label: AnimationEnded
    type: bool
    notes: Animation ended
  notes: Checks if the animation of the current sprite has ended
-
  label: CheckNearEndOfSpriteAnimation_Curr
  addr:
    U: 0xFC00
    E: 0xFCB4
    J: 0xFC00
  size: 0x3C
  mode: thumb
  params: null
  return:
    label: AnimationNearEnd
    type: bool
    notes: Animation near end
  notes: Checks if the animation of the current sprite has nearly ended
-
  label: CheckEndOfSpriteAnimation_Slot
  addr:
    U: 0xFC3C
    E: 0xFCF0
    J: 0xFC3C
  size: 0x48
  mode: thumb
  params:
  - label: SpriteSlotNum
    type: u8
    notes: Sprite slot number
  return:
    label: AnimationEnded
    type: bool
    notes: Animation ended
  notes: Checks if the animation of the sprite with the room slot has ended
-
  label: CheckNearEndOfSpriteAnimation_Slot
  addr:
    U: 0xFC84
    E: 0xFD38
    J: 0xFC84
  size: 0x4C
  mode: thumb
  params:
  - label: SpriteSlotNum
    type: u8
    notes: Sprite slot number
  return:
    label: AnimationNearEnd
    type: bool
    notes: Animation near end
  notes: Checks if the animation of the sprite with the room slot has nearly ended
-
  label: CheckEndOfSubSpriteData1Animation
  addr:
    U: 0xFCD0
    E: 0xFD84
    J: 0xFCD0
  size: 0x38
  mode: thumb
  params: null
  return:
    label: AnimationEnded
    type: bool
    notes: Animation ended
  notes: Checks if the sprite animation of the sub sprite data 1 has ended
-
  label: CheckNearEndOfSubSpriteData1Animation
  addr:
    U: 0xFD08
    E: 0xFDBC
    J: 0xFD08
  size: 0x3C
  mode: thumb
  params: null
  return:
    label: AnimationNearEnd
    type: bool
    notes: Animation near end
  notes: Checks if the sprite animation of the sub sprite data 1 has nearly ended
-
  label: CheckEndOfSubSpriteData2Animation
  addr:
    U: 0xFD44
    E: 0xFDF8
    J: 0xFD44
  size: 0x38
  mode: thumb
  params: null
  return:
    label: AnimationEnded
    type: bool
    notes: Animation ended
  notes: Checks if the sprite animation of the sub sprite data 2 has ended
-
  label: CheckEndOfSubSpriteAnimation_Ptr
  addr:
    U: 0xFD7C
    E: 0xFE30
    J: 0xFD7C
  size: 0x30
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return:
    label: AnimationEnded
    type: bool
    notes: Animation ended
  notes: Checks if the sprite animation of the sub sprite data in r0 has ended
-
  label: CheckNearEndOfSubSpriteAnimation_Ptr
  addr:
    U: 0xFDAC
    E: 0xFE60
    J: 0xFDAC
  size: 0x34
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return:
    label: AnimationNearEnd
    type: bool
    notes: Animation near end
  notes: Checks if the sprite animation of the sub sprite data in r0 has nearly ended
-
  label: CheckSamusNearSprite_LeftRight
  addr:
    U: 0xFDE0
    E: 0xFE94
    J: 0xFDE0
  size: 0x68
  mode: thumb
  params:
  - label: YRange
    type: u16
    notes: Y range
  - label: XRange
    type: u16
    notes: X range
  return:
    label: 4IfLeftOfSprite8IfRightOfSprite0IfOutOfRange
    type: u8
    notes: 4 if left of sprite, 8 if right of sprite, 0 if out of range
  notes: Checks if samus is in range of the sprite on the left and right with r0 and r1
-
  label: CheckSamusNearSprite_AboveBelow
  addr:
    U: 0xFE48
    E: 0xFEFC
    J: 0xFE48
  size: 0x68
  mode: thumb
  params:
  - label: YRange
    type: u16
    notes: Y range
  - label: XRange
    type: u16
    notes: X range
  return:
    label: 1IfAboveSprite2IfBelowSprite0IfOutOfRange
    type: u8
    notes: 1 if above sprite, 2 if below sprite, 0 if out of range
  notes: Checks if samus is in range of the sprite above and below with r0 and r1
-
  label: CheckSamusNearSprite_FrontBehindX
  addr:
    U: 0xFEB0
    E: 0xFF64
    J: 0xFEB0
  size: 0xB0
  mode: thumb
  params:
  - label: YRange
    type: u16
    notes: Y range
  - label: XRangeFront
    type: u16
    notes: X range (front)
  - label: XRangeBehind
    type: u16
    notes: X range (behind)
  return:
    label: 3IfInRangeInFront0xcIfInRangeBehind0IfOutOfRange
    type: u8
    notes: 3 if in range in front, 0xC if in range behind, 0 if out of range
  notes: Checks if samus is in range of the sprite front and behind with r0, r1 and r2
-
  label: SamusStandingOnSprite
  addr:
    U: 0xFF60
    E: 0x10014
    J: 0xFF60
  size: 0x88
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return: null
  notes: Handles samus standing on a sprite
-
  label: UpdateSpriteFreezeTimer
  addr:
    U: 0xFFE8
    E: 0x1009C
    J: 0xFFE8
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Updates the current sprite freeze timer
-
  label: SpriteUnfreezeAnimation_EasyMode
  addr:
    U: 0x1004C
    E: 0x10100
    J: 0x1004C
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Unfreeze animation for metroids on easy mode and for winged ripper on any difficulty
-
  label: MetroidUnfreezeAnimation
  addr:
    U: 0x100A4
    E: 0x10158
    J: 0x100A4
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Unfreeze animation for metroids on normal and hard difficulty
-
  label: UpdateSecondarySpriteFreezeTimer
  addr:
    U: 0x100FC
    E: 0x101B0
    J: 0x100FC
  size: 0x9C
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: SecondarySpriteID
    notes: Sprite ID
  - label: PrimaryRamSlot
    type: u8
    notes: Primary RAM slot
  return: null
  notes: Updates the freeze timer of the secondary sprites with r0 and r1
-
  label: UpdatePrimarySpriteFreezeTimer
  addr:
    U: 0x10198
    E: 0x1024C
    J: 0x10198
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Updates the freeze timer of the primary sprite of the current sprite
-
  label: UnfreezeSecondarySprites
  addr:
    U: 0x101F4
    E: 0x102A8
    J: 0x101F4
  size: 0x68
  mode: thumb
  params: null
  return: null
  notes: Unfreeze secondary sprites (unused?)
-
  label: RefillEnergy
  addr:
    U: 0x1025C
    E: 0x10310
    J: 0x1025C
  size: 0x44
  mode: thumb
  params: null
  return:
    label: EnergyNotFullAtStart
    type: bool
    notes: Energy not full at start
  notes: Refills the energy of samus
-
  label: RefillMissiles
  addr:
    U: 0x102A0
    E: 0x10354
    J: 0x102A0
  size: 0x44
  mode: thumb
  params: null
  return:
    label: MissilesNotFullAtStart
    type: bool
    notes: Missiles not full at start
  notes: Refills the missiles of samus
-
  label: RefillSuperMissiles
  addr:
    U: 0x102E4
    E: 0x10398
    J: 0x102E4
  size: 0x44
  mode: thumb
  params: null
  return:
    label: SuperMissilesNotFullAtStart
    type: bool
    notes: Super missiles not full at start
  notes: Refill super missiles
-
  label: RefillPowerBombs
  addr:
    U: 0x10328
    E: 0x103DC
    J: 0x10328
  size: 0x44
  mode: thumb
  params: null
  return:
    label: PowerBombsNotFullAtStart
    type: bool
    notes: Power bombs not full at start
  notes: Refills the power bombs of samus
-
  label: CheckCrouchingOrMorphed
  addr:
    U: 0x1036C
    E: 0x10420
    J: 0x1036C
  size: 0x110
  mode: thumb
  params: null
  return:
    label: CrouchingOrMorphed
    type: bool
    notes: Crouching or morphed
  notes: Checks if samus is crouching or morphing
-
  label: CheckCrouchingOrCrawling
  addr:
    U: 0x1047C
    E: 0x10530
    J: 0x1047C
  size: 0x2C
  mode: thumb
  params: null
  return:
    label: CrouchingOrCrawling
    type: bool
    notes: Crouching or crawling
  notes: Checks if samus is crouching or crawling
-
  label: CheckMorphed
  addr:
    U: 0x104A8
    E: 0x1055C
    J: 0x104A8
  size: 0x24
  mode: thumb
  params: null
  return:
    label: Morphed
    type: bool
  notes: Checks if samus is morphed
-
  label: CheckSamusPosePausesSprites
  addr:
    U: 0x104CC
    E: 0x10580
    J: 0x104CC
  size: 0x2C
  mode: thumb
  params: null
  return:
    label: Paused
    type: bool
  notes: Checks if samus has a pose that stops the sprite activity
-
  label: SpriteTakeDamageFromSamusContact
  addr:
    U: 0x104F8
    E: 0x105AC
    J: 0x104F8
  size: 0x1B0
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: SamusDataPtr
    type: SamusData *
    notes: Samus data pointer
  return:
    label: DamageContactType0None1Shinespark2Speedbooster3ScrewAttack4PseudoScrew
    type: u8
    notes: Damage contact type (0 = none, 1 = shinespark, 2 = speedbooster, 3 = screw attack, 4 = pseudo screw)
  notes: Determines if a sprite should take damage when entering in collision with  samus and applies said damage
-
  label: CheckPullingSelfUp
  addr:
    U: 0x106A8
    E: 0x1075C
    J: 0x106A8
  size: 0x20
  mode: thumb
  params: null
  return:
    label: PullingSelfUp
    type: bool
    notes: Pulling self up
  notes: Checks if samus is pulling herself up
-
  label: CheckOnZipline
  addr:
    U: 0x106C8
    E: 0x1077C
    J: 0x106C8
  size: 0x20
  mode: thumb
  params: null
  return:
    label: OnAZipline
    type: bool
    notes: On a zipline
  notes: Checks if samus is on a zipline
-
  label: CountPrimarySprites
  addr:
    U: 0x106E8
    E: 0x1079C
    J: 0x106E8
  size: 0x50
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
    notes: Sprite ID
  return:
    label: PrimarySpriteCount
    type: u8
    notes: Primary sprite count
  notes: Counts the number of primary sprites with r0
-
  label: CountSecondarySpritesWithCurrPrimarySlot
  addr:
    U: 0x10738
    E: 0x107EC
    J: 0x10738
  size: 0x60
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: SecondarySpriteID
    notes: Sprite ID
  return:
    label: SecondarySpriteCount
    type: u8
    notes: Secondary sprite count
  notes: Counts the number of secondary sprites with r0 and the current sprite RAM slot
-
  label: CountPrimarySpritesWithCurrPrimarySlot
  addr:
    U: 0x10798
    E: 0x1084C
    J: 0x10798
  size: 0x60
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
    notes: Sprite ID
  return:
    label: PrimarySpriteCount
    type: u8
    notes: Primary sprite count
  notes: Counts the number of primary sprites with r0 and the current sprite RAM slot
-
  label: FindPrimarySprite
  addr:
    U: 0x107F8
    E: 0x108AC
    J: 0x107F8
  size: 0x58
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: PrimarySpriteID
    notes: Sprite ID
  return:
    label: SpriteRamSlot0xffOtherwise
    type: u8
    notes: Sprite RAM slot, 0xFF otherwise
  notes: Finds the first primary sprite with r0
-
  label: FindSecondarySpriteWithPartNumber
  addr:
    U: 0x10850
    E: 0x10904
    J: 0x10850
  size: 0x60
  mode: thumb
  params:
  - label: SpriteId
    type: u8
    enum: SecondarySpriteID
    notes: Sprite ID
  - label: PartNum
    type: u8
    notes: Part number
  return:
    label: SpriteRamSlot0xffOtherwise
    type: u8
    notes: Sprite RAM slot, 0xFF otherwise
  notes: Finds the first secondary sprite with r0 and r1
-
  label: CheckCurrEnemyHasDrop
  addr:
    U: 0x108B0
    E: 0x10964
    J: 0x108B0
  size: 0x50
  mode: thumb
  params: null
  return:
    label: CurrEnemyHasDrop
    type: bool
    notes: Current enemy has drop
  notes: Checks if the current sprite has a drop
-
  label: CountEnemyDrops
  addr:
    U: 0x10900
    E: 0x109B4
    J: 0x10900
  size: 0x44
  mode: thumb
  params: null
  return:
    label: EnemyDropCount
    type: u8
    notes: Enemy drop count
  notes: Counts the number of drops the current enemy has
-
  label: MoveMechaRidleyMissile
  addr:
    U: 0x10944
    E: 0x109F8
    J: 0x10944
  size: 0x254
  mode: thumb
  params:
  - label: SamusYPosition
    type: u16
    notes: Samus Y position
  - label: SamusXPosition
    type: u16
    notes: Samus X position
  - label: MissileYSpeed
    type: u8
    notes: Missile Y speed
  - label: MissileXSpeed
    type: u8
    notes: Missile X speed
  - label: SpeedDivisor
    type: u8
    notes: Speed divisor
  return: null
  notes: Handles a mecha ridley missile moving
-
  label: RidleyFireballMove
  addr:
    U: 0x10B98
    E: 0x10C4C
    J: 0x10B98
  size: 0x158
  mode: thumb
  params:
  - label: SamusYPosition
    type: u16
    notes: Samus Y position
  - label: SamusXPosition
    type: u16
    notes: Samus X position
  - label: YSpeed
    type: u8
    notes: Y speed
  - label: XSpeed
    type: u8
    notes: X speed
  - label: SpeedDivisor
    type: u8
    notes: Speed divisor
  return: null
  notes: Handles a ridley fireball moving
-
  label: UpdateSpriteStunTimer
  addr:
    U: 0x10CF0
    E: 0x10DA4
    J: 0x10CF0
  size: 0x78
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return: null
  notes: Updates the invicibilty stun flash timer of the sprite in r0
-
  label: RandomSpriteDebris
  addr:
    U: 0x10D68
    E: 0x10E1C
    J: 0x10D68
  size: 0x128
  mode: thumb
  params:
  - label: CloudType
    type: u8
    enum: DebrisCloudType
    notes: Cloud type
  - label: NumOfDebris
    type: u8
    notes: Number of debris
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return: null
  notes: Initialize 1 to 3 sprite debris between a set of 2  choosed randomly (only the debris type changes)
-
  label: GetAmmoDropSpriteID
  addr:
    U: 0x10E90
    E: 0x10F44
    J: 0x10E90
  size: 0x5C
  mode: thumb
  params:
  - label: RandomNum
    type: u8
    notes: Random number
  return:
    label: AmmoDropSpriteId0Otherwise
    type: u8
    enum: PrimarySpriteID
    notes: Ammo drop sprite ID, 0 otherwise
  notes: Gets the ammo sprite ID
-
  label: DetermineEnemyDropSpriteID
  addr:
    U: 0x10EEC
    E: 0x10FA0
    J: 0x10EEC
  size: 0x198
  mode: thumb
  params: null
  return:
    label: EnemyDropSpriteId0Otherwise
    type: u8
    enum: PrimarySpriteID
    notes: Enemy drop sprite ID, 0 otherwise
  notes: Determines the enemy drop
-
  label: SpriteDeath
  addr:
    U: 0x11084
    E: 0x11138
    J: 0x11084
  size: 0x1FC
  mode: thumb
  params:
  - label: DeathType0Normal1Respawning2AlreadyHasDrop
    type: u8
    notes: Death type (0 = normal, 1 = respawning, 2 = already has drop)
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: PlaySoundFlag
    type: bool
    notes: Play sound flag
  - label: ParticleEffect
    type: u8
    enum: ParticleEffect
    notes: Particle effect
  return: null
  notes: Called when a sprite dies, spawn a drop, calls RandomSpriteDebris, SetParticleEffect and calls SpawnDrop if r0 = 1
-
  label: IsSpriteStunned
  addr:
    U: 0x11280
    E: 0x11334
    J: 0x11280
  size: 0x48
  mode: thumb
  params: null
  return:
    label: SpriteIsStunned
    type: bool
    notes: Sprite is stunned
  notes: Checks if a sprite is stunned
-
  label: IsSpriteOnScreenAndShaking
  addr:
    U: 0x112C8
    E: 0x1137C
    J: 0x112C8
  size: 0x38
  mode: thumb
  params: null
  return:
    label: SpriteOnScreenAndScreenShakeIsActive
    type: bool
    notes: Sprite on-screen and screen shake is active
  notes: Checks if a sprite is on screen and a screen shake is active (used in sova, zoomer and zeela AI)
-
  label: UpdateSubSprite1Animation
  addr:
    U: 0x11330
    E: 0x113E4
    J: 0x11330
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Updates the animation duration counter and the current animation frame of the sub sprite data 1
-
  label: SyncCurrSpritePositionWithSubSprite1Position
  addr:
    U: 0x1136C
    E: 0x11420
    J: 0x1136C
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Synchronizes the position of the current sprite with the position of the sub sprite data 1
-
  label: SyncCurrSpritePositionWithSubSprite1OAM
  addr:
    U: 0x113B0
    E: 0x11464
    J: 0x113B0
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Syncronises the current sprite position with the sub sprite data 1 and the X/Y coordinates of its OAM data
-
  label: UpdateSubSprite2Animation
  addr:
    U: 0x11410
    E: 0x114C4
    J: 0x11410
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Updates the animation duration counter and the current animation frame of the sub sprite data 2
-
  label: SyncCurrSpritePositionWithSubSprite2OAM
  addr:
    U: 0x1144C
    E: 0x11500
    J: 0x1144C
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Syncronises the current sprite position with the sub sprite data 2 and the X/Y coordinates of its OAM data
-
  label: UpdateSubSpriteAnimation
  addr:
    U: 0x114AC
    E: 0x11560
    J: 0x114AC
  size: 0x38
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Updates the animation duration counter and the current animation frame of the sub sprite data in r0
-
  label: SyncCurrSpritePositionWithSubSpriteOAM
  addr:
    U: 0x114E4
    E: 0x11598
    J: 0x114E4
  size: 0x3C
  mode: thumb
  params:
  - label: SubSpriteDataPtr
    type: SubSpriteData *
    notes: Sub-sprite data pointer
  return: null
  notes: Synchronizes the position of the current sprite with the position of the sub sprite data in r0
-
  label: SpriteCheckOverlappingSamus
  addr:
    U: 0x1157C
    E: 0x11630
    J: 0x1157C
  size: 0xA4
  mode: thumb
  params: null
  return:
    label: Overlapping
    type: bool
  notes: Calls CheckObjectsTouching to detect collision between the current sprite and samus' draw distance offsets
-
  label: SetSpriteSplashEffect
  addr:
    U: 0x11620
    E: 0x116D4
    J: 0x11620
  size: 0xAC
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: SplashSize0None1Small2Big3Huge
    type: u8
    notes: Splash size (0 = none, 1 = small, 2 = big, 3 = huge)
  return: null
  notes: Handles the splashing effect when a sprite goes in/out of a room effect
-
  label: CheckSpriteLeavingLiquid
  addr:
    U: 0x116CC
    E: 0x11780
    J: 0x116CC
  size: 0x4C
  mode: thumb
  params:
  - label: PrevYPosition
    type: u16
    notes: Previous Y position
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: SplashSize
    type: u8
    notes: Splash size
  return:
    label: LeavingLiquid
    type: bool
    notes: Leaving liquid
  notes: Checks if the current sprite is going out of the current room effect
-
  label: CheckSpriteEnteringLiquid
  addr:
    U: 0x11718
    E: 0x117CC
    J: 0x11718
  size: 0x44
  mode: thumb
  params:
  - label: PrevYPosition
    type: u16
    notes: Previous Y position
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: SplashSize
    type: u8
    notes: Splash size
  return:
    label: EnteringLiquid
    type: bool
    notes: Entering liquid
  notes: Checks if the current sprite is going in the current room effect
-
  label: GetNumOfItemsCollected
  addr:
    U: 0x1175C
    E: 0x11810
    J: 0x1175C
  size: 0x2C
  mode: thumb
  params: null
  return:
    label: NumOfItemsCollected
    type: u32
    notes: Number of items collected
  notes: Gets the current completion percentage
-
  label: SetDebrisSplashEffect
  addr:
    U: 0x11788
    E: 0x1183C
    J: 0x11788
  size: 0x2C
  mode: thumb
  params:
  - label: PrevYPosition
    type: u16
    notes: Previous Y position
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return: null
  notes: Handles the splashing effect when a debris goes in a room effect
-
  label: ProcessSpriteDebris
  addr:
    U: 0x117B4
    E: 0x11868
    J: 0x117B4
  size: 0x4D4
  mode: thumb
  params:
  - label: DebrisDataPtr
    type: SpriteDebris *
    notes: Debris data pointer
  return: null
  notes: Processes the sprite debris in r0
-
  label: UpdateAllSpriteDebris
  addr:
    U: 0x11C88
    E: 0x11D3C
    J: 0x11C88
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Loops on all sprite debris and calls ProcessSpriteDebris also updates the animation related info
-
  label: DrawSpriteDebris
  addr:
    U: 0x11CF4
    E: 0x11DA8
    J: 0x11CF4
  size: 0x110
  mode: thumb
  params:
  - label: SpriteDebrisPtr
    type: SpriteDebris *
    notes: Sprite debris pointer
  return: null
  notes: Draws the sprite debris in r0
-
  label: DrawAllSpriteDebris
  addr:
    U: 0x11E04
    E: 0x11EB8
    J: 0x11E04
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Loops on all sprite debris and calls DrawSpriteDebris
-
  label: InitSpriteDebris
  addr:
    U: 0x11E48
    E: 0x11EFC
    J: 0x11E48
  size: 0x90
  mode: thumb
  params:
  - label: CloudType
    type: u8
    notes: Cloud type
  - label: DebrisType
    type: u8
    enum: SpriteDebrisType
    notes: Debris type
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return: null
  notes: Initializes a sprite debris
-
  label: GetBrinstarLocationTextNum
  addr:
    U: 0x11ED8
    E: 0x11F8C
    J: 0x11ED8
  size: 0xB8
  mode: thumb
  params: null
  return:
    label: LocationTextNum0xffOtherwise
    type: u8
    notes: Location text number, 0xFF otherwise
  notes: Gets the location text of the current room in brinstar
-
  label: GetKraidLocationTextNum
  addr:
    U: 0x11F90
    E: 0x12044
    J: 0x11F90
  size: 0xD0
  mode: thumb
  params: null
  return:
    label: LocationTextNum0xffOtherwise
    type: u8
    notes: Location text number, 0xFF otherwise
  notes: Gets the location text of the current room in kraid
-
  label: GetCrateriaLocationTextNum
  addr:
    U: 0x12060
    E: 0x12114
    J: 0x12060
  size: 0x7C
  mode: thumb
  params: null
  return:
    label: LocationTextNum0xffOtherwise
    type: u8
    notes: Location text number, 0xFF otherwise
  notes: Gets the location text of the current room in crateria
-
  label: GetNorfairLocationTextNum
  addr:
    U: 0x120DC
    E: 0x12190
    J: 0x120DC
  size: 0xE8
  mode: thumb
  params: null
  return:
    label: LocationTextNum0xffOtherwise
    type: u8
    notes: Location text number, 0xFF otherwise
  notes: Gets the location text of the current room in norfair
-
  label: GetRidleyLocationTextNum
  addr:
    U: 0x121C4
    E: 0x12278
    J: 0x121C4
  size: 0x98
  mode: thumb
  params: null
  return:
    label: LocationTextNum0xffOtherwise
    type: u8
    notes: Location text number, 0xFF otherwise
  notes: Gets the location text of the current room in ridley
-
  label: GetChozodiaLocationTextNum
  addr:
    U: 0x1225C
    E: 0x12310
    J: 0x1225C
  size: 0x1A8
  mode: thumb
  params: null
  return:
    label: LocationTextNum0xffOtherwise
    type: u8
    notes: Location text number, 0xFF otherwise
  notes: Gets the location text of the current room in chozodia
-
  label: GetTourianLocationTextNum
  addr:
    U: 0x12404
    E: 0x124B8
    J: 0x12404
  size: 0x80
  mode: thumb
  params: null
  return:
    label: LocationTextNum0xffOtherwise
    type: u8
    notes: Location text number, 0xFF otherwise
  notes: Gets the location text of the current room in tourian
-
  label: LoadAreaBannerGfx
  addr:
    U: 0x12484
    E: 0x12538
    J: 0x12484
  size: 0x58
  mode: thumb
  params: null
  return:
    label: GfxSlot
    type: u8
    notes: Graphics slot
  notes: Loads area banner graphics and palette
-
  label: GetLocationTextGfxSlot
  addr:
    U: 0x124DC
    E: 0x12590
    J: 0x124DC
  size: 0x10C
  mode: thumb
  params: null
  return:
    label: GfxSlot
    type: u8
    notes: Graphics slot
  notes: Gets the current area location text number and returns the GFX slot for it
-
  label: SetBeamParticleEffect
  addr:
    U: 0x4ED08
    E: 0x4EDD4
    J: 0x4ED08
  size: 0x8C
  mode: thumb
  params: null
  return: null
  notes: Sets a particle effect at the arm cannon depending on the direction
-
  label: CheckNumOfProjectiles
  addr:
    U: 0x4ED94
    E: 0x4EE60
    J: 0x4ED94
  size: 0x50
  mode: thumb
  params:
  - label: ProjectileType
    type: u8
    enum: ProjectileType
    notes: Projectile type
  - label: ProjectileLimit
    type: u8
    notes: Projectile limit
  return:
    label: WithinLimit
    type: bool
    notes: Within limit
  notes: Checks if the numbers of currently loaded projectiles of type r0 is above/below r1
-
  label: InitProjectile
  addr:
    U: 0x4EDE4
    E: 0x4EEB0
    J: 0x4EDE4
  size: 0xA4
  mode: thumb
  params:
  - label: ProjectileType
    type: u8
    enum: ProjectileType
    notes: Projectile type
  - label: ProjectileYPosition
    type: u16
    notes: Projectile Y position
  - label: ProjectileXPosition
    type: u16
    notes: Projectile X position
  return:
    label: Initialized
    type: bool
  notes: Initialize a projectile with r0, r1 and r2
-
  label: UpdateArmCannonAndWeapons
  addr:
    U: 0x4EE88
    E: 0x4EF54
    J: 0x4EE88
  size: 0x47C
  mode: thumb
  params: null
  return: null
  notes: Updates the projectiles and spawns the projectile in samus weapon info.new projectile
-
  label: AdvanceProjectileAnimation
  addr:
    U: 0x4F304
    E: 0x4F3D0
    J: 0x4F304
  size: 0x38
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Updates the animation of the projectile in r0
-
  label: CallDrawProjectile8BitFalse
  addr:
    U: 0x4F33C
    E: 0x4F408
    J: 0x4F33C
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Loops through all the projectiles and calls DrawProjectile if the 80 status flag isn't set
-
  label: CallDrawProjectile8BitTrue
  addr:
    U: 0x4F380
    E: 0x4F44C
    J: 0x4F380
  size: 0x44
  mode: thumb
  params: null
  return: null
  notes: Loops through all the projectiles and calls DrawProjectile if the 80 status flag is set
-
  label: DrawProjectile
  addr:
    U: 0x4F3C4
    E: 0x4F490
    J: 0x4F3C4
  size: 0x1B4
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Draws the projectile in r0
-
  label: CheckDespawnProjectile
  addr:
    U: 0x4F578
    E: 0x4F644
    J: 0x4F578
  size: 0xF8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Checks if the projectile in r0 should despawn
-
  label: LoadBeamGfx
  addr:
    U: 0x4F670
    E: 0x4F73C
    J: 0x4F670
  size: 0x2B0
  mode: thumb
  params: null
  return: null
  notes: Loads the graphics for a beam
-
  label: LoadBeamGfxAndClearProjectiles
  addr:
    U: 0x4F920
    E: 0x4F9EC
    J: 0x4F920
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Calls LoadBeamGraphics and clears all projectiles if the pause screen flag is 0
-
  label: MoveProjectile
  addr:
    U: 0x4F954
    E: 0x4FA20
    J: 0x4F954
  size: 0xC4
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  - label: Distance
    type: u8
  return: null
  notes: Moves the projectile in r0
-
  label: ProjectileCheckHittingSolid
  addr:
    U: 0x4FA18
    E: 0x4FAE4
    J: 0x4FA18
  size: 0x24
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return:
    label: HittingSolidClipdata
    type: bool
    notes: Hitting solid clipdata
  notes: Checks if a projectile is colliding with a solid clipdata
-
  label: ProjectileCheckCenterCollisionAtPosition
  addr:
    U: 0x4FA3C
    E: 0x4FB08
    J: 0x4FA3C
  size: 0x1FC
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: void *
    notes: Projectile data pointer
  return:
    label: CollisionCheck
    type: u8
    enum: CollisionCheck
    notes: Collision check
  notes: Checks the vertical collision for a projectile
-
  label: HandleProjectileTrail
  addr:
    U: 0x4FC38
    E: 0x4FD04
    J: 0x4FC38
  size: 0xA8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  - label: ParticleEffect
    type: u8
    enum: ParticleEffect
    notes: Particle effect
  - label: FrequencyAndedWithFrameCounter
    type: u32
    notes: Frequency (ANDed with frame counter)
  return: null
  notes: Sets a projectile trail with r0 and r1 with a delay of r2
-
  label: MoveTumblingMissile
  addr:
    U: 0x4FCE0
    E: 0x4FDAC
    J: 0x4FCE0
  size: 0x68
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Handles a missile/super missile tumbling
-
  label: GetSpriteWeakness
  addr:
    U: 0x50370
    E: 0x5043C
    J: 0x50370
  size: 0x30
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return:
    label: SpriteWeakness
    type: u8
    enum: SpriteWeakness
    notes: Sprite weakness
  notes: Gets the weakness of the sprite in r0
-
  label: IceBeamDealDamage
  addr:
    U: 0x503A0
    E: 0x5046C
    J: 0x503A0
  size: 0x84
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: Damage
    type: u16
  return:
    label: SpriteFreezeTimerF0IfAlive0IfDead
    type: u8
    notes: Sprite freeze timer (F0 if alive, 0 if dead)
  notes: Handles the ice beam dealing damage to a sprite
-
  label: ProjectileDealDamage
  addr:
    U: 0x50424
    E: 0x504F0
    J: 0x50424
  size: 0x88
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: Damage
    type: u16
  return:
    label: SpriteIsDead
    type: bool
    notes: Sprite is dead
  notes: Handles a projectile dealing damage to a sprite
-
  label: ProjectileHitImmuneSprite
  addr:
    U: 0x504AC
    E: 0x50578
    J: 0x504AC
  size: 0x20
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return:
    label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  notes: Handles a projectile hitting a sprite immune to projectiles
-
  label: ProjectileHitSolidSprite
  addr:
    U: 0x504CC
    E: 0x50598
    J: 0x504CC
  size: 0x20
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return:
    label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  notes: Handles a projectile hitting a solid sprite
-
  label: PowerBombDealDamage
  addr:
    U: 0x504EC
    E: 0x505B8
    J: 0x504EC
  size: 0xC0
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return: null
  notes: Handles a power bomb dealing damage to a sprite
-
  label: ProjectileHitSprite
  addr:
    U: 0x505AC
    E: 0x50678
    J: 0x505AC
  size: 0xA8
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: ProjectileYPosition
    type: u16
    notes: Projectile Y position
  - label: ProjectileXPosition
    type: u16
    notes: Projectile X position
  - label: Damage
    type: u16
  - label: ParticleEffect
    type: u8
    enum: ParticleEffect
    notes: Particle effect
  return: null
  notes: Handles a projectile hitting a sprite
-
  label: ChargedBeamHitSprite
  addr:
    U: 0x50654
    E: 0x50720
    J: 0x50654
  size: 0xA8
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: ProjectileYPosition
    type: u16
    notes: Projectile Y position
  - label: ProjectileXPosition
    type: u16
    notes: Projectile X position
  - label: Damage
    type: u16
  - label: ParticleEffect
    type: u8
    enum: ParticleEffect
    notes: Particle effect
  return: null
  notes: Handles a charged beam (without ice) hitting a sprite
-
  label: FreezeSprite
  addr:
    U: 0x506FC
    E: 0x507C8
    J: 0x506FC
  size: 0x28
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: FreezeTimer
    type: u8
    notes: Freeze timer
  return: null
  notes: Freezes the sprite in r0
-
  label: IceBeamHitSprite
  addr:
    U: 0x50724
    E: 0x507F0
    J: 0x50724
  size: 0x104
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: ProjectileYPosition
    type: u16
    notes: Projectile Y position
  - label: ProjectileXPosition
    type: u16
    notes: Projectile X position
  - label: Damage
    type: u16
  - label: ParticleEffect
    type: u8
    enum: ParticleEffect
    notes: Particle effect
  return: null
  notes: Handles a beam with ice (not charged) hitting a sprite
-
  label: ChargedIceBeamHitSprite
  addr:
    U: 0x50828
    E: 0x508F4
    J: 0x50828
  size: 0xEC
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: ProjectileYPosition
    type: u16
    notes: Projectile Y position
  - label: ProjectileXPosition
    type: u16
    notes: Projectile X position
  - label: Damage
    type: u16
  - label: ParticleEffect
    type: u8
    enum: ParticleEffect
    notes: Particle effect
  return: null
  notes: Handles a charged ice beam hitting a sprite
-
  label: StartMissileTumble
  addr:
    U: 0x50914
    E: 0x509E0
    J: 0x50914
  size: 0x60
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  - label: ProjectileType
    type: u8
    enum: ProjectileType
    notes: Projectile type
  return: null
  notes: Starts a tumbling missile
-
  label: StartMissileTumble_KraidHead
  addr:
    U: 0x50974
    E: 0x50A40
    J: 0x50974
  size: 0x68
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  - label: ProjectileType
    type: u8
    enum: ProjectileType
    notes: Projectile type
  return: null
  notes: Starts a tumbling missile using the current sprite
-
  label: MissileHitSprite
  addr:
    U: 0x509DC
    E: 0x50AA8
    J: 0x509DC
  size: 0xA0
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  - label: ProjectileYPosition
    type: u16
    notes: Projectile Y position
  - label: ProjectileXPosition
    type: u16
    notes: Projectile X position
  return: null
  notes: Handles a missile hitting a sprite
-
  label: SuperMissileHitSprite
  addr:
    U: 0x50A7C
    E: 0x50B48
    J: 0x50A7C
  size: 0x9C
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  - label: ProjectileYPosition
    type: u16
    notes: Projectile Y position
  - label: ProjectileXPosition
    type: u16
    notes: Projectile X position
  return: null
  notes: Handles a super missile hitting a sprite
-
  label: BombHitSprite
  addr:
    U: 0x50B18
    E: 0x50BE4
    J: 0x50B18
  size: 0x4C
  mode: thumb
  params:
  - label: SpriteDataPtr
    type: SpriteData *
    notes: Sprite data pointer
  return: null
  notes: Handles a bomb hitting a sprite
-
  label: ProcessNormalBeam
  addr:
    U: 0x50B64
    E: 0x50C30
    J: 0x50B64
  size: 0xF8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Normal beam subroutine
-
  label: ProcessLongBeam
  addr:
    U: 0x50C5C
    E: 0x50D28
    J: 0x50C5C
  size: 0xEC
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Long beam subroutine
-
  label: ProcessIceBeam
  addr:
    U: 0x50D48
    E: 0x50E14
    J: 0x50D48
  size: 0x124
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Ice beam subroutine
-
  label: HandleWaveBeamCollision
  addr:
    U: 0x50E6C
    E: 0x50F38
    J: 0x50E6C
  size: 0x1FC
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return:
    label: NumOfBlocksTouched03
    type: u8
    notes: Number of blocks touched (0-3)
  notes: Checks for wave beam collision
-
  label: ProcessWaveBeam
  addr:
    U: 0x51068
    E: 0x51134
    J: 0x51068
  size: 0x130
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Wave beam subroutine
-
  label: ProcessPlasmaBeam
  addr:
    U: 0x51198
    E: 0x51264
    J: 0x51198
  size: 0x1BC
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Plasma beam subroutine
-
  label: ProcessPistol
  addr:
    U: 0x51354
    E: 0x51420
    J: 0x51354
  size: 0xEC
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Pistol subroutine
-
  label: ProcessChargedNormalBeam
  addr:
    U: 0x51440
    E: 0x5150C
    J: 0x51440
  size: 0xF8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Charged normal beam subroutine
-
  label: ProcessChargedLongBeam
  addr:
    U: 0x51538
    E: 0x51604
    J: 0x51538
  size: 0xF8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Charged long beam subroutine
-
  label: ProcessChargedIceBeam
  addr:
    U: 0x51630
    E: 0x516FC
    J: 0x51630
  size: 0x134
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Charged ice beam subroutine
-
  label: ProcessChargedWaveBeam
  addr:
    U: 0x51764
    E: 0x51830
    J: 0x51764
  size: 0x13C
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Charged wave beam subroutine
-
  label: ProcessChargedPlasmaBeam
  addr:
    U: 0x518A0
    E: 0x5196C
    J: 0x518A0
  size: 0x1DC
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Charged plasma beam subroutine
-
  label: ProcessChargedPistol
  addr:
    U: 0x51A7C
    E: 0x51B48
    J: 0x51A7C
  size: 0xF8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Charged pistol subroutine
-
  label: DecrementMissileCounter
  addr:
    U: 0x51B74
    E: 0x51C40
    J: 0x51B74
  size: 0x38
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Decrements the missile counter
-
  label: ProcessMissile
  addr:
    U: 0x51BAC
    E: 0x51C78
    J: 0x51BAC
  size: 0x118
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Missile subroutine
-
  label: DecrementSuperMissileCounter
  addr:
    U: 0x51CC4
    E: 0x51D90
    J: 0x51CC4
  size: 0x38
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Decrements the super missile counter
-
  label: ProcessSuperMissile
  addr:
    U: 0x51CFC
    E: 0x51DC8
    J: 0x51CFC
  size: 0x118
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Super missile subroutine
-
  label: MorphBallLauncherLaunchSamus
  addr:
    U: 0x51E14
    E: 0x51EE0
    J: 0x51E14
  size: 0xB8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Checks if samus is in place and launchs it
-
  label: CheckSamusBombJump
  addr:
    U: 0x51ECC
    E: 0x51F98
    J: 0x51ECC
  size: 0x12C
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Checks if samus is colliding with a bomb, calls SamusBounceBomb
-
  label: ProcessBomb
  addr:
    U: 0x51FF8
    E: 0x520C4
    J: 0x51FF8
  size: 0x1F8
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Bomb subroutine
-
  label: ProcessProjectile_Empty
  addr:
    U: 0x521F0
    E: 0x522BC
    J: 0x521F0
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Empty function
-
  label: ProcessPowerBomb
  addr:
    U: 0x521F4
    E: 0x522C0
    J: 0x521F4
  size: 0x114
  mode: thumb
  params:
  - label: ProjectileDataPtr
    type: ProjectileData *
    notes: Projectile data pointer
  return: null
  notes: Power bomb subroutine
-
  label: DrawHudOam
  addr:
    U: 0x52308
    E: 0x523D4
    J: 0x52308
  size: 0x35C
  mode: thumb
  params: null
  return: null
  notes: Updates the OAM for the HUD
-
  label: DrawHudEnergyTanks
  addr:
    U: 0x52664
    E: 0x52730
    J: 0x52664
  size: 0x70
  mode: thumb
  params:
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: NormalGfxSourceAddress
    type: void *
    notes: Normal graphics source address
  - label: RefillGfxSourceAddress
    type: void *
    notes: Refill graphics source address
  - label: NumOfEnergyTanks
    type: u8
    notes: Number of energy tanks
  - label: RefillAnimationStage
    type: u8
    notes: Refill animation stage
  return: null
  notes: Updates the energy tank squares on the HUD
-
  label: DrawHudEnergy
  addr:
    U: 0x526D4
    E: 0x527A0
    J: 0x526D4
  size: 0x598
  mode: thumb
  params:
  - label: FileNum0InGame1FileA2FileB3FileC
    type: u8
    notes: File number (0 = in-game, 1 = file A, 2 = file B, 3 = file C)
  return: null
  notes: Draws the energy HUD
-
  label: DrawHudMissileDigits
  addr:
    U: 0x52C6C
    E: 0x52D38
    J: 0x52C6C
  size: 0x100
  mode: thumb
  params:
  - label: HundredsPlace
    type: u16
    notes: Hundreds place
  - label: TensPlace
    type: u16
    notes: Tens place
  - label: OnesPlace
    type: u16
    notes: Ones place
  - label: HighlightFlag
    type: u16
    notes: Highlight flag
  return: null
  notes: Draws the missiles digits on the HUD
-
  label: DrawHudSuperMissileDigits
  addr:
    U: 0x52D6C
    E: 0x52E38
    J: 0x52D6C
  size: 0xD8
  mode: thumb
  params:
  - label: TensPlace
    type: u16
    notes: Tens place
  - label: OnesPlace
    type: u16
    notes: Ones place
  - label: HighlightFlag
    type: u16
    notes: Highlight flag
  return: null
  notes: Draws the super missiles digits on the HUD
-
  label: DrawHudPowerBombDigits
  addr:
    U: 0x52E44
    E: 0x52F10
    J: 0x52E44
  size: 0xD8
  mode: thumb
  params:
  - label: TensPlace
    type: u16
    notes: Tens place
  - label: OnesPlace
    type: u16
    notes: Ones place
  - label: HighlightFlag
    type: u16
    notes: Highlight flag
  return: null
  notes: Draws the power bombs digits on the HUD
-
  label: DrawHudMissiles
  addr:
    U: 0x52F1C
    E: 0x52FE8
    J: 0x52F1C
  size: 0x220
  mode: thumb
  params:
  - label: UpdateHighlightFlag
    type: bool
    notes: Update highlight flag
  return: null
  notes: Draws the missile HUD
-
  label: DrawHudPowerBombs
  addr:
    U: 0x5313C
    E: 0x53208
    J: 0x5313C
  size: 0x1F8
  mode: thumb
  params:
  - label: UpdateHighlightFlag
    type: bool
    notes: Update highlight flag
  return: null
  notes: Draws the power bomb HUD
-
  label: DrawHudSuperMissiles
  addr:
    U: 0x53334
    E: 0x53400
    J: 0x53334
  size: 0x1F8
  mode: thumb
  params:
  - label: UpdateHighlightFlag
    type: bool
    notes: Update highlight flag
  return: null
  notes: Draws the super missile HUD
-
  label: DrawHudWeaponHighlight
  addr:
    U: 0x5352C
    E: 0x535F8
    J: 0x5352C
  size: 0x3BC
  mode: thumb
  params: null
  return: null
  notes: Draws the highlight of the weapons on the HUD
-
  label: DrawHudPistolBar
  addr:
    U: 0x538E8
    E: 0x539B4
    J: 0x538E8
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Draws the HUD in suitless
-
  label: DrawHud
  addr:
    U: 0x53930
    E: 0x539FC
    J: 0x53930
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Calls all the DrawHUD weapons functions, DrawHUDSuitless if in suitless and DrawHUDOAM
-
  label: CheckTimerDisplayed
  addr:
    U: 0x53968
    E: 0x53A34
    J: 0x53968
  size: 0x40
  mode: thumb
  params: null
  return:
    label: 1ForMotherBrain2ForMechaRidley0Otherwise
    type: u8
    notes: 1 for Mother Brain, 2 for Mecha Ridley, 0 otherwise
  notes: Checks which escape timer should be activated
-
  label: CheckTimerShouldStop
  addr:
    U: 0x539A8
    E: 0x53A74
    J: 0x539A8
  size: 0x38
  mode: thumb
  params: null
  return:
    label: TimerShouldStop
    type: bool
    notes: Timer should stop
  notes: Checks if samus has finished the escape
-
  label: UpdateEscapeTimerOam
  addr:
    U: 0x539E0
    E: 0x53AAC
    J: 0x539E0
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Updates the OAM of the escape timer
-
  label: StartTimedEscape
  addr:
    U: 0x53A48
    E: 0x53B14
    J: 0x53A48
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Starts an escape
-
  label: SetTimerDigits
  addr:
    U: 0x53AA8
    E: 0x53B74
    J: 0x53AA8
  size: 0xBC
  mode: thumb
  params: null
  return: null
  notes: Sets the timer depending on the escape and the difficulty
-
  label: UpdateEscapeTimer
  addr:
    U: 0x53B64
    E: 0x53C30
    J: 0x53B64
  size: 0x104
  mode: thumb
  params: null
  return: null
  notes: Updates the escape timer
-
  label: LoadCommonSpriteGfx
  addr:
    U: 0x53C68
    E: 0x53D34
    J: 0x53C68
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Loads the common sprites GFX (32BAC8)
-
  label: ResetRefillAnimations
  addr:
    U: 0x53C8C
    E: 0x53D58
    J: 0x53C8C
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Sets all the refill animations to 0
-
  label: ResetHudDigitsAnimation
  addr:
    U: 0x53CB0
    E: 0x53D7C
    J: 0x53CB0
  size: 0x120
  mode: thumb
  params: null
  return: null
  notes: Resets all the info related to the HUD and the particles if necessary
-
  label: CheckParticleEffectOnScreen
  addr:
    U: 0x53DD0
    E: 0x53E9C
    J: 0x53DD0
  size: 0x98
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Checks if the particle effect in r0 is on screen
-
  label: DrawParticleEffect
  addr:
    U: 0x53E68
    E: 0x53F34
    J: 0x53E68
  size: 0x170
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Draw the particle effect in r0
-
  label: ProcessParticleEffects
  addr:
    U: 0x53FD8
    E: 0x540A4
    J: 0x53FD8
  size: 0x114
  mode: thumb
  params: null
  return: null
  notes: Calls the subroutines and draws all the particle effects
-
  label: SetParticleEffect
  addr:
    U: 0x540EC
    E: 0x541B8
    J: 0x540EC
  size: 0xA0
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: EffectNum
    type: u8
    enum: ParticleEffect
    notes: Effect number
  return: null
  notes: Sets a new particle effect
-
  label: UpdateParticleEffectAnimation
  addr:
    U: 0x5418C
    E: 0x54258
    J: 0x5418C
  size: 0x50
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  - label: OamPtr
    type: void *
    notes: OAM pointer
  return:
    label: AnimationEnded
    type: bool
    notes: Animation ended
  notes: Updates the animation of the particle effect in r0
-
  label: SetCurrParticleEffectOamFramePtr
  addr:
    U: 0x541DC
    E: 0x542A8
    J: 0x541DC
  size: 0x14
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  - label: OamPtr
    type: void *
    notes: OAM pointer
  return: null
  notes: Sets the current particle effect OAM frame pointer
-
  label: ParticleSpriteSplashWaterSmall
  addr:
    U: 0x541F0
    E: 0x542BC
    J: 0x541F0
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash water small subroutine
-
  label: ParticleSpriteSplashWaterBig
  addr:
    U: 0x54234
    E: 0x54300
    J: 0x54234
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash water big subroutine
-
  label: ParticleSpriteSplashWaterHuge
  addr:
    U: 0x54278
    E: 0x54344
    J: 0x54278
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash water huge subroutine
-
  label: ParticleSpriteSplashLavaSmall
  addr:
    U: 0x542BC
    E: 0x54388
    J: 0x542BC
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash lava small subroutine
-
  label: ParticleSpriteSplashLavaBig
  addr:
    U: 0x54300
    E: 0x543CC
    J: 0x54300
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash lava big subroutine
-
  label: ParticleSpriteSplashLavaHuge
  addr:
    U: 0x54344
    E: 0x54410
    J: 0x54344
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash lava huge subroutine
-
  label: ParticleSpriteSplashAcidSmall
  addr:
    U: 0x54388
    E: 0x54454
    J: 0x54388
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash acid small subroutine
-
  label: ParticleSpriteSplashAcidBig
  addr:
    U: 0x543CC
    E: 0x54498
    J: 0x543CC
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash acid big subroutine
-
  label: ParticleParticleSpriteSplashAcidHuge
  addr:
    U: 0x54410
    E: 0x544DC
    J: 0x54410
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite splash acid huge subroutine
-
  label: ParticleShootingBeamLeft
  addr:
    U: 0x54454
    E: 0x54520
    J: 0x54454
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam left subroutine
-
  label: ParticleShootingBeamRight
  addr:
    U: 0x5448C
    E: 0x54558
    J: 0x5448C
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam right subroutine
-
  label: ParticleShootingBeamDiagonallyUpLeft
  addr:
    U: 0x544C4
    E: 0x54590
    J: 0x544C4
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam diagonally up left subroutine
-
  label: ParticleShootingBeamDiagonallyUpRight
  addr:
    U: 0x544FC
    E: 0x545C8
    J: 0x544FC
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam diagonally up right subroutine
-
  label: ParticleShootingBeamDiagonallyDownLeft
  addr:
    U: 0x54534
    E: 0x54600
    J: 0x54534
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam diagonally down left subroutine
-
  label: ParticleShootingBeamDiagonallyDownRight
  addr:
    U: 0x5456C
    E: 0x54638
    J: 0x5456C
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam diagonally down right subroutine
-
  label: ParticleShootingBeamUpLeft
  addr:
    U: 0x545A4
    E: 0x54670
    J: 0x545A4
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam up left subroutine
-
  label: ParticleShootingBeamUpRight
  addr:
    U: 0x545DC
    E: 0x546A8
    J: 0x545DC
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam up right subroutine
-
  label: ParticleShootingBeamDownLeft
  addr:
    U: 0x54614
    E: 0x546E0
    J: 0x54614
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam down left subroutine
-
  label: ParticleShootingBeamDownRight
  addr:
    U: 0x5464C
    E: 0x54718
    J: 0x5464C
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shooting beam down right subroutine
-
  label: ParticleBomb
  addr:
    U: 0x54684
    E: 0x54750
    J: 0x54684
  size: 0x44
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Bomb subroutine
-
  label: ParticleMissileTrail
  addr:
    U: 0x546C8
    E: 0x54794
    J: 0x546C8
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Missile trail subroutine
-
  label: ParticleSuperMissileTrail
  addr:
    U: 0x54700
    E: 0x547CC
    J: 0x54700
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Super missile trail subroutine
-
  label: ParticleBeamTrailingRight
  addr:
    U: 0x54738
    E: 0x54804
    J: 0x54738
  size: 0x48
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Beam trailing right subroutine
-
  label: ParticleBeamTrailingLeft
  addr:
    U: 0x54780
    E: 0x5484C
    J: 0x54780
  size: 0x48
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Beam trailing left subroutine
-
  label: ParticleChargedLongBeamTrail
  addr:
    U: 0x547C8
    E: 0x54894
    J: 0x547C8
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Charged long beam trail subroutine
-
  label: ParticleChargedIceBeamTrail
  addr:
    U: 0x547FC
    E: 0x548C8
    J: 0x547FC
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Charged ice beam trail subroutine
-
  label: ParticleChargedWaveBeamTrail
  addr:
    U: 0x54830
    E: 0x548FC
    J: 0x54830
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Charged wave beam trail subroutine
-
  label: ParticleChargedPlasmaBeamTrail
  addr:
    U: 0x54864
    E: 0x54930
    J: 0x54864
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Charged plasma beam trail subroutine
-
  label: ParticleChargedFullBeamTrail
  addr:
    U: 0x54898
    E: 0x54964
    J: 0x54898
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Charged full beam trail subroutine
-
  label: ParticleChargedPistolTrail
  addr:
    U: 0x548CC
    E: 0x54998
    J: 0x548CC
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Charged pistol trail subroutine
-
  label: ParticleSpriteExplosionHuge
  addr:
    U: 0x54900
    E: 0x549CC
    J: 0x54900
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite explosion huge subroutine
-
  label: ParticleSpriteExplosionSmall
  addr:
    U: 0x54938
    E: 0x54A04
    J: 0x54938
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite explosion small subroutine
-
  label: ParticleSpriteExplosionMedium
  addr:
    U: 0x54970
    E: 0x54A3C
    J: 0x54970
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite explosion medium subroutine
-
  label: ParticleSpriteExplosionBig
  addr:
    U: 0x549A8
    E: 0x54A74
    J: 0x549A8
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite explosion big subroutine
-
  label: ParticleSpriteExplosionSingleThenBig
  addr:
    U: 0x549E0
    E: 0x54AAC
    J: 0x549E0
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sprite explosion single then big subroutine
-
  label: ParticleScrewAttackDestroyed
  addr:
    U: 0x54A18
    E: 0x54AE4
    J: 0x54A18
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Screw attack destroyed subroutine
-
  label: ParticleShinesparkDestroyed
  addr:
    U: 0x54A50
    E: 0x54B1C
    J: 0x54A50
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Shinespark destroyed subroutine
-
  label: ParticleSudoScrewDestroyed
  addr:
    U: 0x54A88
    E: 0x54B54
    J: 0x54A88
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Sudo screw destroyed subroutine
-
  label: ParticleSpeedboosterDestroyed
  addr:
    U: 0x54AC0
    E: 0x54B8C
    J: 0x54AC0
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Speedbooster destroyed subroutine
-
  label: ParticleMainBossDeath
  addr:
    U: 0x54AF8
    E: 0x54BC4
    J: 0x54AF8
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Main boss death subroutine
-
  label: ParticleFreezingSpriteWithIce
  addr:
    U: 0x54B30
    E: 0x54BFC
    J: 0x54B30
  size: 0x40
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Freezing sprite with ice subroutine
-
  label: ParticleFreezingSpriteWithChargedIce
  addr:
    U: 0x54B70
    E: 0x54C3C
    J: 0x54B70
  size: 0x40
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Freezing sprite with charged ice subroutine
-
  label: ParticleHittingSomethingWithBaseBeam
  addr:
    U: 0x54BB0
    E: 0x54C7C
    J: 0x54BB0
  size: 0x3C
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with base beam or charged base beam subroutine
-
  label: ParticleHittingSomethingWithLongBeam
  addr:
    U: 0x54BEC
    E: 0x54CB8
    J: 0x54BEC
  size: 0x40
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with long beam or charged long beam subroutine
-
  label: ParticleHittingSomethingWithIceBeam
  addr:
    U: 0x54C2C
    E: 0x54CF8
    J: 0x54C2C
  size: 0x3C
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with ice beam subroutine
-
  label: ParticleHittingSomethingWithWaveBeam
  addr:
    U: 0x54C68
    E: 0x54D34
    J: 0x54C68
  size: 0x40
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with wave beam subroutine
-
  label: ParticleHittingSomethingWithFullBeamNoPlasma
  addr:
    U: 0x54CA8
    E: 0x54D74
    J: 0x54CA8
  size: 0x3C
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with full beam no plasma subroutine
-
  label: ParticleHittingSomethingWithPlasmaBeam
  addr:
    U: 0x54CE4
    E: 0x54DB0
    J: 0x54CE4
  size: 0x3C
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with plasma beam subroutine
-
  label: ParticleHittingSomethingWithFullBeam
  addr:
    U: 0x54D20
    E: 0x54DEC
    J: 0x54D20
  size: 0x3C
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with full beam subroutine
-
  label: ParticleHittingSomethingInvicible
  addr:
    U: 0x54D5C
    E: 0x54E28
    J: 0x54D5C
  size: 0x40
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something invicible subroutine
-
  label: ParticleHittingSomethingWithMissile
  addr:
    U: 0x54D9C
    E: 0x54E68
    J: 0x54D9C
  size: 0x40
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with missile subroutine
-
  label: ParticleHittingSomethingWithSuperMissile
  addr:
    U: 0x54DDC
    E: 0x54EA8
    J: 0x54DDC
  size: 0x50
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Hitting something with super missile subroutine
-
  label: ParticleSmallDust
  addr:
    U: 0x54E2C
    E: 0x54EF8
    J: 0x54E2C
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Small dust subroutine
-
  label: ParticleMediumDust
  addr:
    U: 0x54E60
    E: 0x54F2C
    J: 0x54E60
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Medium dust subroutine
-
  label: ParticleTwoMediumDust
  addr:
    U: 0x54E94
    E: 0x54F60
    J: 0x54E94
  size: 0x34
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Two medium dust subroutine
-
  label: ParticleSecondSmallDust
  addr:
    U: 0x54EC8
    E: 0x54F94
    J: 0x54EC8
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Second Small dust subroutine
-
  label: ParticleSecondMediumDust
  addr:
    U: 0x54F00
    E: 0x54FCC
    J: 0x54F00
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Second medium dust subroutine
-
  label: ParticleSecondTwoMediumDust
  addr:
    U: 0x54F38
    E: 0x55004
    J: 0x54F38
  size: 0x38
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle effect Second two medium dust subroutine
-
  label: PlayBeginToChargeBeamSound
  addr:
    U: 0x54F70
    E: 0x5503C
    J: 0x54F70
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Plays a sound depending on the beams activated when beginning to charge a beam
-
  label: PlayShootingChargedBeamSound
  addr:
    U: 0x54FF8
    E: 0x550C4
    J: 0x54FF8
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Plays a sound depending on the beams activated when shooting a charged beam
-
  label: PlayBeamFullyChargedSound
  addr:
    U: 0x55080
    E: 0x5514C
    J: 0x55080
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Plays a sound depending on the beams activated when charging a fully charged beam
-
  label: ParticleChargingBeam
  addr:
    U: 0x55108
    E: 0x551D4
    J: 0x55108
  size: 0x100
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle Charging beam subroutine
-
  label: ParticleEscape
  addr:
    U: 0x55208
    E: 0x552D4
    J: 0x55208
  size: 0xA8
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle Escape subroutine
-
  label: ParticleSamusReflection
  addr:
    U: 0x552B0
    E: 0x5537C
    J: 0x552B0
  size: 0x94
  mode: thumb
  params:
  - label: ParticleEffectPtr
    type: ParticleEffect *
    notes: Particle effect pointer
  return: null
  notes: Particle Samus relfection subroutine
-
  label: StartVerticalScreenShake
  addr:
    U: 0x55344
    E: 0x55410
    J: 0x55344
  size: 0x34
  mode: thumb
  params:
  - label: Duration
    type: u8
  - label: param_1
    type: u8
  return: null
  notes: Starts a vertical screen shake
-
  label: StartHorizontalScreenShake
  addr:
    U: 0x55378
    E: 0x55444
    J: 0x55378
  size: 0x34
  mode: thumb
  params:
  - label: Duration
    type: u8
  - label: param_1
    type: u8
  return:
    label: Timer
    type: u8
    notes: Timer?
  notes: Starts an horizontal screen shake
-
  label: StartHorizontalScreenShake_Unused
  addr:
    U: 0x553AC
    E: 0x55478
    J: 0x553AC
  size: 0x30
  mode: thumb
  params:
  - label: Duration
    type: u8
  return:
    label: Timer
    type: u8
  notes: Starts an horizontal screen shake, unused
-
  label: UpdateVerticalScreenShake
  addr:
    U: 0x553DC
    E: 0x554A8
    J: 0x553DC
  size: 0x68
  mode: thumb
  params: null
  return:
    label: YPositionOffset
    type: u8
    notes: Y position offset
  notes: Updates the vertical screen shake and returns the Y position offset for the backgrounds
-
  label: UpdateHorizontalScreenShake
  addr:
    U: 0x55444
    E: 0x55510
    J: 0x55444
  size: 0x68
  mode: thumb
  params: null
  return:
    label: XPositionOffset
    type: u8
    notes: X position offset
  notes: Updates the horizontal screen shake and returns the X position offset for the backgrounds
-
  label: SetTransparencyAndBGEffects
  addr:
    U: 0x554AC
    E: 0x55578
    J: 0x554AC
  size: 0x54C
  mode: thumb
  params: null
  return: null
  notes: Sets the room transparency and the backgrounds effects
-
  label: GetBGSizeFlag
  addr:
    U: 0x559F8
    E: 0x55AC4
    J: 0x559F8
  size: 0x2C
  mode: thumb
  params:
  - label: BGSize
    type: u8
    notes: Background size
  return:
    label: SizeFlag
    type: u8
    notes: Size flag
  notes: Returns the corresponding size flag for the BGCNT registers
-
  label: CheckRoomIsDark
  addr:
    U: 0x55A24
    E: 0x55AF0
    J: 0x55A24
  size: 0x1C
  mode: thumb
  params: null
  return:
    label: 0xffffIfRoomIsDark0Otherwise
    type: u16
    notes: 0xFFFF if room is dark, 0 otherwise
  notes: Checks if the background 0 is dark
-
  label: UpdateBLDCNT
  addr:
    U: 0x55A40
    E: 0x55B0C
    J: 0x55A40
  size: 0x9C
  mode: thumb
  params:
  - label: Action
    type: u8
  - label: BldcntValue
    type: u16
    notes: BLDCNT Value
  return: null
  notes: Updates the BLDCNT register value with r1 immediatly
-
  label: UpdateBLDALPHA
  addr:
    U: 0x55BD0
    E: 0x55C9C
    J: 0x55BD0
  size: 0x54
  mode: thumb
  params:
  - label: EvaCoefficient
    type: u8
    notes: EVA coefficient
  - label: EvbCoefficient
    type: u8
    notes: EVB coefficient
  - label: param_2
    type: u8
  - label: FadingRelated
    type: u8
    notes: Fading related
  return: null
  notes: Queries a BLDALPHA update
-
  label: ApplyNewTransparencyEffects
  addr:
    U: 0x55C24
    E: 0x55CF0
    J: 0x55C24
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Applies the new transparency effects (BLDALPHA and BLDCNT?)
-
  label: ApplyNewBLDALPHA
  addr:
    U: 0x55CDC
    E: 0x55DA8
    J: 0x55CDC
  size: 0xD8
  mode: thumb
  params:
  - label: BldalphaRelatedStructPtr
    type: void *
    notes: BLDALPHA related struct pointer?
  return: null
  notes: Applies the new BLDALPHA transparency values
-
  label: LoadRoom
  addr:
    U: 0x55F7C
    E: 0x56048
    J: 0x55F7C
  size: 0x26C
  mode: thumb
  params: null
  return: null
  notes: Loads the current room
-
  label: LoadTileset
  addr:
    U: 0x561E8
    E: 0x562B4
    J: 0x561E8
  size: 0x21C
  mode: thumb
  params: null
  return: null
  notes: Loads the current tileset
-
  label: LoadRoomEntry
  addr:
    U: 0x56404
    E: 0x564D0
    J: 0x56404
  size: 0x168
  mode: thumb
  params: null
  return: null
  notes: Loads the current room entry
-
  label: LoadRoomBackgrounds
  addr:
    U: 0x5656C
    E: 0x56638
    J: 0x5656C
  size: 0x158
  mode: thumb
  params: null
  return: null
  notes: Loads the current room backgrounds
-
  label: RemoveNeverReformBlocksTanks
  addr:
    U: 0x566C4
    E: 0x56790
    J: 0x566C4
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Calls RemoveNeverReformBlocks and RemoveCollectedTanks
-
  label: ResetRoomInfoOnTransition
  addr:
    U: 0x566D4
    E: 0x567A0
    J: 0x566D4
  size: 0x3F4
  mode: thumb
  params: null
  return: null
  notes: Resets all the room related info when a transition happens
-
  label: SetAutomaticBGMovement
  addr:
    U: 0x56AC8
    E: 0x56B94
    J: 0x56AC8
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Sets the BG0 and BG3 scrolling depending on the room effect/background 3 scrolling method
-
  label: RleDecompress
  addr:
    U: 0x56D18
    E: 0x56DE4
    J: 0x56D18
  size: 0x110
  mode: thumb
  params:
  - label: DataType0Tilemap1Bg
    type: u8
    notes: Data type (0 = tilemap, 1 = BG)
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: DestinationAddress
    type: void *
    notes: Destination address
  return:
    label: Always0MaybeAnErrorFlag
    type: bool
    notes: Always 0 (maybe an error flag?)
  notes: RLE Decompression algorithm
-
  label: UpdateRoomInfo
  addr:
    U: 0x56FD0
    E: 0x57098
    J: 0x56FD0
  size: 0xDC
  mode: thumb
  params: null
  return: null
  notes: Calls different functions related to updating room info
-
  label: UpdateBGPositions
  addr:
    U: 0x570AC
    E: 0x57174
    J: 0x570AC
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Updates the positions of all the backgrounds, checks for position offsets of screenshakes
-
  label: CheckDMA3Ended
  addr:
    U: 0x5743C
    E: 0x57504
    J: 0x5743C
  size: 0x20
  mode: thumb
  params: null
  return: null
  notes: Checks if the DMA operation on the third channel has ended (probably unused)
-
  label: ProcessPowerBombExplosion
  addr:
    U: 0x5745C
    E: 0x57524
    J: 0x5745C
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Power bomb explosion subroutine
-
  label: PowerBombExplosion
  addr:
    U: 0x574A4
    E: 0x5756C
    J: 0x574A4
  size: 0x248
  mode: thumb
  params: null
  return: null
  notes: Handles the power bomb explosion
-
  label: StartPowerBombExplosion
  addr:
    U: 0x576EC
    E: 0x577B4
    J: 0x576EC
  size: 0x48
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: param_2
    type: u8
  return: null
  notes: Starts a power bomb explosion at r0 and r1
-
  label: SetCurrentPowerBomb0x12To0
  addr:
    U: 0x57734
    E: 0x577FC
    J: 0x57734
  size: 0xC
  mode: thumb
  params: null
  return: null
  notes: Sets Current Power Bomb + 0x12 to 0
-
  label: PowerBombExplosionBegin
  addr:
    U: 0x57740
    E: 0x57808
    J: 0x57740
  size: 0x78
  mode: thumb
  params: null
  return: null
  notes: Called before the explosion begins, initialize default values
-
  label: PowerBombExplosionEnd
  addr:
    U: 0x577B8
    E: 0x57880
    J: 0x577B8
  size: 0x154
  mode: thumb
  params: null
  return: null
  notes: Called multiple times at the end of the explosion, does some works on the IO registers
-
  label: UpdateGadoraHatch
  addr:
    U: 0x5790C
    E: 0x579D4
    J: 0x5790C
  size: 0xAC
  mode: thumb
  params:
  - label: XPosition
    type: u16
    notes: X Position
  - label: YPosition
    type: u16
    notes: Y Position
  - label: Action0Close1Open
    type: u8
    notes: Action (0 = close, 1 = open)
  return: null
  notes: Activates/deactivates the hatch for the gadora
-
  label: UpdateInGameTimer
  addr:
    U: 0x579B8
    E: 0x57A80
    J: 0x579B8
  size: 0x6C
  mode: thumb
  params: null
  return: null
  notes: Updates the in game timer and sets the max in game time flag
-
  label: UpdateDISPCNT
  addr:
    U: 0x57BD8
    E: 0x57CA0
    J: 0x57BD8
  size: 0x74
  mode: thumb
  params:
  - label: Operation0Remove1Add
    type: u8
    notes: Operation (0 = remove, 1 = add)
  - label: Value
    type: u16
  return: null
  notes: Updates the DISPCNT register value with r1
-
  label: LoadExplodingRoomDuringZebesEscape
  addr:
    U: 0x57D04
    E: 0x57DCC
    J: 0x57D04
  size: 0xC8
  mode: thumb
  params:
  - label: AreaId
    type: u8
    enum: AreaID
    notes: Area ID
  - label: RoomId1
    type: u8
    notes: Room ID + 1
  - label: BGXPosition
    type: u16
    notes: Background X position
  - label: BGYPosition
    type: u16
    notes: Background Y position
  return: null
  notes: Loads a room for the tourian escape cutscene
-
  label: SetupClipdataCode
  addr:
    U: 0x57DCC
    E: 0x57E94
    J: 0x57DCC
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Copies to clipdata code to non gameplay RAM
-
  label: CheckHazardAtPosition
  addr:
    U: 0x58080
    E: 0x58148
    J: 0x58080
  size: 0x40
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return:
    label: HazardType
    type: u8
    enum: HazardType
    notes: Hazard type
  notes: Checks for the current affecting clipdata at the position in r0 and r1
-
  label: CheckCurrentAffectingHazardAndVerySpecialClipdata
  addr:
    U: 0x580C0
    E: 0x58188
    J: 0x580C0
  size: 0xDC
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: BlockYPosition
    type: u16
    notes: Block Y position
  - label: BlockXPosition
    type: u16
    notes: Block X position
  - label: param_3
    type: u8
  return:
    label: HazardType
    type: u8
    enum: HazardType
    notes: Hazard type
  notes: Sets the current affecting hazard and returns it
-
  label: CheckCanUseElevator
  addr:
    U: 0x5819C
    E: 0x58264
    J: 0x5819C
  size: 0xC4
  mode: thumb
  params: null
  return:
    label: CannotBeUsed
    type: bool
    notes: Cannot be used
  notes: Checks if samus can use the elevator
-
  label: CheckGroundTypeUnderSamus
  addr:
    U: 0x58260
    E: 0x58328
    J: 0x58260
  size: 0x64
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return:
    label: GroundType
    type: u8
    enum: GroundTypeUnderSamus
    notes: Ground type
  notes: Checks for a ground effect clipdata
-
  label: ProcessScrolls
  addr:
    U: 0x582C4
    E: 0x5838C
    J: 0x582C4
  size: 0x64
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return: null
  notes: Processes the 2 current scrolls if within, calls UpdateCurrentScrolls and ScrollScreen
-
  label: ScrollScreen
  addr:
    U: 0x58328
    E: 0x583F0
    J: 0x58328
  size: 0xBC
  mode: thumb
  params:
  - label: XPosition
    type: u16
    notes: X position
  - label: YPosition
    type: u16
    notes: Y position
  return: null
  notes: Scrolls the screen
-
  label: ProcessScrollX
  addr:
    U: 0x583E4
    E: 0x584AC
    J: 0x583E4
  size: 0x40
  mode: thumb
  params:
  - label: ActiveScrollPtr
    type: ActiveScroll *
    notes: Active scroll pointer
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return:
    label: ScreenXPosition
    type: u16
    notes: Screen X position
  notes: Processes the X part of the scroll in r0
-
  label: ProcessScrollY
  addr:
    U: 0x58424
    E: 0x584EC
    J: 0x58424
  size: 0x54
  mode: thumb
  params:
  - label: ActiveScrollPtr
    type: ActiveScroll *
    notes: Active scroll pointer
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return:
    label: ScreenYPosition
    type: u16
    notes: Screen Y position
  notes: Processes the Y part of the scroll in r0
-
  label: LoadRoomScrolls
  addr:
    U: 0x58478
    E: 0x58540
    J: 0x58478
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Loads the scrolls of the current room
-
  label: UpdateCurrScrolls
  addr:
    U: 0x584D8
    E: 0x585A0
    J: 0x584D8
  size: 0x168
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return: null
  notes: Updates the 2 current scrolls, also checks for extended bounds (when taking an elevator and when triggered by a breakable block)
-
  label: ProcessGeneralScrolling
  addr:
    U: 0x58640
    E: 0x58708
    J: 0x58640
  size: 0x1F4
  mode: thumb
  params: null
  return: null
  notes: Processes scrolling in general (automatic, slow, scrolls, lock screen)
-
  label: DefaultScroll
  addr:
    U: 0x58834
    E: 0x588FC
    J: 0x58834
  size: 0x14
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return: null
  notes: Handles the automatic scrolling on a room with no scrolls
-
  label: DefaultScrollY
  addr:
    U: 0x58848
    E: 0x58910
    J: 0x58848
  size: 0x100
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return: null
  notes: Handles the automatic Y scrolling on a room with no scrolls
-
  label: DefaultScrollX
  addr:
    U: 0x58948
    E: 0x58A10
    J: 0x58948
  size: 0xD0
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return: null
  notes: Handles the automatic X scrolling on a room with no scrolls
-
  label: UpdateRoomEffectAndHazePosition
  addr:
    U: 0x58A18
    E: 0x58AE0
    J: 0x58A18
  size: 0x2A8
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer
  return: null
  notes: Updates the haze and effect position
-
  label: HandleMovingBG0
  addr:
    U: 0x58CC0
    E: 0x58D88
    J: 0x58CC0
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Handles the automatic scrolling of the background 0
-
  label: GetBG3ScrollingValues
  addr:
    U: 0x58D20
    E: 0x58DE8
    J: 0x58D20
  size: 0x80
  mode: thumb
  params: null
  return:
    label: XYScrollingValue
    type: u8
    notes: X/Y scrolling value
  notes: Gets the X/Y scrolling values of the background 3 depending on the current room entry BG3 scrolling
-
  label: ScrollBG3
  addr:
    U: 0x58DA0
    E: 0x58E68
    J: 0x58DA0
  size: 0x124
  mode: thumb
  params: null
  return: null
  notes: Scrolls the background 3
-
  label: HandleMovingBG3
  addr:
    U: 0x58F14
    E: 0x58FDC
    J: 0x58F14
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Handles the automatic scrolling of the background 3
-
  label: ScrollBG2
  addr:
    U: 0x58F40
    E: 0x59008
    J: 0x58F40
  size: 0xC8
  mode: thumb
  params: null
  return: null
  notes: Scrolls the background 2
-
  label: DestroyNonReformBlocks
  addr:
    U: 0x592C4
    E: 0x5938C
    J: 0x592C4
  size: 0x6C
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer?
  return:
    label: ValidBlock
    type: bool
    notes: Valid block?
  notes: Handles the destruction of non-reform blocks
-
  label: BombChainBlockRelated
  addr:
    U: 0x59330
    E: 0x593F8
    J: 0x59330
  size: 0x3C
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer?
  return:
    label: Always1
    type: bool
    notes: Always 1
  notes: Handles the destruction of a single block in a bomb chain
-
  label: DestroySingleBreakableBlock
  addr:
    U: 0x5936C
    E: 0x59434
    J: 0x5936C
  size: 0x3C
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer?
  return:
    label: Always1
    type: bool
    notes: Always 1
  notes: Handles the destruction of a single block
-
  label: Destroy2x2Block
  addr:
    U: 0x593A8
    E: 0x59470
    J: 0x593A8
  size: 0xD8
  mode: thumb
  params:
  - label: CoordinatesPtr
    type: void *
    notes: Coordinates pointer?
  return:
    label: Always1
    type: bool
    notes: Always 1
  notes: Handles the destruction of a 2x2 block
-
  label: RemoveNeverReformBlocks
  addr:
    U: 0x59500
    E: 0x595C8
    J: 0x59500
  size: 0x80
  mode: thumb
  params: null
  return: null
  notes: Removes the never reform blocks when loading a room
-
  label: RemoveNeverReformBlockInClipdataBG
  addr:
    U: 0x59580
    E: 0x59648
    J: 0x59580
  size: 0x64
  mode: thumb
  params:
  - label: XPosition
    type: u8
    notes: X position
  - label: YPosition
    type: u8
    notes: Y position
  return: null
  notes: Removes the never reform block from the clipdata/background
-
  label: CheckRevealOrDestroyNonBombBlock
  addr:
    U: 0x59770
    E: 0x59838
    J: 0x59770
  size: 0x84
  mode: thumb
  params:
  - label: RevealableBlockDataPtr
    type: RevealableBlockData *
    notes: Revealable block data pointer
  return:
    label: ShouldDestroyBlock
    type: bool
    notes: Should destroy block
  notes: Checks if a non bomb block should reveal itself
-
  label: CheckRevealOrDestroyBombBlock
  addr:
    U: 0x597F4
    E: 0x598BC
    J: 0x597F4
  size: 0x88
  mode: thumb
  params:
  - label: RevealableBlockDataPtr
    type: RevealableBlockData *
    notes: Revealable block data pointer
  return:
    label: ShouldDestroyBlock
    type: bool
    notes: Should destroy block
  notes: Checks if a bomb block should reveal itself
-
  label: ApplyCurrClipdataAffectingAction
  addr:
    U: 0x5987C
    E: 0x59944
    J: 0x5987C
  size: 0x164
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  - label: ClipdataBlockValue
    type: u16
    notes: Clipdata block value
  return:
    label: Unused
    type: u32
    notes: Unused?
  notes: Applies the current clipdata affecting action
-
  label: SamusApplyScrewSpeedDamageToEnvironment
  addr:
    U: 0x59A9C
    E: 0x59B64
    J: 0x59A9C
  size: 0xB8
  mode: thumb
  params:
  - label: XPosition
    type: u16
    notes: X position
  - label: YPosition
    type: u16
    notes: Y position
  - label: DestructingAction0None1Speedbooster2ScrewAttack3Both
    type: u16
    notes: Destructing action (0 = none, 1 = speedbooster, 2 = screw attack, 3 = both)
  return:
    label: ClipdataValue
    type: u16
    notes: Clipdata value?
  notes: Applies the speedbooster/screw attack destructing action (return value can be garbage from caller)
-
  label: UpdateBrokenReformBlocks
  addr:
    U: 0x59B54
    E: 0x59C1C
    J: 0x59B54
  size: 0x120
  mode: thumb
  params: null
  return: null
  notes: Updates the broken blocks
-
  label: BreakingOrReformingBlockAnimation
  addr:
    U: 0x59C74
    E: 0x59D3C
    J: 0x59C74
  size: 0x134
  mode: thumb
  params:
  - label: BrokenReformBlockPtr
    type: void *
    notes: Broken reform block pointer
  return: null
  notes: Handles the animation of a block breaking/reforming
-
  label: StoreBrokenReformBlock
  addr:
    U: 0x59DA8
    E: 0x59E70
    J: 0x59DA8
  size: 0xAC
  mode: thumb
  params:
  - label: BlockType
    type: u8
    notes: Block type
  - label: XPosition
    type: u16
    notes: X position
  - label: YPosition
    type: u16
    notes: Y position
  - label: param_3
    type: u8
  return:
    label: Stored
    type: bool
  notes: Stores in RAM a new broken reform block
-
  label: StoreBrokenNonReformBlock
  addr:
    U: 0x59E54
    E: 0x59F1C
    J: 0x59E54
  size: 0xA4
  mode: thumb
  params:
  - label: XPosition
    type: u16
    notes: X position
  - label: YPosition
    type: u16
    notes: Y position
  - label: BlockType
    type: u8
    notes: Block type
  return: null
  notes: Stores a broken non reform block in RAM
-
  label: CheckSamusInReformingBlock
  addr:
    U: 0x59F70
    E: 0x5A038
    J: 0x59F70
  size: 0x70
  mode: thumb
  params:
  - label: BlockXPosition
    type: u8
    notes: Block X position
  - label: BlockYPosition
    type: u8
    notes: Block Y position
  return:
    label: InBlock
    type: bool
    notes: In block
  notes: Checks if samus is in the reforming block at r0 and r1
-
  label: StartBombChain
  addr:
    U: 0x59FE0
    E: 0x5A0A8
    J: 0x59FE0
  size: 0xB8
  mode: thumb
  params:
  - label: BombChainType
    type: u8
    enum: BombChainType
    notes: Bomb chain type
  - label: XPosition
    type: u16
    notes: X position
  - label: YPosition
    type: u16
    notes: Y position
  return:
    label: ChainStarted
    type: bool
    notes: Chain started
  notes: Starts a bomb chain
-
  label: ProcessBombChains
  addr:
    U: 0x5A098
    E: 0x5A160
    J: 0x5A098
  size: 0x298
  mode: thumb
  params: null
  return: null
  notes: Processes the current bomb chains
-
  label: CheckStartNewSubBombChain
  addr:
    U: 0x5A330
    E: 0x5A3F8
    J: 0x5A330
  size: 0xB0
  mode: thumb
  params:
  - label: Direction0Up1Down2Left3Right
    type: u8
    notes: Direction (0 = up, 1 = down, 2 = left, 3 = right)
  - label: XPosition
    type: u8
    notes: X position
  - label: YPosition
    type: u8
    notes: Y position
  return: null
  notes: Checks if a new sub bomb chain should start
-
  label: MotherBrainUpdateGlass
  addr:
    U: 0x5A484
    E: 0x5A54C
    J: 0x5A484
  size: 0xD8
  mode: thumb
  params:
  - label: Always0
    type: u8
    notes: Always 0?
  - label: param_1
    type: u16
  - label: param_2
    type: u16
  - label: param_3
    type: u16
  return: null
  notes: Updates the GFX for the mother brain glass
-
  label: SetBG1BlockValue
  addr:
    U: 0x5A55C
    E: 0x5A624
    J: 0x5A55C
  size: 0xCC
  mode: thumb
  params:
  - label: Value
    type: u16
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return: null
  notes: Sets the value for a BG1 block
-
  label: SetRawBG1BlockValue
  addr:
    U: 0x5A628
    E: 0x5A6F0
    J: 0x5A628
  size: 0x24
  mode: thumb
  params:
  - label: Value
    type: u16
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return: null
  notes: Sets the value for a BG1 block (does not update tilemap nor VRAM)
-
  label: SetClipdataBlockValue
  addr:
    U: 0x5A64C
    E: 0x5A714
    J: 0x5A64C
  size: 0x24
  mode: thumb
  params:
  - label: Value
    type: u16
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return: null
  notes: Sets the value for a clipdata block
-
  label: CheckSamusTouchingCodeTriggeringClipdata
  addr:
    U: 0x5A670
    E: 0x5A738
    J: 0x5A670
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Calls CheckTouchingTransitionOrTank, checks for transparency changes, calls CheckWalkingOnCrumbleBlock and CheckGrabbingCrumbleBlock
-
  label: ApplyClipdataChangingTransparency
  addr:
    U: 0x5A6C8
    E: 0x5A790
    J: 0x5A6C8
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Applies the clipdata behavior that changes transparency
-
  label: CheckClipBehaviorValueChangesBLDALPHA
  addr:
    U: 0x5A770
    E: 0x5A838
    J: 0x5A770
  size: 0x30
  mode: thumb
  params:
  - label: ClipdataBehaviorValue
    type: u16
    enum: ClipdataBehaviorType
    notes: Clipdata behavior value
  return:
    label: Bldalpha
    type: u16
    notes: BLDALPHA
  notes: Checks for a BLDALPHA change
-
  label: CheckSamusOnCrumbleBlock
  addr:
    U: 0x5A7A0
    E: 0x5A868
    J: 0x5A7A0
  size: 0x108
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is walking on a crumble block (also checks for slow ones)
-
  label: CheckTouchingTransitionOnElevator
  addr:
    U: 0x5A8A8
    E: 0x5A970
    J: 0x5A8A8
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is touching a transition when taking an elevator
-
  label: CheckTouchingTransitionOrTank
  addr:
    U: 0x5A96C
    E: 0x5AA34
    J: 0x5A96C
  size: 0x420
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is touching a transition or a tank
-
  label: FinishCollectingTank
  addr:
    U: 0x5AD8C
    E: 0x5AE54
    J: 0x5AD8C
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Handles the end of collecting a tank
-
  label: FinishCollectedAbility
  addr:
    U: 0x5ADEC
    E: 0x5AEB4
    J: 0x5ADEC
  size: 0x30
  mode: thumb
  params: null
  return: null
  notes: Handles the end of collecting an ability
-
  label: CheckGrabbingCrumbleBlock
  addr:
    U: 0x5AE1C
    E: 0x5AEE4
    J: 0x5AE1C
  size: 0x104
  mode: thumb
  params:
  - label: Always0
    type: bool
    notes: Always 0
  return: null
  notes: Checks if samus is grabbing a crumble block (also checks for slow ones)
-
  label: CheckOpeningHatch
  addr:
    U: 0x5AF20
    E: 0x5AFE8
    J: 0x5AF20
  size: 0x180
  mode: thumb
  params:
  - label: XPositionBlocks
    type: u16
    notes: X position (blocks)
  - label: YPositionBlocks
    type: u16
    notes: Y position (blocks)
  return:
    label: DoorBehavior0NotOpening1Opening2Locked
    type: u8
    notes: Door behavior (0 = not opening, 1 = opening, 2 = locked)
  notes: Checks if the hatch should open
-
  label: SetItemAsCollected
  addr:
    U: 0x5B0A0
    E: 0x5B168
    J: 0x5B0A0
  size: 0x74
  mode: thumb
  params:
  - label: XPosition
    type: u16
    notes: X position
  - label: YPosition
    type: u16
    notes: Y position
  - label: ItemType
    type: u8
    notes: Item type
  return: null
  notes: Sets an item as collected
-
  label: RemoveCollectedTanks
  addr:
    U: 0x5B114
    E: 0x5B1DC
    J: 0x5B114
  size: 0xC4
  mode: thumb
  params: null
  return: null
  notes: Removes the collected items when loading a room
-
  label: CallMotherBrainUpdateGlass
  addr:
    U: 0x5B1D8
    E: 0x5B2A0
    J: 0x5B1D8
  size: 0x74
  mode: thumb
  params:
  - label: Stage
    type: u8
  return: null
  notes: Calls MotherBrainUpdateGlass with the good parameters
-
  label: SetYellowTintForPowerBombExplosion
  addr:
    U: 0x5B584
    E: 0x5B64C
    J: 0x5B584
  size: 0xA0
  mode: thumb
  params:
  - label: param_0
    type: u8
  return: null
  notes: Handles the yellow tint when a power bomb explosion happens
-
  label: PlayCutscene
  addr:
    U: 0x5BFD4
    E: 0x5C09C
    J: 0x5BFD4
  size: 0xA0
  mode: thumb
  params:
  - label: CutsceneNum
    type: u8
    enum: Cutscene
    notes: Cutscene number
  return: null
  notes: Plays a cutscene
-
  label: StartSpecialBGFading
  addr:
    U: 0x5C074
    E: 0x5C13C
    J: 0x5C074
  size: 0x18
  mode: thumb
  params:
  - label: FadeType
    type: u8
    enum: SpecialBGFadeType
    notes: Fade type
  return: null
  notes: Starts a special background fading
-
  label: BG3OFSRelated
  addr:
    U: 0x5C158
    E: 0x5C220
    J: 0x5C158
  size: 0x38
  mode: thumb
  params: null
  return: null
  notes: Changes the Which Background Position Is Written To BG30FS global variable
-
  label: ProcessSpecialFadingEffect
  addr:
    U: 0x5C460
    E: 0x5C528
    J: 0x5C460
  size: 0x60
  mode: thumb
  params: null
  return:
    label: unk
    type: bool
  notes: Processes the current special fading effect
-
  label: EscapeFailedFade
  addr:
    U: 0x5C77C
    E: 0x5C844
    J: 0x5C77C
  size: 0x98
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the escape failed fade
-
  label: BeforeChozodiaEscapeFade
  addr:
    U: 0x5C814
    E: 0x5C8DC
    J: 0x5C814
  size: 0x98
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Subroutine for the before chozodia escape fade
-
  label: BeforeTourianEscapeFade
  addr:
    U: 0x5C924
    E: 0x5C9EC
    J: 0x5C924
  size: 0x78
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the before tourian escape fade
-
  label: BeforeGettingFullyPoweredFade
  addr:
    U: 0x5C99C
    E: 0x5CA64
    J: 0x5C99C
  size: 0xBC
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the before getting fully powered fade
-
  label: BeforeRidleySpawnFade
  addr:
    U: 0x5CA58
    E: 0x5CB20
    J: 0x5CA58
  size: 0x80
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the before ridley spawn fade
-
  label: BeforeStatueOpeningFade
  addr:
    U: 0x5CAD8
    E: 0x5CBA0
    J: 0x5CAD8
  size: 0xA0
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the before statue opening fade
-
  label: BeforeIntroTextFade
  addr:
    U: 0x5CB78
    E: 0x5CC40
    J: 0x5CB78
  size: 0xA4
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the before intro text fade
-
  label: SetBGHazeEffect
  addr:
    U: 0x5CFE0
    E: 0x5D0A8
    J: 0x5CFE0
  size: 0x54
  mode: thumb
  params: null
  return: null
  notes: Sets the background haze effect depending on the Haze Data table and the room effect
-
  label: SetupHazeCode
  addr:
    U: 0x5D118
    E: 0x5D1E0
    J: 0x5D118
  size:
    U: 0x2C0
    E: 0x2CC
    J: 0x2C0
  mode: thumb
  params:
  - label: HazeValue
    type: u8
    enum: HazeType
    notes: Haze value
  return: null
  notes: Tranfers a function to RAM depending on the current haze value
-
  label: ResetHazeLoops
  addr:
    U: 0x5D3D8
    E: 0x5D4AC
    J: 0x5D3D8
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Resets the haze loops
-
  label: ProcessHaze
  addr:
    U: 0x5D5BC
    E: 0x5D690
    J: 0x5D5BC
  size: 0x1AC
  mode: thumb
  params: null
  return:
    label: PowerBombEndedAndRoomHasHaze
    type: bool
    notes: Power bomb ended and room has haze
  notes: Calls the Haze Process Code, if a power bomb ended and the room has a haze effect Set Background Haze Effect is called and the function returns 1
-
  label: HazeBG3
  addr:
    U: 0x5D768
    E: 0x5D83C
    J: 0x5D768
  size: 0xC0
  mode: thumb
  params: null
  return: null
  notes: Haze BG3 code
-
  label: HazeBG3StrongEffectWeakOutside
  addr:
    U: 0x5D828
    E: 0x5D8FC
    J: 0x5D828
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Haze BG3 (strong in effect, weak outside) code
-
  label: HazeBG3NoneEffectWeakOutside
  addr:
    U: 0x5D940
    E: 0x5DA14
    J: 0x5D940
  size: 0x70
  mode: thumb
  params: null
  return: null
  notes: Haze BG3 (none in effect, weak outside) code
-
  label: HazeBG3BG2StrongEffectWeakOutsideMediumEverywhere
  addr:
    U: 0x5D9B0
    E: 0x5DA84
    J: 0x5D9B0
  size: 0x90
  mode: thumb
  params: null
  return: null
  notes: Haze BG3/BG2 (Strong In Effect, Weak Outside For BG3 And Medium Everywhere For BG2) code
-
  label: HazePowerBombExpanding
  addr:
    U: 0x5DB2C
    E: 0x5DC00
    J: 0x5DB2C
  size: 0x118
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Haze Power Bomb Expanding code
-
  label: HazePowerBombRetracting
  addr:
    U: 0x5DC44
    E: 0x5DD18
    J: 0x5DC44
  size: 0x118
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Haze Power Bomb Retracting code
-
  label: TransferAnimatedGraphics
  addr:
    U: 0x5DD5C
    E: 0x5DE30
    J: 0x5DD5C
  size:
    U: 0x270
    E: 0x290
    J: 0x270
  mode: thumb
  params: null
  return: null
  notes: Transfers the animated graphics from WRAM to VRAM depending on the Animated graphics to update
-
  label: UpdateAnimatedGraphics
  addr:
    U: 0x5DFCC
    E: 0x5E0C0
    J: 0x5DFCC
  size: 0x164
  mode: thumb
  params: null
  return: null
  notes: Updates the animated graphics
-
  label: LoadAnimatedTileset
  addr:
    U: 0x5E130
    E: 0x5E224
    J: 0x5E130
  size: 0xF4
  mode: thumb
  params: null
  return: null
  notes: Loads the animated graphics of the current room
-
  label: UpdateAnimatedPalette
  addr:
    U: 0x5E2B4
    E: 0x5E3A8
    J: 0x5E2B4
  size: 0x170
  mode: thumb
  params: null
  return: null
  notes: Updates the animated palette
-
  label: LoadAnimatedPalette
  addr:
    U: 0x5E424
    E: 0x5E518
    J: 0x5E424
  size: 0xDC
  mode: thumb
  params: null
  return: null
  notes: Checks if the animated palette should be disabled when loading a room
-
  label: CheckPlayLightningEffect
  addr:
    U: 0x5E500
    E: 0x5E5F4
    J: 0x5E500
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Checks if lightning effects should play
-
  label: ProcessSpecialBGEffect
  addr:
    U: 0x5E5CC
    E: 0x5E6C0
    J: 0x5E5CC
  size: 0x12C
  mode: thumb
  params: null
  return:
    label: unk
    type: u8
  notes: Processes the current special background effect
-
  label: StartSpecialBGEffect
  addr:
    U: 0x5E6F8
    E: 0x5E7EC
    J: 0x5E6F8
  size: 0x68
  mode: thumb
  params:
  - label: Effect
    type: u8
    enum: SpecialBGEffect
  return:
    label: EffectStarted
    type: bool
    notes: Effect started
  notes: Starts a special background effect
-
  label: UpdateHatchAnimation
  addr:
    U: 0x5E8F8
    E: 0x5E9EC
    J: 0x5E8F8
  size: 0x15C
  mode: thumb
  params:
  - label: param_0
    type: u8
  - label: HatchNum
    type: u32
    notes: Hatch number
  return: null
  notes: Updates the closing/opening animation of an hatch
-
  label: CheckEnterDoor
  addr:
    U: 0x5EBF0
    E: 0x5ECE4
    J: 0x5EBF0
  size: 0x1A4
  mode: thumb
  params:
  - label: YPosition
    type: u16
    notes: Y position
  - label: XPosition
    type: u16
    notes: X position
  return:
    label: DoorFound
    type: bool
    notes: Door found
  notes: Checks if the door samus is entering is valid, if yes makes samus enter the door
-
  label: CheckAreaConnection
  addr:
    U: 0x5ED94
    E: 0x5EE88
    J: 0x5ED94
  size: 0x1B0
  mode: thumb
  params:
  - label: YPositionBlocks
    type: u16
    notes: Y position (blocks)
  - label: XPositionBlocks
    type: u16
    notes: X position (blocks)
  return:
    label: DoorFound
    type: bool
    notes: Door found
  notes: Checks if the area connection is valid, if yes makes samus enter the door
-
  label: ProcessDoorType
  addr:
    U: 0x5EF44
    E: 0x5F038
    J: 0x5EF44
  size: 0x64
  mode: thumb
  params:
  - label: DoorType
    type: u8
    enum: DoorType
    notes: Door type
  return: null
  notes: Processes the door type in r0
-
  label: FindEventBasedDoor
  addr:
    U: 0x5EFA8
    E: 0x5F09C
    J: 0x5EFA8
  size: 0x5C
  mode: thumb
  params:
  - label: SourceDoorNum
    type: u8
    notes: Source door number
  return:
    label: TargetDoorNumIfFound0xffOtherwise
    type: u8
    notes: Target door number if found, 0xFF otherwise
  notes: Finds the new destination room for event based doors
-
  label: SetHatchAsOpened
  addr:
    U: 0x5F004
    E: 0x5F0F8
    J: 0x5F004
  size: 0xA0
  mode: thumb
  params:
  - label: 0ForCheckingIfOpened1ForSettingSourceAndDestination2ForSettingSource
    type: u8
    notes: 0 for checking if opened, 1 for setting source and destination, 2 for setting source
  - label: DoorNum
    type: u8
    notes: Door number
  return:
    label: HatchPreviouslyUnopened
    type: bool
    notes: Hatch previously unopened
  notes: Sets an hatch as opened
-
  label: CheckUnlockHatches
  addr:
    U: 0x5F0A4
    E: 0x5F198
    J: 0x5F0A4
  size: 0x40
  mode: thumb
  params: null
  return: null
  notes: Checks if the doors should unlock
-
  label: LockHatches
  addr:
    U: 0x5F120
    E: 0x5F214
    J: 0x5F120
  size: 0x174
  mode: thumb
  params:
  - label: IsHatchLockEvent
    type: bool
    notes: Is hatch lock event
  return: null
  notes: Locks the hatches
-
  label: LoadRoomDoors
  addr:
    U: 0x5F294
    E: 0x5F388
    J: 0x5F294
  size: 0x320
  mode: thumb
  params: null
  return: null
  notes: Loads the doors for the current rooms
-
  label: LockHatchesWithTimer
  addr:
    U: 0x5F5B4
    E: 0x5F6A8
    J: 0x5F5B4
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calls LockHatches with 0 in r0, called when the doors are locked using the timer and not via a hatch lock event
-
  label: CheckHatchLockEvents
  addr:
    U: 0x5F5D8
    E: 0x5F6CC
    J: 0x5F5D8
  size: 0x16C
  mode: thumb
  params: null
  return: null
  notes: Checks for a hatch lock event in the current room, calls LockHatches with 1 in r0
-
  label: CheckPlayCutsceneDuringTransition
  addr:
    U: 0x5F744
    E: 0x5F838
    J: 0x5F744
  size: 0xB8
  mode: thumb
  params:
  - label: Area
    type: u8
    enum: AreaID
  - label: DestinationRoom1
    type: u8
    notes: Destination room + 1
  return: null
  notes: Checks if a cutscene should play when going through a transition
-
  label: CheckPlayCutsceneDuringElevator
  addr:
    U: 0x5F7FC
    E: 0x5F8F0
    J: 0x5F7FC
  size: 0xF8
  mode: thumb
  params: null
  return: null
  notes: Checks if a cutscene should play when using an elevator
-
  label: IntroSamusCloseUp
  addr:
    U: 0x5F8F4
    E: 0x5F9E8
    J: 0x5F8F4
  size:
    U: 0x464
    E: 0x460
    J: 0x464
  mode: thumb
  params: null
  return:
    label: 5IfEnded0Otherwise
    type: u8
    notes: 5 if ended, 0 otherwise
  notes: Handles the samus close up at the beginning of the game
-
  label: UpgradeSuitCutscene
  addr:
    U: 0x5FDCC
    E: 0x5FEBC
    J: 0x5FDCC
  size:
    U: 0x5A8
    E: 0x59C
    J: 0x5A8
  mode: thumb
  params:
  - label: CutsceneNum
    type: u8
    notes: Cutscene number
  - label: CutsceneFlag
    type: u8
    notes: Cutscene flag
  return:
    label: Ended
    type: bool
  notes: Handles the samus upgrading suit cutscene (both varia and full suit)
-
  label: MakeBackgroundFlash
  addr:
    U: 0x603C4
    E: 0x604A8
    J: 0x603C4
  size: 0x58
  mode: thumb
  params:
  - label: FlashType0SlightYellowFlash1TransparencyChangeForStatueLong2HeavyYellowFlash3QuickFlash
    type: u8
    notes: Flash type (0 = slight yellow flash, 1 = transparency change for statue long, 2 = heavy yellow flash 3 = quick flash)
  return: null
  notes: Starts a flash background effect
-
  label: StartInGameCutscene
  addr:
    U: 0x6041C
    E: 0x60500
    J: 0x6041C
  size: 0x18
  mode: thumb
  params:
  - label: CutsceneNum
    type: u8
    enum: InGameCutscene
    notes: Cutscene number
  return: null
  notes: Starts an in game cutscene
-
  label: ProcessInGameCutscene
  addr:
    U: 0x60434
    E: 0x60518
    J: 0x60434
  size: 0xAC
  mode: thumb
  params: null
  return: null
  notes: Updates the in game cutscene, calls the subroutine
-
  label: InitInGameCutscene
  addr:
    U: 0x604E0
    E: 0x605C4
    J: 0x604E0
  size: 0x7C
  mode: thumb
  params: null
  return: null
  notes: Initializes an in game cutscene
-
  label: EventFunctions
  addr:
    U: 0x608BC
    E: 0x609A0
    J: 0x608BC
  size: 0x6C
  mode: thumb
  params:
  - label: 0IfClearingEvent1IfSettingEvent2IfTogglingEvent3IfCheckingEvent
    type: u8
    notes: 0 if clearing event, 1 if setting event, 2 if toggling event, 3 if checking event
  - label: Event
    type: u8
    enum: Event
  return:
    label: EventIsSet
    type: bool
    notes: Event is set
  notes: Event function, used to manipulate events
-
  label: CheckPlayRoomMusicTrack
  addr:
    U: 0x60928
    E: 0x60A0C
    J: 0x60928
  size: 0xBC
  mode: thumb
  params:
  - label: AreaId
    type: u8
    enum: AreaID
    notes: Area ID
  - label: RoomId
    type: u8
    notes: Room ID
  return: null
  notes: Calls CheckSetNewMusicTrack, plays the destination room music if necessary
-
  label: CheckPlayLoadingJingle
  addr:
    U: 0x609E4
    E: 0x60AC8
    J: 0x609E4
  size: 0x64
  mode: thumb
  params: null
  return: null
  notes: Checks if the loading jingle should play
-
  label: StartNewDemo
  addr:
    U: 0x60B20
    E: 0x60C04
    J: 0x60B20
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Starts a new demo
-
  label: InitNewDemo
  addr:
    U: 0x60B7C
    E: 0x60C60
    J: 0x60B7C
  size: 0x140
  mode: thumb
  params: null
  return: null
  notes: Initializes a new demo
-
  label: ReturnOne
  addr:
    U: 0x60E28
    E: 0x60F10
    J: 0x60E28
  size: 0x4
  mode: thumb
  params: null
  return:
    label: Always1
    type: bool
    notes: Always 1
  notes: Returns 1 (used for cutscenes)
-
  label: ZebesEscapeCutsceneSubroutine
  addr:
    U: 0x60E2C
    E: 0x60F14
    J: 0x60E2C
  size: 0x94
  mode: thumb
  params: null
  return:
    label: CutsceneEnded
    type: bool
    notes: Cutscene ended
  notes: Subroutine for the tourian escape
-
  label: UpdateMusicAfterCutsceneSkip
  addr:
    U: 0x60EC0
    E: 0x60FA8
    J: 0x60EC0
  size: 0x34
  mode: thumb
  params: null
  return: null
  notes: Updates the music after skipping a cutscene
-
  label: EndCutscene
  addr:
    U: 0x60EF4
    E: 0x60FDC
    J: 0x60EF4
  size: 0x150
  mode: thumb
  params: null
  return: null
  notes: Called at the end of a cutscene
-
  label: CutscenesSubroutine
  addr:
    U: 0x61044
    E: 0x6112C
    J: 0x61044
  size: 0x1E4
  mode: thumb
  params: null
  return:
    label: CutsceneEnded
    type: bool
    notes: Cutscene ended
  notes: Main subroutine for all cutscenes
-
  label: EndCutsceneFunctions
  addr:
    U: 0x61228
    E: 0x61310
    J: 0x61228
  size: 0x4
  mode: thumb
  params: null
  return:
    label: 1ToIndicateEndOfFunctions
    type: bool
    notes: 1 to indicate end of functions
  notes: Returns 1, used for cutscene subroutines
-
  label: KraidRisingRising
  addr:
    U: 0x6240C
    E: 0x62528
    J: 0x6240C
  size: 0x2EC
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the kraid rising part of the kraid rising cutscene
-
  label: KraidRisingOpeningEyes
  addr:
    U: 0x6280C
    E: 0x62928
    J: 0x6280C
  size: 0x188
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles kraid opening his eyes part of the kraid rising cutscene
-
  label: KraidRisingInit
  addr:
    U: 0x62994
    E: 0x62AB0
    J: 0x62994
  size: 0x190
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the kraid rising cutscene
-
  label: KraidRisingSubroutine
  addr:
    U: 0x62B24
    E: 0x62C40
    J: 0x62B24
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the kraid rising cutscene
-
  label: StoryTextCutscenesInit
  addr:
    U: 0x62B90
    E: 0x62CAC
    J: 0x62B90
  size: 0xFC
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize a story text cutscene
-
  label: StoryTextCutscenesSubroutine
  addr:
    U: 0x62FD8
    E: 0x630F4
    J: 0x62FD8
  size: 0x30
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the story text cutscenes (intro, after landing on Chozodia and another one?)
-
  label: MotherBrainCloseUpLookingAtSamus
  addr:
    U: 0x63008
    E: 0x63124
    J: 0x63008
  size: 0x234
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the mother brain looking at samus part of the mother brain close up cutscene
-
  label: MotherBrainCloseUpEyeOpening
  addr:
    U: 0x63284
    E: 0x633A0
    J: 0x63284
  size: 0x23C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the eye opening part of the mother brain close up cutscene
-
  label: MotherBrainCloseUpTankView
  addr:
    U: 0x634C0
    E: 0x635DC
    J: 0x634C0
  size: 0xC4
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the view of mother brain in her tank from up top (beginning) part of the mother brain close up cutscene
-
  label: MotherBrainCloseUpInit
  addr:
    U: 0x63584
    E: 0x636A0
    J: 0x63584
  size: 0xB8
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the mother brain close up cutscene
-
  label: MotherBrainCloseUpSubroutine
  addr:
    U: 0x6363C
    E: 0x63758
    J: 0x6363C
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Mother brain close up cutscene subroutine
-
  label: RidleyInSpaceShipLeaving
  addr:
    U: 0x63884
    E: 0x639A0
    J: 0x63884
  size: 0x298
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the ship leaving (end) part of the ridley in space cutscene
-
  label: RidleyInSpaceRidleySuspicious
  addr:
    U: 0x63BE0
    E: 0x63CFC
    J: 0x63BE0
  size: 0x1B0
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the ridley being suspicious part of the ridley in space cutscene
-
  label: RidleyInSpaceRedAlert
  addr:
    U: 0x63D90
    E: 0x63EAC
    J: 0x63D90
  size: 0x1C4
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the red alert part of the ridley in space cutscene
-
  label: RidleyInSpaceViewOfShip
  addr:
    U: 0x63FB4
    E: 0x640D0
    J: 0x63FB4
  size: 0x1B4
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the view on the ship in space (beginning) part of the ridley in space cutscene
-
  label: RidleyInSpaceCutsceneInit
  addr:
    U: 0x642BC
    E: 0x643D8
    J: 0x642BC
  size: 0x15C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the ridley in space cutscene
-
  label: RidleyInSpaceSubroutine
  addr:
    U: 0x64418
    E: 0x64534
    J: 0x64418
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the ridley in space cutscene
-
  label: RidleyLandingRidleyFlying
  addr:
    U: 0x647D0
    E: 0x648EC
    J: 0x647D0
  size: 0x178
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the ridley flying part of the ridley landing cutscene
-
  label: RidleyLandingShipLanding
  addr:
    U: 0x649B4
    E: 0x64AD0
    J: 0x649B4
  size: 0x5A8
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the shi landing part of the ridley landing cutscene
-
  label: RidleyLandingShipInSpace
  addr:
    U: 0x64FE0
    E: 0x650FC
    J: 0x64FE0
  size: 0x108
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the ship in space part of the ridley landing cutscene
-
  label: RidleyLandingInit
  addr:
    U: 0x650E8
    E: 0x65204
    J: 0x650E8
  size: 0x19C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0?
  notes: Initialize the ridley landing cutscene
-
  label: RidleyLandingSubroutine
  addr:
    U: 0x65284
    E: 0x653A0
    J: 0x65284
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the ridley landing cutscene
-
  label: RidleySpawnRidleyFlyingIn
  addr:
    U: 0x65304
    E: 0x65420
    J: 0x65304
  size: 0x19C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the ridley flying towards the camera part of the ridley spawn cutscene
-
  label: RidleySpawnHelmetReflection
  addr:
    U: 0x65540
    E: 0x6565C
    J: 0x65540
  size: 0x12C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the ridley in the helmet reflection part of the ridley spawn cutscene
-
  label: RidleySpawnSamusLookingUp
  addr:
    U: 0x6566C
    E: 0x65788
    J: 0x6566C
  size: 0x7C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the samus looking up part of the ridley spawn cutscene
-
  label: RidleySpawnCutsceneInit
  addr:
    U: 0x656E8
    E: 0x65804
    J: 0x656E8
  size: 0x1BC
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the ridley spawn cutscene
-
  label: RidleySpawnSubroutine
  addr:
    U: 0x658A4
    E: 0x659C0
    J: 0x658A4
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the ridley spawn cutscene
-
  label: MechaRidleySeesSamusEyeOpen
  addr:
    U: 0x65924
    E: 0x65A40
    J: 0x65924
  size: 0x100
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the eye opening part (the entire cutscene) of the mecha ridley sees samus cutscene
-
  label: MechaRidleySeesSamusInit
  addr:
    U: 0x65A24
    E: 0x65B40
    J: 0x65A24
  size: 0x148
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the mecha ridley sees samus cutscene
-
  label: MechaRidleySeesSamusSubroutine
  addr:
    U: 0x65B6C
    E: 0x65C88
    J: 0x65B6C
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the mecha ridley sees samus cutscene
-
  label: GettingFullyPoweredSuitAnimation
  addr:
    U: 0x65BD8
    E: 0x65CF4
    J: 0x65BD8
  size: 0x204
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the animation (entire cutscene) part of the getting fully powered suit cutscene
-
  label: GettingFullyPoweredSuitInit
  addr:
    U: 0x66020
    E: 0x6613C
    J: 0x66020
  size: 0x33C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the getting fully powered suit cutscene
-
  label: GettingFullyPoweredSuitSubroutine
  addr:
    U: 0x6635C
    E: 0x66478
    J: 0x6635C
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the getting fully powered suit cutscene
-
  label: BeforeRuinsTestSamusCloseUp
  addr:
    U: 0x663C8
    E: 0x664E4
    J: 0x663C8
  size: 0x270
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the samus close up part of the before charlie cutscene
-
  label: BeforeRuinsTestWallAndGreyVoice
  addr:
    U: 0x66638
    E: 0x66754
    J: 0x66638
  size: 0x2D8
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the wall view and the grey voice part of the before charlie cutscene
-
  label: BeforeRuinsTestChozoWallSides
  addr:
    U: 0x66A30
    E: 0x66B4C
    J: 0x66A30
  size: 0x70
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the view on the sides of the chozo wall part of the before charlie cutscene
-
  label: BeforeRuinsTestInit
  addr:
    U: 0x66AA0
    E: 0x66BBC
    J: 0x66AA0
  size: 0x130
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the before charlie cutscene
-
  label: BeforeRuinsTestSubroutine
  addr:
    U: 0x66BD0
    E: 0x66CEC
    J: 0x66BD0
  size: 0x30
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the before charlie cutscene
-
  label: StatueOpeningOpening
  addr:
    U: 0x66C00
    E: 0x66D1C
    J: 0x66C00
  size: 0x164
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the statue opening cutscene
-
  label: StatueOpeningInit
  addr:
    U: 0x66D64
    E: 0x66E80
    J: 0x66D64
  size: 0x2B0
  mode: thumb
  params: null
  return: null
  notes: Initialize the statue opening cutscene
-
  label: StatueOpeningSubroutine
  addr:
    U: 0x67014
    E: 0x67130
    J: 0x67014
  size: 0x34
  mode: thumb
  params: null
  return:
    label: unk
    type: u8
  notes: Subroutine for the statue opening cutscene
-
  label: EnterTourianAnimation
  addr:
    U: 0x67080
    E: 0x6719C
    J: 0x67080
  size: 0x310
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the animation of the metroids (entire cutscene) part of the enter tourian cutscene
-
  label: EnterTourianInit
  addr:
    U: 0x6794C
    E: 0x67A68
    J: 0x6794C
  size: 0x3C0
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the entering tourian cutscene
-
  label: EnterTourianSubroutine
  addr:
    U: 0x67D0C
    E: 0x67E28
    J: 0x67D0C
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the enter tourian cutscene
-
  label: SamusInBlueShipPoweringUp
  addr:
    U: 0x67D8C
    E: 0x67EA8
    J: 0x67D8C
  size: 0xF8
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the blue ship powering up (entire cutscene) part of the samus in blue ship cutscene
-
  label: SamusInBlueShipInit
  addr:
    U: 0x67F90
    E: 0x680AC
    J: 0x67F90
  size: 0x12C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Initialize the samus in blue ship cutscene
-
  label: SamusInBlueShipSubroutine
  addr:
    U: 0x680BC
    E: 0x681D8
    J: 0x680BC
  size: 0x34
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the samus in blue ship cutscene
-
  label: CheckDrawTimeAndTanks
  addr:
    U: 0x6895C
    E: 0x68A78
    J: 0x6895C
  size: 0xFC
  mode: thumb
  params:
  - label: DonTDrawFlag
    type: bool
    notes: Don't draw flag
  return: null
  notes: Draws the pause screen info (in game time and tanks)
-
  label: MapScreenOamRelated
  addr:
    U: 0x695BC
    E: 0x696D8
    J: 0x695BC
  size: 0xF0
  mode: thumb
  params: null
  return: null
  notes: General handler for the map screen OAM
-
  label: CutsceneProcessOAM
  addr:
    U: 0x69DC8
    E: 0x69EE4
    J: 0x69DC8
  size: 0x3B8
  mode: thumb
  params:
  - label: Length
    type: u32
  - label: CutsceneOamDataPtr
    type: void *
    notes: Cutscene OAM data pointer
  - label: OamArrayPtr
    type: OamArray *
    notes: OAM array pointer
  return: null
  notes: Processes a cutscene OAM Data and writes to OAM data
-
  label: MapScreenSubroutine
  addr:
    U: 0x6A180
    E: 0x6A29C
    J: 0x6A180
  size: 0x178
  mode: thumb
  params: null
  return:
    label: LeavingMapScreen
    type: bool
    notes: Leaving map screen
  notes: Map screen main loop
-
  label: MapScreenInit
  addr:
    U: 0x6A434
    E: 0x6A550
    J: 0x6A434
  size:
    U: 0xAA0
    E: 0xAA0
    J: 0xABC
  mode: thumb
  params: null
  return: null
  notes: Initializes the map screen
-
  label: DetermineViewableAreaMaps
  addr:
    U: 0x6AED4
    E: 0x6AFF0
    J: 0x6AEF0
  size: 0x138
  mode: thumb
  params: null
  return: null
  notes: Determines which maps can be viewed in the pause screen
-
  label: GetMinimapData
  addr:
    U: 0x6B0F8
    E: 0x6B214
    J: 0x6B114
  size: 0x148
  mode: thumb
  params:
  - label: MinimapNum
    type: u8
    notes: Minimap number
  - label: DestinationAddress
    type: void *
    notes: Destination address
  return: null
  notes: Gets the minimap data
-
  label: CheckSustainedInputForScrolling
  addr:
    U: 0x6C0E0
    E: 0x6C204
    J: 0x6C0FC
  size:
    U: 0x74
    E: 0x88
    J: 0x74
  mode: thumb
  params: null
  return: null
  notes: Checks for maintained input when on specific menus (map screen and file select)
-
  label: UpdateMinimap
  addr:
    U: 0x6C154
    E: 0x6C28C
    J: 0x6C170
  size: 0x24
  mode: thumb
  params: null
  return: null
  notes: Calls different functions related to updating the minimap
-
  label: SetMinimapSquareExplored
  addr:
    U: 0x6C178
    E: 0x6C2B0
    J: 0x6C194
  size: 0x4C
  mode: thumb
  params: null
  return: null
  notes: Sets a minimap tile to be explored
-
  label: CheckForUnexploredMinimapSquare
  addr:
    U: 0x6C39C
    E: 0x6C4D4
    J: 0x6C3B8
  size: 0xD8
  mode: thumb
  params: null
  return: null
  notes: Checks if samus is on an unexplored minimap tile
-
  label: CheckUpdateMinimapOnDoorTransition
  addr:
    U: 0x6C474
    E: 0x6C5AC
    J: 0x6C490
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Does check for the minimap when taking a transition
-
  label: UpdateCornerMinimapNewSquareEntered
  addr:
    U: 0x6C518
    E: 0x6C650
    J: 0x6C534
  size: 0x9C
  mode: thumb
  params: null
  return: null
  notes: Updates the minimap GFX for the explored tiles
-
  label: DrawCornerMinimap
  addr:
    U: 0x6C5B4
    E: 0x6C6EC
    J: 0x6C5D0
  size:
    U: 0x100
    E: 0xD4
    J: 0x100
  mode: thumb
  params: null
  return: null
  notes: Draws the minimap
-
  label: SetMinimapSquaresWithObtainedItems
  addr:
    U: 0x6CA44
    E: 0x6CB50
    J: 0x6CA60
  size: 0x6C
  mode: thumb
  params:
  - label: AreaId
    type: u8
    enum: AreaID
    notes: Area ID
  - label: DestinationAddress
    type: void *
    notes: Destination address
  return: null
  notes: Sets tiles with obtained items when loading a new map for an area
-
  label: MinimapSetDownloadedSquares
  addr:
    U: 0x6CAB0
    E: 0x6CBBC
    J: 0x6CACC
  size: 0x128
  mode: thumb
  params:
  - label: AreaId
    type: u8
    enum: AreaID
    notes: Area ID
  - label: DestinationAddress
    type: void *
    notes: Destination address
  return: null
  notes: Checks if the map has been downloaded and sets the unexplored tiles when loading a new map for an area
-
  label: UpdateMinimapSquareForCollectedItem
  addr:
    U: 0x6CBD8
    E: 0x6CCE4
    J: 0x6CBF4
  size: 0x90
  mode: thumb
  params:
  - label: ItemXPosition
    type: u8
    notes: Item X position
  - label: ItemYPosition
    type: u8
    notes: Item Y position
  return: null
  notes: Updates the minimap square for collected items
-
  label: LoadMinimapSquaresWithObtainedItems
  addr:
    U: 0x6CCCC
    E: 0x6CDD8
    J: 0x6CCE8
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Loads the minimap tiles with obtained items when loading a save file
-
  label: UpdateMinimapChunk
  addr:
    U: 0x6CD84
    E: 0x6CE90
    J: 0x6CDA0
  size: 0x174
  mode: thumb
  params:
  - label: Event
    type: u8
    enum: Event
  return: null
  notes: Updates a minimap chunk (for boss marks and ship)
-
  label: CountTanksInArea
  addr:
    U: 0x6CEF8
    E: 0x6D004
    J: 0x6CF14
  size: 0x168
  mode: thumb
  params: null
  return: null
  notes: Counts the numbers collected tanks in the current area
-
  label: DrawTimeAndTanks
  addr:
    U: 0x6D060
    E: 0x6D16C
    J: 0x6D07C
  size: 0x2D4
  mode: thumb
  params:
  - label: param_0
    type: u8
  - label: param_1
    type: u8
  return: null
  notes: Draw the in game time and the tanks on the map screen
-
  label: GetAllMinimapData
  addr:
    U: 0x6DF80
    E: 0x6E070
    J: 0x6DF9C
  size: 0x7C
  mode: thumb
  params:
  - label: Always0xff
    type: u8
    notes: Always 0xFF?
  return: null
  notes: Loads all the areas minimap in the WRAM
-
  label: CheckExploredAreas
  addr:
    U: 0x6DFFC
    E: 0x6E0EC
    J: 0x6E018
  size: 0x50
  mode: thumb
  params: null
  return: null
  notes: Checks which areas have at least one visited tile bit set used to allow the view of said area in the pause screen
-
  label: MapScreenCheckInput
  addr:
    U: 0x6E04C
    E: 0x6E13C
    J: 0x6E068
  size: 0x1A8
  mode: thumb
  params: null
  return: null
  notes: Subroutine for the map screen
-
  label: MapScreenChangeArea
  addr:
    U: 0x6E2D0
    E: 0x6E3C0
    J: 0x6E2EC
  size: 0x190
  mode: thumb
  params: null
  return: null
  notes: Handles changing the map viewed on the map screen
-
  label: GetCharacterWidth
  addr:
    U: 0x6E460
    E: 0x6E550
    J: 0x6E47C
  size: 0x24
  mode: thumb
  params:
  - label: CharacterId
    type: u16
    notes: Character ID
  return:
    label: CharacterWidth0xaIfInvalid
    type: u8
    notes: Character width (0xA if invalid)
  notes: Gets the width of the character in r0 using the Character Width table
-
  label: DrawCharacterForText
  addr:
    U: 0x6E484
    E: 0x6E574
    J: 0x6E4A0
  size:
    U: 0x4B8
    E: 0x4E4
    J: 0x4B8
  mode: thumb
  params:
  - label: CharacterId
    type: u16
    notes: Character ID
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: Indent
    type: u16
  - label: Color
    type: u8
  return: null
  notes: Draws a character for a text (description in equipment screen and story text)
-
  label: DrawCharacterForMessage
  addr:
    U: 0x6E93C
    E: 0x6EA58
    J: 0x6E958
  size:
    U: 0x5F0
    E: 0x614
    J: 0x5F0
  mode: thumb
  params:
  - label: CharacterId
    type: u16
    notes: Character ID
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: Indent
    type: u16
  - label: Color
    type: u8
  return: null
  notes: Draws a character for a message (item pop-up, area names...)
-
  label: DrawCharacterForLocationText
  addr:
    U: 0x6EF2C
    E: 0x6F06C
    J: 0x6EF48
  size: 0xEC
  mode: thumb
  params:
  - label: param_0
    type: u8
  - label: PtrToTextPtr
    type: void *
    notes: Pointer to text pointer
  return: null
  notes: Draws the characters for the location text in r1
-
  label: DrawLocationText
  addr:
    U: 0x6F018
    E: 0x6F158
    J: 0x6F034
  size:
    U: 0x90
    E: 0x9C
    J: 0x90
  mode: thumb
  params:
  - label: LocationTextId
    type: u8
    notes: Location text ID
  - label: GfxSlot
    type: u8
    notes: Graphics slot
  return: null
  notes: Calls the function above with the good paramaters
-
  label: StartStoryText
  addr:
    U: 0x6F404
    E: 0x6F550
    J: 0x6F420
  size: 0x20
  mode: thumb
  params:
  - label: StoryTextId
    type: u8
    notes: Story text ID
  return: null
  notes: Starts a story text
-
  label: StartFileScreenText
  addr:
    U: 0x6F5A4
    E: 0x6F6F0
    J: 0x6F5C0
  size: 0x20
  mode: thumb
  params:
  - label: MessageNum
    type: u8
    notes: Message number
  return: null
  notes: Starts a file screen text
-
  label: ProcessCurrMessage
  addr:
    U: 0x6F98C
    E: 0x6FAD8
    J: 0x6F9A8
  size: 0x140
  mode: thumb
  params:
  - label: CurrMessagePtr
    type: CurrMessage *
    notes: Current message pointer
  - label: TextPtr
    type: u16 *
    tags:
    - text
    notes: Text pointer
  - label: DestinationAddress
    type: void *
    notes: Destination address
  return:
    label: LineState0NoNewLine1NewLine2MessageEnd
    type: u8
    notes: Line state (0 = No new line, 1 = new line, 2 = message end)
  notes: Processes the current message
-
  label: UpdateMinimapAnimatedPalettes
  addr:
    U: 0x6FD00
    E: 0x6FE4C
    J: 0x6FD1C
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Updates the minimap animated palette
-
  label: UpdateSuitType
  addr:
    U: 0x6FEE4
    E: 0x70030
    J: 0x6FF00
  size: 0x68
  mode: thumb
  params:
  - label: NewSuitType
    type: u8
    enum: SuitType
    notes: New suit type
  return: null
  notes: Updates the suit type of samus
-
  label: DrawStatusScreenItems
  addr:
    U: 0x6FF4C
    E: 0x70098
    J: 0x6FF68
  size: 0xD4
  mode: thumb
  params:
  - label: RowToDraw
    type: u8
    notes: Row to draw
  return:
    label: DoneDrawing
    type: bool
    notes: Done drawing
  notes: Draws the status screen row in r0
-
  label: DrawStatusScreenTanksAmounts
  addr:
    U: 0x70180
    E: 0x702CC
    J: 0x7019C
  size: 0x1A4
  mode: thumb
  params: null
  return: null
  notes: Draws the status screen
-
  label: DrawStatusScreenSingleTankAmount
  addr:
    U: 0x70414
    E: 0x70560
    J: 0x70430
  size: 0x120
  mode: thumb
  params:
  - label: RowToDraw
    type: u8
    notes: Row to draw?
  - label: Amount
    type: u16
  - label: Always0xb
    type: u8
    notes: Always 0xB?
  - label: IsAtMaxFlag
    type: bool
    notes: Is at max flag
  return: null
  notes: Draws a single status screen tank amount
-
  label: SetStatusScreenBombVisibility
  addr:
    U: 0x709C0
    E: 0x70B0C
    J: 0x709DC
  size: 0x26C
  mode: thumb
  params:
  - label: TilemapOffset
    type: u32
    notes: Tilemap offset
  return: null
  notes: Sets the visibiliy for the bombs in the status screen
-
  label: CheckSelectPressedOnStatusScreen
  addr:
    U: 0x70F58
    E: 0x710A4
    J: 0x70F74
  size: 0x14
  mode: thumb
  params:
  - label: Always0x4SelectFlag
    type: u8
    enum: ButtonInput
    notes: Always 0x4 (select flag)
  return:
    label: SelectPressed
    type: bool
    notes: Select pressed
  notes: Checks if the select button is pressed when on the status screen
-
  label: StatusScreenInputRelated
  addr:
    U: 0x71800
    E: 0x7194C
    J: 0x7181C
  size: 0x94
  mode: thumb
  params: null
  return: null
  notes: Subroutine for the status screen
-
  label: GetCurrentEquipmentSelected
  addr:
    U: 0x71894
    E: 0x719E0
    J: 0x718B0
  size: 0x1A8
  mode: thumb
  params:
  - label: StatusSlot
    type: u8
    notes: Status Slot
  return:
    label: EquipmentIdEnumInOrderStartingWithLongBeam0AndEndingWithSpaceJump10UnknownItem11Pistol12AndNone80
    type: u8
    notes: Equipment ID (Enum in order starting with long beam = 0 and ending with space jump = 10, unknown item = 11, pistol = 12 and none = 80)
  notes: Gets the ID of the current equipment selected on the status screen
-
  label: EasySleepMenuSubroutine
  addr:
    U: 0x71F70
    E: 0x720BC
    J: 0x71F8C
  size: 0x1D4
  mode: thumb
  params: null
  return:
    label: 1IfLeavingWithInput2IfLeavingWithNoOption0Otherwise
    type: u8
    notes: 1 if leaving with input, 2 if leaving with "no" option, 0 otherwise
  notes: Subroutine for the easy sleep menu
-
  label: ChozoStatueHintMovement
  addr:
    U: 0x72204
    E: 0x72350
    J: 0x72220
  size: 0x46C
  mode: thumb
  params: null
  return: null
  notes: Handles the movement of the target on a chozo statue hint
-
  label: ChozoStatueHintScrolling
  addr:
    U: 0x72670
    E: 0x727BC
    J: 0x7268C
  size: 0x248
  mode: thumb
  params: null
  return: null
  notes: Handles the camera scrolling on a chozo statue hint
-
  label: ChozoStatueHintSubroutine
  addr:
    U: 0x728B8
    E: 0x72A04
    J: 0x728D4
  size: 0x25C
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for a chozo statue hint
-
  label: ChozoStatueHintChangeArea
  addr:
    U: 0x72B14
    E: 0x72C60
    J: 0x72B30
  size: 0xA4
  mode: thumb
  params:
  - label: ChozoStatueXPositionPtr
    type: void *
    notes: Chozo statue X position pointer
  - label: ChozoStatueYPositionPtr
    type: void *
    notes: Chozo statue Y position pointer
  - label: param_2
    type: void *
  - label: ChozoStatueTargetPathPtr
    type: void *
    notes: Chozo statue target path pointer?
  return: null
  notes: Chozo statue hint change area
-
  label: ChozoStatueHintCheckEvents
  addr:
    U: 0x73050
    E: 0x7319C
    J: 0x7306C
  size: 0x7C
  mode: thumb
  params:
  - label: ArrayOffset
    type: u8
    notes: Array offset?
  return:
    label: 1IfNotActivated0IfActivated1IfDeActivated
    type: s8
    notes: -1 if not activated, 0 if activated, 1 if de-activated
  notes: Checks for events/flags to see if a target is activated
-
  label: CheckActivatedChozoStatueTargets
  addr:
    U: 0x730CC
    E: 0x73218
    J: 0x730E8
  size: 0x3C
  mode: thumb
  params: null
  return: null
  notes: Checks which targets are activated
-
  label: CheckUnvisitedAreaHasChozoHint
  addr:
    U: 0x73108
    E: 0x73254
    J: 0x73124
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Checks if a non-explored area has an hint, used to allow the view of said area in the pause screen
-
  label: DrawMapScreenBossFlames
  addr:
    U: 0x73150
    E: 0x7329C
    J: 0x7316C
  size: 0xF8
  mode: thumb
  params: null
  return: null
  notes: Draws the boss flames target and handles the animation
-
  label: ReadSram
  addr:
    U: 0x7329C
    E: 0x733E8
    J: 0x732B8
  size:
    U: 0x64
    E: 0x50
    J: 0x64
  mode: thumb
  params: null
  return: null
  notes: Main function that reads the SRAM
-
  label: WriteSramData
  addr:
    U: 0x73CE4
    E: 0x73E1C
    J: 0x73D00
  size: 0x350
  mode: thumb
  params: null
  return: null
  notes: Writes to the SRAM
-
  label: LoadSramData
  addr:
    U: 0x74034
    E: 0x7416C
    J: 0x74050
  size: 0x2AC
  mode: thumb
  params: null
  return: null
  notes: Loads the SRAM data of the current save file to the RAM
-
  label: WriteAsciiString
  addr:
    U: 0x742E0
    E: 0x74418
    J: 0x742FC
  size: 0x24
  mode: thumb
  params:
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: StringPtr
    type: s8 *
    tags:
    - ascii
    notes: String pointer
  - label: Length
    type: u8
  return: null
  notes: Writes a string to r0
-
  label: WriteSramArrays
  addr:
    U: 0x747BC
    E: 0x748F4
    J: 0x747D8
  size: 0x100
  mode: thumb
  params: null
  return: null
  notes: Writes the arrays to the SRAM arrays
-
  label: LoadSramArrays
  addr:
    U: 0x748BC
    E: 0x749F4
    J: 0x748D8
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Loads the SRAM arrays of the current save file to the RAM
-
  label: BackupTimeAttackForSram
  addr:
    U: 0x74F58
    E: 0x75090
    J: 0x74F74
  size: 0xB8
  mode: thumb
  params: null
  return: null
  notes: Saves the time attack password/IGT to SRAM flash
-
  label: LoadDemoRamValues
  addr:
    U: 0x75364
    E: 0x7549C
    J: 0x75380
  size: 0x130
  mode: thumb
  params:
  - label: LoadingSamusDataFlag
    type: bool
    notes: Loading Samus data flag
  - label: DemoNum
    type: u8
    notes: Demo number
  return: null
  notes: Loads the demo RAM values
-
  label: CheckLoadSaveFile
  addr:
    U: 0x7596C
    E: 0x75AB0
    J: 0x75990
  size: 0x128
  mode: thumb
  params: null
  return: null
  notes: Checks if the save is new, either calls the Init or Load function
-
  label: InitSaveFile
  addr:
    U: 0x75A94
    E: 0x75BD8
    J: 0x75AB8
  size: 0x164
  mode: thumb
  params: null
  return: null
  notes: Initializes a save file, sets most data to default values (0 or 0xffff)
-
  label: EraseSramMenuSubroutine
  addr:
    U: 0x75C30
    E: 0x75D74
    J: 0x75C54
  size: 0x14C
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the erase SRAM menu
-
  label: EraseSramMenuProcessInput
  addr:
    U: 0x75D7C
    E: 0x75EC0
    J: 0x75DA0
  size: 0x54
  mode: thumb
  params: null
  return:
    label: ReturnValueOfErasesrammenucheckforinput
    type: u8
    notes: Return value of EraseSramMenuCheckForInput
  notes: Processes the inputs
-
  label: EraseSramMenuCheckForInput
  addr:
    U: 0x75E7C
    E: 0x75FC0
    J: 0x75EA0
  size: 0x10C
  mode: thumb
  params: null
  return:
    label: Input0None1Erasing2NoFirstWindow
    type: u8
    notes: Input (0 = none, 1 = erasing, 2 = no first window)
  notes: Checks for input
-
  label: EraseSramMenuInit
  addr:
    U: 0x75F88
    E: 0x760CC
    J: 0x75FAC
  size:
    U: 0x24C
    E: 0x244
    J: 0x244
  mode: thumb
  params: null
  return: null
  notes: Initializes the SRAM Menu
-
  label: EraseSramMenuProcessOAM
  addr:
    U: 0x76364
    E: 0x764A0
    J: 0x76380
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Handles the OAM related stuff
-
  label: LoadSpecialGraphicsData
  addr:
    U: 0x763F0
    E: 0x7652C
    J: 0x7640C
  size: 0x18
  mode: thumb
  params:
  - label: SpecialGfxDataPtr
    type: u8 *
    tags:
    - lz
    - gfx
    notes: Special graphics data pointer
  return: null
  notes: Calls LZ77UnCompReadNormalWrite16bit and loads the graphics data in r0
-
  label: LoadSpecialGraphicsData_Copy
  addr:
    U: 0x76408
    E: 0x76544
    J: 0x76424
  size: 0x18
  mode: thumb
  params:
  - label: SpecialGfxDataPtr
    type: u8 *
    tags:
    - lz
    - gfx
    notes: Special graphics data pointer
  return: null
  notes: Calls LZ77UnCompReadNormalWrite16bit and loads the graphics data in r0, copy of above
-
  label: TitleScreenProcessOAM
  addr:
    U: 0x7644C
    E: 0x76588
    J: 0x76468
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Calls the handler that renders the OAM
-
  label: TitleScreenFadingIn
  addr:
    U: 0x764C8
    E: 0x76604
    J: 0x764E4
  size: 0x118
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the fading in part of the title screen
-
  label: TitleScreenSubroutine
  addr:
    U: 0x771A0
    E: 0x77354
    J: 0x771BC
  size:
    U: 0x178
    E: 0x188
    J: 0x178
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the title screen
-
  label: TitleScreenIdle
  addr:
    U: 0x77318
    E: 0x774DC
    J: 0x77334
  size: 0xB0
  mode: thumb
  params: null
  return:
    label: Action0None1InputDetected2StartingDemo
    type: u8
    notes: Action (0 = none, 1 = input detected 2 = starting demo)
  notes: Handles the sparkles and the logo glow animations
-
  label: TitleScreenInit
  addr:
    U: 0x7745C
    E: 0x77620
    J: 0x77478
  size:
    U: 0x2A0
    E: 0x300
    J: 0x2A0
  mode: thumb
  params: null
  return: null
  notes: Initializes the title screen
-
  label: GameOverSubroutine
  addr:
    U: 0x778C4
    E: 0x77BD0
    J: 0x778E0
  size: 0x210
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the game over menu
-
  label: GameOverMenuDetectInput
  addr:
    U: 0x77AD4
    E: 0x77DE0
    J: 0x77AF0
  size: 0x78
  mode: thumb
  params: null
  return:
    label: AnOptionWasSelected
    type: bool
    notes: An option was selected
  notes: Checks for input
-
  label: GameOverMenuUpdateTextGfx
  addr:
    U: 0x77B4C
    E: 0x77E58
    J: 0x77B68
  size: 0x5C
  mode: thumb
  params: null
  return: null
  notes: Updates the text graphics depending on if it's selected
-
  label: GameOverMenuInit
  addr:
    U: 0x77BA8
    E: 0x77EB4
    J: 0x77BC4
  size:
    U: 0x230
    E: 0x228
    J: 0x230
  mode: thumb
  params: null
  return: null
  notes: Initializes the game over menu
-
  label: GameOverMenuLettersAnimation
  addr:
    U: 0x77FF4
    E: 0x782F4
    J: 0x78010
  size: 0x180
  mode: thumb
  params: null
  return: null
  notes: Handles the animation of the GAME OVER letters
-
  label: GameOverMenuProcessOAM
  addr:
    U: 0x781FC
    E: 0x784FC
    J: 0x78218
  size: 0x2C
  mode: thumb
  params: null
  return: null
  notes: Handles the OAM related stuff
-
  label: FileSelectMenuProcessOAM
  addr:
    U: 0x7824C
    E: 0x7854C
    J: 0x78268
  size: 0x60
  mode: thumb
  params: null
  return: null
  notes: Handles the OAM related stuff
-
  label: CopyTimeAttackTime
  addr:
    U: 0x7A1A4
    E: 0x7A494
    J: 0x7A1C0
  size: 0x118
  mode: thumb
  params: null
  return: null
  notes: Copies the time attack time to non gameplay RAM
-
  label: FileSelectOptionsSubroutine
  addr:
    U: 0x7A7E4
    E: 0x7AAD4
    J: 0x7A800
  size: 0x248
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the settings menu
-
  label: ResetIOTransfterInfo
  addr:
    U: 0x7AA2C
    E: 0x7AD1C
    J: 0x7AA48
  size: 0x48
  mode: thumb
  params: null
  return: null
  notes: Resets the IO transfer info
-
  label: StartNesMetroid
  addr:
    U: 0x7AA74
    E: 0x7AD64
    J: 0x7AA90
  size: 0x150
  mode: thumb
  params: null
  return:
    label: PressedBToCancel
    type: bool
    notes: Pressed B to cancel
  notes: Subroutine for NES Metroid (does not handle running the game)
-
  label: StereoSelectionSubroutine
  addr:
    U: 0x7AC54
    E: 0x7AF44
    J: 0x7AC70
  size: 0xBC
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the stereo selection
-
  label: SoundTestSubroutine
  addr:
    U: 0x7AD10
    E: 0x7B000
    J: 0x7AD2C
  size:
    U: 0x2F8
    E: 0x300
    J: 0x2F8
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the sound test
-
  label: TimeAttackRecordsSubroutine
  addr:
    U: 0x7B144
    E: 0x7B43C
    J: 0x7B160
  size: 0x5D8
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the time attack records
-
  label: LoadTimeAttackTimeForRecord
  addr:
    U: 0x7B744
    E: 0x7BA3C
    J: 0x7B760
  size: 0x110
  mode: thumb
  params:
  - label: TimeAttackId
    type: u8
    notes: Time attack ID
  return: null
  notes: Load time attack time for record
-
  label: LoadTimeAttackPasswordForRecord
  addr:
    U: 0x7B92C
    E: 0x7BC24
    J: 0x7B948
  size: 0xBC
  mode: thumb
  params:
  - label: Part0NormalFirstHalf1NormalSecondHalf2100FirstHalf3100SecondHalf
    type: u8
    notes: Part (0 = normal first half, 1 = normal second half 2 = 100% first half, 3 = 100% second half)
  return: null
  notes: Loads a part of a time attack password in VRAM for the time attack record menu
-
  label: MetroidFusionLinkSubroutine
  addr:
    U: 0x7B9E8
    E: 0x7BCE0
    J: 0x7BA04
  size: 0x73C
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the metroid fusion link
-
  label: FileSelectMenuSubroutine
  addr:
    U: 0x7C124
    E: 0x7C41C
    J: 0x7C140
  size:
    U: 0x1DC
    E: 0x1DC
    J: 0x1EC
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the file select menu
-
  label: FileSelectFading
  addr:
    U: 0x7C300
    E: 0x7C5F8
    J: 0x7C32C
  size: 0x1B0
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the fadings for the file select menu
-
  label: FileSelectMenuInit
  addr:
    U: 0x7C5E0
    E: 0x7C8DC
    J: 0x7C614
  size:
    U: 0x448
    E: 0x480
    J: 0x414
  mode: thumb
  params: null
  return: null
  notes: Initializes the file select menu
-
  label: DisplaySaveFileInfo
  addr:
    U: 0x7CB2C
    E: 0x7CE60
    J: 0x7CB2C
  size: 0x224
  mode: thumb
  params: null
  return: null
  notes: Main function that displays the info on the save files
-
  label: DisplaySaveFileHealth
  addr:
    U: 0x7CD50
    E: 0x7D084
    J: 0x7CD50
  size: 0x74
  mode: thumb
  params:
  - label: FileNum
    type: u8
    notes: File number
  return: null
  notes: Display health on a save file
-
  label: CheckInputtingTimeAttackCode
  addr:
    U: 0x7D588
    E: 0x7D8C0
    J: 0x7D610
  size: 0xA4
  mode: thumb
  params: null
  return:
    label: FullyEntered
    type: bool
    notes: Fully entered
  notes: Checks for the time attack input
-
  label: SoftResetSubroutine
  addr:
    U: 0x7EF9C
    E: 0x7F2D4
    J: 0x7EFF8
  size:
    U: 0x54
    E: 0x160
    J: 0x54
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for a soft reset
-
  label: GetValueFromTimeAttackSeed
  addr:
    U: 0x7F148
    E: 0x7F840
    J: 0x7F1A4
  size: 0x24
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: Value
    type: u32
  return:
    label: SeedValue
    type: u32
    notes: Seed value
  notes: Gets a value from the seed depending on r1
-
  label: GenerateTimeAttackPassword
  addr:
    U: 0x7F2B0
    E: 0x7F9A8
    J: 0x7F30C
  size: 0xC0
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: DestinationArray
    type: void *
    notes: Destination array
  - label: Size
    type: u32
  return: null
  notes: Generates a time attack password based on r0 and puts it in r1
-
  label: IsSaveFileInvalid
  addr:
    U: 0x7F370
    E: 0x7FA68
    J: 0x7F3CC
  size: 0x8C
  mode: thumb
  params: null
  return:
    label: Invalid
    type: bool
  notes: Checks if a save file is legit (Compares IGT at bosses with anti-cheat IGT)
-
  label: TimeAttackPasswordSeedFunction1
  addr:
    U: 0x7F694
    E: 0x7FD90
    J: 0x7F6F0
  size: 0x44
  mode: thumb
  params:
  - label: param_0
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: TimeAttackPasswordSeedFunction2
  addr:
    U: 0x7F6D8
    E: 0x7FDD4
    J: 0x7F734
  size: 0x44
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: TimeAttackPasswordSeedFunction3
  addr:
    U: 0x7F71C
    E: 0x7FE18
    J: 0x7F778
  size: 0x44
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: TimeAttackPasswordSeedFunction4
  addr:
    U: 0x7F760
    E: 0x7FE5C
    J: 0x7F7BC
  size: 0x50
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: TimeAttackPasswordSeedFunction5
  addr:
    U: 0x7F7B0
    E: 0x7FEAC
    J: 0x7F80C
  size: 0x44
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: TimeAttackPasswordSeedFunction6
  addr:
    U: 0x7F7F4
    E: 0x7FEF0
    J: 0x7F850
  size: 0x50
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: TimeAttackPasswordSeedFunction7
  addr:
    U: 0x7F844
    E: 0x7FF40
    J: 0x7F8A0
  size: 0x58
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: TimeAttackPasswordSeedFunction8
  addr:
    U: 0x7F89C
    E: 0x7FF98
    J: 0x7F8F8
  size: 0x60
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: param_1
    type: u32
  return: null
  notes: Function that calls other functions in a pseudo random way to shuffle the seed values
-
  label: RandomizeTimeAttackPasswordSeed
  addr:
    U: 0x7F8FC
    E: 0x7FFF8
    J: 0x7F958
  size: 0x84
  mode: thumb
  params:
  - label: Seed
    type: u32
  - label: RandomNum
    type: u32
    notes: Random number
  return: null
  notes: Randomizes some values of the seed
-
  label: GenerateTimeAttackPasswordSeed
  addr:
    U: 0x7F980
    E: 0x8007C
    J: 0x7F9DC
  size: 0x1C8
  mode: thumb
  params:
  - label: TimeAttackDataPtr
    type: TimeAttackData *
    notes: Time attack data pointer
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Generates a time attack password seed and calls GenerateTimeAttackPassword
-
  label: CheckSetNewTimeAttackRecord
  addr:
    U: 0x7FB48
    E: 0x80244
    J: 0x7FBA4
  size: 0x21C
  mode: thumb
  params: null
  return:
    label: NewRecordSet
    type: bool
    notes: New record set
  notes: Checks if a new time attack record should be set
-
  label: CalculateOamPart4
  addr:
    U: 0x7FF58
    E: 0x80654
    J: 0x7FFB4
  size: 0x19C
  mode: thumb
  params:
  - label: SineYArrayOffset
    type: u16
    notes: Sine Y array offset
  - label: Divisor
    type: u16
  - label: OamSlot
    type: u32
    notes: OAM slot
  return: null
  notes: Calculates the part 4 of the OAM (used for special cases such as cutscenes and menus)
-
  label: VBlankCodeDuringIntroFuzz
  addr:
    U: 0x80184
    E: 0x80884
    J: 0x801E0
  size: 0x58
  mode: thumb
  params: null
  return: null
  notes: Vblank code during intro fuzz
-
  label: IntroInit
  addr:
    U: 0x801DC
    E: 0x808DC
    J: 0x80238
  size:
    U: 0x1D4
    E: 0x1E0
    J: 0x1D4
  mode: thumb
  params: null
  return: null
  notes: Initializes the intro
-
  label: IntroTextProcessOAM
  addr:
    U: 0x803B0
    E: 0x80ABC
    J: 0x8040C
  size: 0x1A0
  mode: thumb
  params: null
  return: null
  notes: Processes the text OAM for the intro
-
  label: IntroEmergencyOrder
  addr:
    U: 0x806D0
    E: 0x80DDC
    J: 0x8072C
  size: 0xE8
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the "Emergency Order" part of the intro
-
  label: IntroShipFlyingTowardsCameraProcessOAM
  addr:
    U: 0x807B8
    E: 0x80EC4
    J: 0x80814
  size: 0x134
  mode: thumb
  params: null
  return: null
  notes: Handles the OAM related stuff for the ship flying towards the camera
-
  label: IntroShipFlyingTowardsCamera
  addr:
    U: 0x808EC
    E: 0x80FF8
    J: 0x80948
  size: 0x9C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the ship flying towards camera part of the intro
-
  label: IntroSamusInHerShip
  addr:
    U: 0x80988
    E: 0x81094
    J: 0x809E4
  size: 0x100
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the samus in her ship part of the intro
-
  label: IntroExterminate
  addr:
    U: 0x80A88
    E: 0x81194
    J: 0x80AE4
  size: 0xF0
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the "Exterminate..." part of the intro
-
  label: IntroViewOfZebesProcessOAM
  addr:
    U: 0x80B78
    E: 0x81284
    J: 0x80BD4
  size: 0x154
  mode: thumb
  params: null
  return: null
  notes: Handles the OAM related stuff for the view of zebes
-
  label: IntroViewOfZebes
  addr:
    U: 0x80CCC
    E: 0x813D8
    J: 0x80D28
  size:
    U: 0x12C
    E: 0x134
    J: 0x12C
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the view of zebes part of the intro
-
  label: IntroDefeat
  addr:
    U: 0x80DF8
    E: 0x8150C
    J: 0x80E54
  size: 0x100
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the "And defeat..." part of the intro
-
  label: IntroMotherBrain
  addr:
    U: 0x80EF8
    E: 0x8160C
    J: 0x80F54
  size: 0x120
  mode: thumb
  params: null
  return:
    label: Always0
    type: bool
    notes: Always 0
  notes: Handles the mother brain view part of the intro
-
  label: IntroFuzzProcessOAM
  addr:
    U: 0x81018
    E: 0x8172C
    J: 0x81074
  size: 0x88
  mode: thumb
  params: null
  return: null
  notes: Handles the OAM related stuff for the fuzz
-
  label: IntroFuzz
  addr:
    U: 0x810A0
    E: 0x817B4
    J: 0x810FC
  size:
    U: 0xDC
    E: 0xD4
    J: 0xDC
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the fuzz part of the intro
-
  label: TitleIntroSubroutine
  addr:
    U: 0x8117C
    E: 0x81888
    J: 0x811D8
  size: 0xCC
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the intro
-
  label: VBlankCodeDuringIntro
  addr:
    U: 0x81248
    E: 0x81954
    J: 0x812A4
  size: 0xD8
  mode: thumb
  params: null
  return: null
  notes: Vblank code during intro
-
  label: TourianEscapeSamusSurroundedCalculateBG2Position
  addr:
    U: 0x81684
    E: 0x81D90
    J: 0x816E0
  size: 0x104
  mode: thumb
  params: null
  return: null
  notes: Calculates the new position and size of the BG2 for the camera zooming out effect
-
  label: TourianEscapeInit
  addr:
    U: 0x81D04
    E: 0x823FC
    J: 0x81D60
  size:
    U: 0x12C
    E: 0x120
    J: 0x12C
  mode: thumb
  params: null
  return: null
  notes: Initializes the tourian escape
-
  label: TourianEscapeZebesExploding
  addr:
    U: 0x81E30
    E: 0x8251C
    J: 0x81E8C
  size:
    U: 0x834
    E: 0x830
    J: 0x834
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the rooms exploding and the ship leaving the planet with zebes exploding in the background part of the cutscene
-
  label: TourianEscapeSamusInHerShip
  addr:
    U: 0x82664
    E: 0x82D4C
    J: 0x826C0
  size:
    U: 0x36C
    E: 0x354
    J: 0x36C
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus in her ship part of the cutscene
-
  label: TourianEscapeSamusLookingAround
  addr:
    U: 0x829D0
    E: 0x830A0
    J: 0x82A2C
  size:
    U: 0x288
    E: 0x280
    J: 0x288
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus looking left and right in her ship part of the cutscene
-
  label: TourianEscapeSamusSurrounded
  addr:
    U: 0x82C58
    E: 0x83320
    J: 0x82CB4
  size:
    U: 0x178
    E: 0x174
    J: 0x178
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus being surrounded by space pirates part of the cutscene
-
  label: TourianEscapeSamusFlyingIn
  addr:
    U: 0x82DD0
    E: 0x83494
    J: 0x82E2C
  size: 0x1D0
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus flying towards the camera part of the cutscene
-
  label: TourianEscapeSamusChasedByPirates
  addr:
    U: 0x82FA0
    E: 0x83664
    J: 0x82FFC
  size:
    U: 0x424
    E: 0x420
    J: 0x424
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus being chased by pirates part of the cutscene
-
  label: TourianEscapeSamusChasedPiratesFiring
  addr:
    U: 0x833C4
    E: 0x83A84
    J: 0x83420
  size:
    U: 0x49C
    E: 0x488
    J: 0x49C
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus being chased by pirates that shoots beams part of the cutscene
-
  label: TourianEscapeSamusGettingShot
  addr:
    U: 0x83860
    E: 0x83F0C
    J: 0x838BC
  size:
    U: 0x4B0
    E: 0x4A8
    J: 0x4B0
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus flying in space and getting shot down part of the cutscene
-
  label: TourianEscapeSamusGoingToCrash
  addr:
    U: 0x83D10
    E: 0x843B4
    J: 0x83D6C
  size:
    U: 0x198
    E: 0x194
    J: 0x198
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus going to crash on zebes part of the cutscene
-
  label: TourianEscapeSamusCrashing
  addr:
    U: 0x83EA8
    E: 0x84548
    J: 0x83F04
  size:
    U: 0x25C
    E: 0x250
    J: 0x25C
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus crashing on zebes part of the cutscene
-
  label: TourianEscapeSamusLookingAtSky
  addr:
    U: 0x84104
    E: 0x84798
    J: 0x84160
  size:
    U: 0x288
    E: 0x28C
    J: 0x288
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus looking at the sky part of the cutscene
-
  label: TourianEscapeSamusLookingAtMotherShip
  addr:
    U: 0x8438C
    E: 0x84A24
    J: 0x843E8
  size:
    U: 0x388
    E: 0x378
    J: 0x388
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the samus looking at the mother ship part of the cutscene
-
  label: TourianEscapeCallSubroutines
  addr:
    U: 0x84714
    E: 0x84D9C
    J: 0x84770
  size: 0xE4
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Calls the other subroutines for the tourian escape cutscene, ends when the big monologue text ended
-
  label: FusionGalleryInit
  addr:
    U: 0x84870
    E: 0x84EF8
    J: 0x848CC
  size:
    U: 0x1D0
    E: 0x1D4
    J: 0x1D0
  mode: thumb
  params: null
  return: null
  notes: Initializes the fusion gallery
-
  label: FusionGalleryDisplay
  addr:
    U: 0x84A40
    E: 0x850CC
    J: 0x84A9C
  size: 0x120
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Handles the gallery displaying the fusion images
-
  label: FusionGallerySubroutine
  addr:
    U: 0x84B60
    E: 0x851EC
    J: 0x84BBC
  size: 0xD4
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the fusion gallery
-
  label: LoadInGameTimerEndingGraphics
  addr:
    U: 0x84FB0
    E: 0x85B44
    J: 0x8500C
  size:
    U: 0x204
    E: 0x234
    J: 0x204
  mode: thumb
  params: null
  return: null
  notes: Loads the graphics for the IGT and completion percentage display at the end of the game
-
  label: VBlankCodeDuringGallery
  addr:
    U: 0x851B4
    E: 0x85D78
    J: 0x85210
  size: 0x164
  mode: thumb
  params: null
  return: null
  notes: Vblank code during gallery, ending image and credits
-
  label: VBlankCodeDuringEndScreen
  addr:
    U: 0x85318
    E: 0x85EDC
    J: 0x85374
  size: 0xA8
  mode: thumb
  params: null
  return: null
  notes: Vblank code during end screen
-
  label: VBlankCodeDuringUnlockedOptions
  addr:
    U: 0x853C0
    E: 0x85F84
    J: 0x8541C
  size: 0xA4
  mode: thumb
  params: null
  return: null
  notes: Vblank code during unlocked options
-
  label: CreditsInit
  addr:
    U: 0x85464
    E: 0x86028
    J: 0x854C0
  size:
    U: 0x1F8
    E: 0x1F4
    J: 0x1F8
  mode: thumb
  params: null
  return: null
  notes: Initializes the credits
-
  label: DisplayCreditLine
  addr:
    U: 0x8565C
    E: 0x8621C
    J: 0x856B8
  size:
    U: 0x398
    E: 0x3F0
    J: 0x398
  mode: thumb
  params:
  - label: LineNum
    type: u32
    notes: Line Number
  return:
    label: unk
    type: u32
  notes: Displays a line of text in the credits
-
  label: DisplayCredits
  addr:
    U: 0x859F4
    E: 0x8660C
    J: 0x85A50
  size: 0x18C
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Displays the credits
-
  label: CreditsChozoWallMovement
  addr:
    U: 0x85B80
    E: 0x86798
    J: 0x85BDC
  size: 0x90
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the scrolling of the wall at the end of the credits
-
  label: CreditsChozoWallZoom
  addr:
    U: 0x85C10
    E: 0x86828
    J: 0x85C6C
  size:
    U: 0x1F8
    E: 0x1F0
    J: 0x1F8
  mode: thumb
  params: null
  return:
    label: 2IfEnded0Otherwise
    type: u8
    notes: 2 if ended, 0 otherwise
  notes: Handles the zooming on the chozo wall at the end of the credits
-
  label: EndScreenInit
  addr:
    U: 0x85E08
    E: 0x86A18
    J: 0x85E64
  size:
    U: 0x248
    E: 0x244
    J: 0x248
  mode: thumb
  params: null
  return: null
  notes: Initializes the end screen (before the ending image and after the credits)
-
  label: EndScreenSamusPosing
  addr:
    U: 0x86050
    E: 0x86C5C
    J: 0x860AC
  size:
    U: 0x764
    E: 0x77C
    J: 0x764
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles samus posing before the ending image
-
  label: EndingImageInit
  addr:
    U: 0x867B4
    E: 0x873D8
    J: 0x86810
  size:
    U: 0x29C
    E: 0x320
    J: 0x29C
  mode: thumb
  params: null
  return: null
  notes: Initializes the ending image
-
  label: EndingImageDisplayText
  addr:
    U: 0x86A50
    E: 0x876F8
    J: 0x86AAC
  size:
    U: 0x23C
    E: 0x244
    J: 0x23C
  mode: thumb
  params: null
  return: null
  notes: Displays the text on an ending image (IGT and completion percentage)
-
  label: EndingImageDisplay
  addr:
    U: 0x86C8C
    E: 0x8793C
    J: 0x86CE8
  size: 0x1EC
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the display of the ending image
-
  label: UnlockedOptionsInit
  addr:
    U: 0x86E78
    E: 0x87B28
    J: 0x86ED4
  size:
    U: 0x158
    E: 0x148
    J: 0x158
  mode: thumb
  params: null
  return: null
  notes: Initializes the unlocked options pop up after the ending image
-
  label: UnlockedOptionsPopUp
  addr:
    U: 0x86FD0
    E: 0x87C70
    J: 0x8702C
  size: 0x20C
  mode: thumb
  params: null
  return:
    label: Action0Nothing1ChangingPopUp2Leaving
    type: u8
    notes: Action (0 = nothing, 1 = changing pop-up, 2 = leaving)
  notes: Handles the pop up displaying what has been unlocked after beating the game
-
  label: CreditsSubroutine
  addr:
    U: 0x871DC
    E: 0x87E7C
    J: 0x87238
  size: 0x208
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the credits (credits, end screen ending image and unlocked options)
-
  label: GalleryInit
  addr:
    U: 0x873E4
    E: 0x88084
    J: 0x87440
  size: 0x238
  mode: thumb
  params: null
  return: null
  notes: Initializes the gallery
-
  label: GalleryDisplay
  addr:
    U: 0x8761C
    E: 0x882BC
    J: 0x87678
  size: 0x15C
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Handles the gallery displaying the ending images
-
  label: GallerySubroutine
  addr:
    U: 0x87778
    E: 0x88418
    J: 0x877D4
  size: 0xD4
  mode: thumb
  params: null
  return:
    label: Leaving
    type: bool
  notes: Subroutine for the gallery
-
  label: VBlankDuringChozodiaEscape
  addr:
    U: 0x8784C
    E: 0x884EC
    J: 0x878A8
  size: 0xEC
  mode: thumb
  params: null
  return: null
  notes: Vblank code during the chozodia escape
-
  label: GetPercentAndEndingNum
  addr:
    U: 0x87AEC
    E: 0x8878C
    J: 0x87B48
  size: 0x11C
  mode: thumb
  params: null
  return:
    label: ItemCountsAndEndingNum
    type: u32
    notes: Item counts and ending number
  notes: Calculates the ending percentage and determines the ending number
-
  label: ChozodiaEscapeProcessOAM
  addr:
    U: 0x87C08
    E: 0x888A8
    J: 0x87C64
  size: 0xF4
  mode: thumb
  params: null
  return: null
  notes: Processes a part of the OAM related stuff (ship exploding, escape ship leaving the planet and mission accomplished text)
-
  label: ChozodiaEscapeProcessOAM2
  addr:
    U: 0x87CFC
    E: 0x8899C
    J: 0x87D58
  size: 0x150
  mode: thumb
  params: null
  return: null
  notes: Processes a part of the OAM related stuff (ship opening/escape ship leaving and escape ship arriving)
-
  label: ChozodiaEscapeInit
  addr:
    U: 0x87E4C
    E: 0x88AEC
    J: 0x87EA8
  size:
    U: 0x30C
    E: 0x308
    J: 0x30C
  mode: thumb
  params: null
  return: null
  notes: Initializes the chozodia escape
-
  label: ChozodiaEscapeEscapeShipLeaving
  addr:
    U: 0x88158
    E: 0x88DF4
    J: 0x881B4
  size: 0x184
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the escape ship leaving part
-
  label: ChozodiaEscapeMotherShipHeatingUp
  addr:
    U: 0x882DC
    E: 0x88F78
    J: 0x88338
  size: 0x22C
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the mother ship heating up part
-
  label: ChozodiaEscapeMotherShipBlowingUp
  addr:
    U: 0x88508
    E: 0x891A4
    J: 0x88564
  size:
    U: 0x3EC
    E: 0x3E4
    J: 0x3EC
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the mother ship blowing up part
-
  label: ChozodiaEscapeEscapeShipLeavingPlanet
  addr:
    U: 0x888F4
    E: 0x89588
    J: 0x88950
  size:
    U: 0x30C
    E: 0x31C
    J: 0x30C
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Handles the escape ship leaving the planet part
-
  label: ChozodiaEscapeMissionAccomplished
  addr:
    U: 0x88C00
    E: 0x898A4
    J: 0x88C5C
  size:
    U: 0x15C
    E: 0x144
    J: 0x15C
  mode: thumb
  params: null
  return:
    label: 2IfEnded0Otherwise
    type: u8
    notes: 2 if ended, 0 otherwise
  notes: Handles the mission accomplished part
-
  label: ChozodiaEscapeSubroutine
  addr:
    U: 0x88D5C
    E: 0x899E8
    J: 0x88DB8
  size: 0x144
  mode: thumb
  params: null
  return:
    label: Ended
    type: bool
  notes: Subroutine for the chozodia escape
-
  label: SetSIOCNTStartBitActive
  addr:
    U: 0x89D64
    E: 0x8A9F0
    J: 0x89DC0
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Sets the "Start Bit" flag of SIOCNT
-
  label: CheckError
  addr:
    U: 0x89F94
    E: 0x8AC20
    J: 0x89FF0
  size: 0x198
  mode: thumb
  params: null
  return:
    label: unk
    type: u32
  notes: Checks if an error has occured and calls DisplayError? If yes
-
  label: DetectError
  addr:
    U: 0x8A3AC
    E: 0x8B038
    J: 0x8A408
  size: 0x120
  mode: thumb
  params:
  - label: param_0
    type: u32
  - label: param_1
    type: u32
  - label: param_2
    type: u32
  return:
    label: ErrorFlag
    type: bool
    notes: Error flag
  notes: Detects if an error has occured
-
  label: SetSIOCNTStartBitActive_Duplicate
  addr:
    U: 0x8A840
    E: 0x8B4CC
    J: 0x8A89C
  size: 0x10
  mode: thumb
  params: null
  return: null
  notes: Sets the "Start Bit" flag of SIOCNT, same code as 89d64
-
  label: bx_r0
  addr:
    U: 0x8ABF8
    E: 0x8B884
    J: 0x8AC54
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r0
-
  label: bx_r1
  addr:
    U: 0x8ABFC
    E: 0x8B888
    J: 0x8AC58
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r1
-
  label: bx_r2
  addr:
    U: 0x8AC00
    E: 0x8B88C
    J: 0x8AC5C
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r2
-
  label: bx_r3
  addr:
    U: 0x8AC04
    E: 0x8B890
    J: 0x8AC60
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r3
-
  label: bx_r4
  addr:
    U: 0x8AC08
    E: 0x8B894
    J: 0x8AC64
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r4
-
  label: bx_r5
  addr:
    U: 0x8AC0C
    E: 0x8B898
    J: 0x8AC68
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r5
-
  label: bx_r6
  addr:
    U: 0x8AC10
    E: 0x8B89C
    J: 0x8AC6C
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r6
-
  label: bx_r7
  addr:
    U: 0x8AC14
    E: 0x8B8A0
    J: 0x8AC70
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r7
-
  label: bx_r8
  addr:
    U: 0x8AC18
    E: 0x8B8A4
    J: 0x8AC74
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r8
-
  label: bx_r9
  addr:
    U: 0x8AC1C
    E: 0x8B8A8
    J: 0x8AC78
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r9
-
  label: bx_r10
  addr:
    U: 0x8AC20
    E: 0x8B8AC
    J: 0x8AC7C
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r10
-
  label: bx_r11
  addr:
    U: 0x8AC24
    E: 0x8B8B0
    J: 0x8AC80
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r11
-
  label: bx_r12
  addr:
    U: 0x8AC28
    E: 0x8B8B4
    J: 0x8AC84
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r12
-
  label: bx_r13
  addr:
    U: 0x8AC2C
    E: 0x8B8B8
    J: 0x8AC88
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r13
-
  label: bx_r14
  addr:
    U: 0x8AC30
    E: 0x8B8BC
    J: 0x8AC8C
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: bx r14
-
  label: Divide_Signed
  addr:
    U: 0x8AC34
    E: 0x8B8C0
    J: 0x8AC90
  size: 0x94
  mode: thumb
  params:
  - label: Dividend
    type: s32
  - label: Divisor
    type: s32
  return:
    label: Quotient
    type: s32
  notes: Function __divsi3 from divmod.c in libgcc
-
  label: DivideBy0Handler
  addr:
    U: 0x8ACC8
    E: 0x8B954
    J: 0x8AD24
  size: 0x4
  mode: thumb
  params: null
  return: null
  notes: Divide by 0 handler (empty)
-
  label: DoubleToInt_Overflow
  addr:
    U: 0x8ACCC
    E: 0x8B958
    J: 0x8AD28
  size: 0x44
  mode: thumb
  params:
  - label: DoubleUpper32Bits
    type: u32
    notes: Double upper 32 bits
  - label: DoubleLower32Bits
    type: u32
    notes: Double lower 32 bits
  return:
    label: Integer
    type: s32
  notes: If the double is >= 2^31, treat as integer overflow and return a negative value
-
  label: Modulo_Signed
  addr:
    U: 0x8AD10
    E: 0x8B99C
    J: 0x8AD6C
  size: 0xD0
  mode: thumb
  params:
  - label: Dividend
    type: s32
  - label: Divisor
    type: s32
  return:
    label: Remainder
    type: s32
  notes: Function __modsi3 from divmod.c in libgcc
-
  label: Divide_Unsigned
  addr:
    U: 0x8ADE0
    E: 0x8BA6C
    J: 0x8AE3C
  size: 0x78
  mode: thumb
  params:
  - label: Dividend
    type: u32
  - label: Divisor
    type: u32
  return:
    label: Quotient
    type: u32
  notes: Function __udivsi3 from udivmod.c in libgcc
-
  label: Modulo_Unsigned
  addr:
    U: 0x8AE58
    E: 0x8BAE4
    J: 0x8AEB4
  size: 0xC0
  mode: thumb
  params:
  - label: Dividend
    type: u32
  - label: Divisor
    type: u32
  return:
    label: Remainder
    type: u32
  notes: Function __umodsi3 from udivmod.c in libgcc
-
  label: PackDouble
  addr:
    U: 0x8AF18
    E: 0x8BBA4
    J: 0x8AF74
  size: 0x148
  mode: thumb
  params:
  - label: PtrToUnpackedData
    type: FloatingPointNum *
    notes: Pointer to unpacked data
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function pack_d from fp-bit.c in libgcc
-
  label: UnpackDouble
  addr:
    U: 0x8B060
    E: 0x8BCEC
    J: 0x8B0BC
  size: 0xD8
  mode: thumb
  params:
  - label: PtrToDoubleValue
    type: void *
    notes: Pointer to double value
  - label: PtrToUnpackedData
    type: FloatingPointNum *
    notes: Pointer to unpacked data
  return: null
  notes: Function unpack_d in fp-bit.c in libgcc
-
  label: AddDoubleParts
  addr:
    U: 0x8B138
    E: 0x8BDC4
    J: 0x8B194
  size: 0x26C
  mode: thumb
  params:
  - label: PtrToUnpackedDouble1
    type: FloatingPointNum *
    notes: Pointer to unpacked double 1
  - label: PtrToUnpackedDouble2
    type: FloatingPointNum *
    notes: Pointer to unpacked double 2
  - label: PtrToTempUnpackedDouble
    type: FloatingPointNum *
    notes: Pointer to temp unpacked double
  return:
    label: PtrToUnpackedDoubleResult
    type: FloatingPointNum *
    notes: Pointer to unpacked double result
  notes: Function _fpadd_parts in fp-bit.c in libgcc
-
  label: AddDoubles
  addr:
    U: 0x8B3A4
    E: 0x8C030
    J: 0x8B400
  size: 0x30
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function add from fp-bit.c in libgcc
-
  label: SubtractDoubles
  addr:
    U: 0x8B3D4
    E: 0x8C060
    J: 0x8B430
  size: 0x38
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function sub from fp-bit.c in libgcc
-
  label: MultiplyDoubles
  addr:
    U: 0x8B40C
    E: 0x8C098
    J: 0x8B468
  size: 0x2A8
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function multiply from fp-bit.c in libgcc
-
  label: DivideDoubles
  addr:
    U: 0x8B6B4
    E: 0x8C340
    J: 0x8B710
  size: 0x188
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function divide from fp-bit.c in libgcc
-
  label: CompareDoubleParts
  addr:
    U: 0x8B83C
    E: 0x8C4C8
    J: 0x8B898
  size: 0x100
  mode: thumb
  params:
  - label: PtrToUnpackedDouble1
    type: FloatingPointNum *
    notes: Pointer to unpacked double 1
  - label: PtrToUnpackedDouble2
    type: FloatingPointNum *
    notes: Pointer to unpacked double 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function __fpcmp_parts from fp-bit.c in libgcc
-
  label: CompareDoubles
  addr:
    U: 0x8B93C
    E: 0x8C5C8
    J: 0x8B998
  size: 0x2C
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function compare from fp-bit.c in libgcc
-
  label: DoublesEqual
  addr:
    U: 0x8B968
    E: 0x8C5F4
    J: 0x8B9C4
  size: 0x4C
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _eq_f2 from fp-bit.c in libgcc
-
  label: DoublesNotEqual
  addr:
    U: 0x8B9B4
    E: 0x8C640
    J: 0x8BA10
  size: 0x4C
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _ne_f2 from fp-bit.c in libgcc
-
  label: DoublesGreaterThan
  addr:
    U: 0x8BA00
    E: 0x8C68C
    J: 0x8BA5C
  size: 0x4C
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _gt_f2 from fp-bit.c in libgcc
-
  label: DoublesGreaterEqual
  addr:
    U: 0x8BA4C
    E: 0x8C6D8
    J: 0x8BAA8
  size: 0x4C
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _ge_f2 from fp-bit.c in libgcc
-
  label: DoublesLessThan
  addr:
    U: 0x8BA98
    E: 0x8C724
    J: 0x8BAF4
  size: 0x4C
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _lt_f2 from fp-bit.c in libgcc
-
  label: DoublesLessEqual
  addr:
    U: 0x8BAE4
    E: 0x8C770
    J: 0x8BB40
  size: 0x4C
  mode: thumb
  params:
  - label: Double1Upper32Bits
    type: u32
    notes: Double 1 upper 32 bits
  - label: Double1Lower32Bits
    type: u32
    notes: Double 1 lower 32 bits
  - label: Double2Upper32Bits
    type: u32
    notes: Double 2 upper 32 bits
  - label: Double2Lower32Bits
    type: u32
    notes: Double 2 lower 32 bits
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _le_f2 from fp-bit.c in libgcc
-
  label: IntToDouble
  addr:
    U: 0x8BB30
    E: 0x8C7BC
    J: 0x8BB8C
  size: 0x7C
  mode: thumb
  params:
  - label: Integer
    type: s32
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function si_to_float from fp-bit.c in libgcc
-
  label: DoubleToInt
  addr:
    U: 0x8BBAC
    E: 0x8C838
    J: 0x8BC08
  size: 0x74
  mode: thumb
  params:
  - label: DoubleUpper32Bits
    type: u32
    notes: Double upper 32 bits
  - label: DoubleLower32Bits
    type: u32
    notes: Double lower 32 bits
  return:
    label: Integer
    type: s32
  notes: Function float_to_si from fp-bit.c in libgcc
-
  label: NegateDouble
  addr:
    U: 0x8BC20
    E: 0x8C8AC
    J: 0x8BC7C
  size: 0x28
  mode: thumb
  params:
  - label: DoubleUpper32Bits
    type: u32
    notes: Double upper 32 bits
  - label: DoubleLower32Bits
    type: u32
    notes: Double lower 32 bits
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function negate from fp-bit.c in libgcc
-
  label: CreateDouble
  addr:
    U: 0x8BC48
    E: 0x8C8D4
    J: 0x8BCA4
  size: 0x28
  mode: thumb
  params:
  - label: Class
    type: u32
    enum: FloatingPointClass
  - label: Sign
    type: u32
  - label: NormalizedExponent
    type: s32
    notes: Normalized exponent
  - label: FractionLowerBits
    type: u32
    notes: Fraction lower bits
  - label: FractionUpperBits
    type: u32
    notes: Fraction upper bits
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function __make_dp from fp-bit.c in libgcc
-
  label: DoubleToFloat
  addr:
    U: 0x8BC70
    E: 0x8C8FC
    J: 0x8BCCC
  size: 0x44
  mode: thumb
  params:
  - label: DoubleUpper32Bits
    type: u32
    notes: Double upper 32 bits
  - label: DoubleLower32Bits
    type: u32
    notes: Double lower 32 bits
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function df_to_sf from fp-bit.c in libgcc
-
  label: PackFloat
  addr:
    U: 0x8BCB4
    E: 0x8C940
    J: 0x8BD10
  size: 0xB8
  mode: thumb
  params:
  - label: PtrToUnpackedData
    type: FloatingPointNum *
    notes: Pointer to unpacked data
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function pack_d from fp-bit.c in libgcc
-
  label: UnpackFloat
  addr:
    U: 0x8BD6C
    E: 0x8C9F8
    J: 0x8BDC8
  size: 0x7C
  mode: thumb
  params:
  - label: PtrToFloatValue
    type: void *
    notes: Pointer to float value
  - label: PtrToUnpackedData
    type: FloatingPointNum *
    notes: Pointer to unpacked data
  return: null
  notes: Function unpack_d in fp-bit.c in libgcc
-
  label: AddFloatParts
  addr:
    U: 0x8BDE8
    E: 0x8CA74
    J: 0x8BE44
  size: 0x17C
  mode: thumb
  params:
  - label: PtrToUnpackedFloat1
    type: FloatingPointNum *
    notes: Pointer to unpacked float 1
  - label: PtrToUnpackedFloat2
    type: FloatingPointNum *
    notes: Pointer to unpacked float 2
  - label: PtrToTempUnpackedFloat
    type: FloatingPointNum *
    notes: Pointer to temp unpacked float
  return:
    label: PtrToUnpackedFloatResult
    type: FloatingPointNum *
    notes: Pointer to unpacked float result
  notes: Function _fpadd_parts in fp-bit.c in libgcc
-
  label: AddFloats
  addr:
    U: 0x8BF64
    E: 0x8CBF0
    J: 0x8BFC0
  size: 0x2C
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function add from fp-bit.c in libgcc
-
  label: SubtractFloats
  addr:
    U: 0x8BF90
    E: 0x8CC1C
    J: 0x8BFEC
  size: 0x34
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function sub from fp-bit.c in libgcc
-
  label: MultiplyFloats
  addr:
    U: 0x8BFC4
    E: 0x8CC50
    J: 0x8C020
  size: 0x164
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function multiply from fp-bit.c in libgcc
-
  label: DivideFloats
  addr:
    U: 0x8C128
    E: 0x8CDB4
    J: 0x8C184
  size: 0xEC
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function divide from fp-bit.c in libgcc
-
  label: CompareFloatParts
  addr:
    U: 0x8C214
    E: 0x8CEA0
    J: 0x8C270
  size: 0xE4
  mode: thumb
  params:
  - label: PtrToUnpackedFloat1
    type: FloatingPointNum *
    notes: Pointer to unpacked float 1
  - label: PtrToUnpackedFloat2
    type: FloatingPointNum *
    notes: Pointer to unpacked float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function __fpcmp_parts from fp-bit.c in libgcc
-
  label: CompareFloats
  addr:
    U: 0x8C2F8
    E: 0x8CF84
    J: 0x8C354
  size: 0x28
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function compare from fp-bit.c in libgcc
-
  label: FloatsEqual
  addr:
    U: 0x8C320
    E: 0x8CFAC
    J: 0x8C37C
  size: 0x48
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _eq_f2 from fp-bit.c in libgcc
-
  label: FloatsNotEqual
  addr:
    U: 0x8C368
    E: 0x8CFF4
    J: 0x8C3C4
  size: 0x48
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _ne_f2 from fp-bit.c in libgcc
-
  label: FloatsGreaterThan
  addr:
    U: 0x8C3B0
    E: 0x8D03C
    J: 0x8C40C
  size: 0x48
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _gt_f2 from fp-bit.c in libgcc
-
  label: FloatsGreaterEqual
  addr:
    U: 0x8C3F8
    E: 0x8D084
    J: 0x8C454
  size: 0x48
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _ge_f2 from fp-bit.c in libgcc
-
  label: FloatsLessThan
  addr:
    U: 0x8C440
    E: 0x8D0CC
    J: 0x8C49C
  size: 0x48
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _lt_f2 from fp-bit.c in libgcc
-
  label: FloatsLessEqual
  addr:
    U: 0x8C488
    E: 0x8D114
    J: 0x8C4E4
  size: 0x48
  mode: thumb
  params:
  - label: Float1
    type: u32
    notes: Float 1
  - label: Float2
    type: u32
    notes: Float 2
  return:
    label: ComparisonResult1Less0Equal1Greater
    type: s8
    notes: Comparison result (-1 = less, 0 = equal, 1 = greater)
  notes: Function _le_f2 from fp-bit.c in libgcc
-
  label: IntToFloat
  addr:
    U: 0x8C4D0
    E: 0x8D15C
    J: 0x8C52C
  size: 0x60
  mode: thumb
  params:
  - label: Integer
    type: s32
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function si_to_float from fp-bit.c in libgcc
-
  label: FloatToInt
  addr:
    U: 0x8C530
    E: 0x8D1BC
    J: 0x8C58C
  size: 0x68
  mode: thumb
  params:
  - label: FloatValue
    type: u32
    notes: Float value
  return:
    label: Integer
    type: s32
  notes: Function float_to_si from fp-bit.c in libgcc
-
  label: NegateFloat
  addr:
    U: 0x8C598
    E: 0x8D224
    J: 0x8C5F4
  size: 0x24
  mode: thumb
  params:
  - label: FloatValue
    type: u32
    notes: Float value
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function negate from fp-bit.c in libgcc
-
  label: CreateFloat
  addr:
    U: 0x8C5BC
    E: 0x8D248
    J: 0x8C618
  size: 0x18
  mode: thumb
  params:
  - label: Class
    type: u32
    enum: FloatingPointClass
  - label: Sign
    type: u32
  - label: NormalizedExponent
    type: s32
    notes: Normalized exponent
  - label: Fraction
    type: u32
  return:
    label: FloatValue
    type: u32
    notes: Float value
  notes: Function __make_fp from fp-bit.c in libgcc
-
  label: FloatToDouble
  addr:
    U: 0x8C5D4
    E: 0x8D260
    J: 0x8C630
  size: 0x2C
  mode: thumb
  params:
  - label: FloatValue
    type: u32
    notes: Float value
  return:
    label: DoubleValueUsesR0AndR1
    type: u32
    notes: Double value (uses r0 and r1)
  notes: Function sf_to_df from fp-bit.c in libgcc
-
  label: RightShiftLongInt
  addr:
    U: 0x8C600
    E: 0x8D28C
    J: 0x8C65C
  size: 0x34
  mode: thumb
  params:
  - label: LongIntLower32Bits
    type: u32
    notes: Long int lower 32 bits
  - label: LongIntUpper32Bits
    type: u32
    notes: Long int upper 32 bits
  - label: ShiftAmount
    type: u32
    notes: Shift amount
  return:
    label: LongIntUsesR0AndR1
    type: u32
    notes: Long int (uses r0 and r1)
  notes: Right shift long integer
-
  label: MultiplyLongInts
  addr:
    U: 0x8C634
    E: 0x8D2C0
    J: 0x8C690
  size: 0x70
  mode: thumb
  params:
  - label: LongInt1Lower32Bits
    type: u32
    notes: Long int 1 lower 32 bits
  - label: LongInt1Upper32Bits
    type: u32
    notes: Long int 1 upper 32 bits
  - label: LongInt2Lower32Bits
    type: u32
    notes: Long int 2 lower 32 bits
  - label: LongInt2Upper32Bits
    type: u32
    notes: Long int 2 upper 32 bits
  return:
    label: LongIntUsesR0AndR1
    type: u32
    notes: Long int (uses r0 and r1)
  notes: Multiply long integers
-
  label: NegateLongInt
  addr:
    U: 0x8C6A4
    E: 0x8D330
    J: 0x8C700
  size: 0x18
  mode: thumb
  params:
  - label: LongIntLower32Bits
    type: u32
    notes: Long int lower 32 bits
  - label: LongIntUpper32Bits
    type: u32
    notes: Long int upper 32 bits
  return:
    label: LongIntUsesR0AndR1
    type: u32
    notes: Long int (uses r0 and r1)
  notes: Negate long integer
-
  label: MemoryCopy
  addr:
    U: 0x8C6BC
    E: 0x8D348
    J: 0x8C718
  size: 0x60
  mode: thumb
  params:
  - label: DestinationAddress
    type: void *
    notes: Destination address
  - label: SourceAddress
    type: void *
    notes: Source address
  - label: Size
    type: u32
  return:
    label: DestinationAddress
    type: void *
    notes: Destination address
  notes: Function memcpy from memcpy.c in libgcc
